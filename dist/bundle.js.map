{"version":3,"sources":["webpack:///dist/bundle.js","webpack:///webpack/bootstrap e685bd18367de6561e65","webpack:///./src/ts/app.ts","webpack:///./~/babel-polyfill/lib/index.js","webpack:///./~/core-js/shim.js","webpack:///./~/core-js/modules/es6.symbol.js","webpack:///./~/core-js/modules/_global.js","webpack:///./~/core-js/modules/_has.js","webpack:///./~/core-js/modules/_descriptors.js","webpack:///./~/core-js/modules/_fails.js","webpack:///./~/core-js/modules/_export.js","webpack:///./~/core-js/modules/_core.js","webpack:///./~/core-js/modules/_hide.js","webpack:///./~/core-js/modules/_object-dp.js","webpack:///./~/core-js/modules/_an-object.js","webpack:///./~/core-js/modules/_is-object.js","webpack:///./~/core-js/modules/_ie8-dom-define.js","webpack:///./~/core-js/modules/_dom-create.js","webpack:///./~/core-js/modules/_to-primitive.js","webpack:///./~/core-js/modules/_property-desc.js","webpack:///./~/core-js/modules/_redefine.js","webpack:///./~/core-js/modules/_uid.js","webpack:///./~/core-js/modules/_ctx.js","webpack:///./~/core-js/modules/_a-function.js","webpack:///./~/core-js/modules/_meta.js","webpack:///./~/core-js/modules/_shared.js","webpack:///./~/core-js/modules/_set-to-string-tag.js","webpack:///./~/core-js/modules/_wks.js","webpack:///./~/core-js/modules/_wks-ext.js","webpack:///./~/core-js/modules/_wks-define.js","webpack:///./~/core-js/modules/_library.js","webpack:///./~/core-js/modules/_keyof.js","webpack:///./~/core-js/modules/_object-keys.js","webpack:///./~/core-js/modules/_object-keys-internal.js","webpack:///./~/core-js/modules/_to-iobject.js","webpack:///./~/core-js/modules/_iobject.js","webpack:///./~/core-js/modules/_cof.js","webpack:///./~/core-js/modules/_defined.js","webpack:///./~/core-js/modules/_array-includes.js","webpack:///./~/core-js/modules/_to-length.js","webpack:///./~/core-js/modules/_to-integer.js","webpack:///./~/core-js/modules/_to-index.js","webpack:///./~/core-js/modules/_shared-key.js","webpack:///./~/core-js/modules/_enum-bug-keys.js","webpack:///./~/core-js/modules/_enum-keys.js","webpack:///./~/core-js/modules/_object-gops.js","webpack:///./~/core-js/modules/_object-pie.js","webpack:///./~/core-js/modules/_is-array.js","webpack:///./~/core-js/modules/_object-create.js","webpack:///./~/core-js/modules/_object-dps.js","webpack:///./~/core-js/modules/_html.js","webpack:///./~/core-js/modules/_object-gopn-ext.js","webpack:///./~/core-js/modules/_object-gopn.js","webpack:///./~/core-js/modules/_object-gopd.js","webpack:///./~/core-js/modules/es6.object.create.js","webpack:///./~/core-js/modules/es6.object.define-property.js","webpack:///./~/core-js/modules/es6.object.define-properties.js","webpack:///./~/core-js/modules/es6.object.get-own-property-descriptor.js","webpack:///./~/core-js/modules/_object-sap.js","webpack:///./~/core-js/modules/es6.object.get-prototype-of.js","webpack:///./~/core-js/modules/_to-object.js","webpack:///./~/core-js/modules/_object-gpo.js","webpack:///./~/core-js/modules/es6.object.keys.js","webpack:///./~/core-js/modules/es6.object.get-own-property-names.js","webpack:///./~/core-js/modules/es6.object.freeze.js","webpack:///./~/core-js/modules/es6.object.seal.js","webpack:///./~/core-js/modules/es6.object.prevent-extensions.js","webpack:///./~/core-js/modules/es6.object.is-frozen.js","webpack:///./~/core-js/modules/es6.object.is-sealed.js","webpack:///./~/core-js/modules/es6.object.is-extensible.js","webpack:///./~/core-js/modules/es6.object.assign.js","webpack:///./~/core-js/modules/_object-assign.js","webpack:///./~/core-js/modules/es6.object.is.js","webpack:///./~/core-js/modules/_same-value.js","webpack:///./~/core-js/modules/es6.object.set-prototype-of.js","webpack:///./~/core-js/modules/_set-proto.js","webpack:///./~/core-js/modules/es6.object.to-string.js","webpack:///./~/core-js/modules/_classof.js","webpack:///./~/core-js/modules/es6.function.bind.js","webpack:///./~/core-js/modules/_bind.js","webpack:///./~/core-js/modules/_invoke.js","webpack:///./~/core-js/modules/es6.function.name.js","webpack:///./~/core-js/modules/es6.function.has-instance.js","webpack:///./~/core-js/modules/es6.parse-int.js","webpack:///./~/core-js/modules/_parse-int.js","webpack:///./~/core-js/modules/_string-trim.js","webpack:///./~/core-js/modules/_string-ws.js","webpack:///./~/core-js/modules/es6.parse-float.js","webpack:///./~/core-js/modules/_parse-float.js","webpack:///./~/core-js/modules/es6.number.constructor.js","webpack:///./~/core-js/modules/_inherit-if-required.js","webpack:///./~/core-js/modules/es6.number.to-fixed.js","webpack:///./~/core-js/modules/_an-instance.js","webpack:///./~/core-js/modules/_a-number-value.js","webpack:///./~/core-js/modules/_string-repeat.js","webpack:///./~/core-js/modules/es6.number.to-precision.js","webpack:///./~/core-js/modules/es6.number.epsilon.js","webpack:///./~/core-js/modules/es6.number.is-finite.js","webpack:///./~/core-js/modules/es6.number.is-integer.js","webpack:///./~/core-js/modules/_is-integer.js","webpack:///./~/core-js/modules/es6.number.is-nan.js","webpack:///./~/core-js/modules/es6.number.is-safe-integer.js","webpack:///./~/core-js/modules/es6.number.max-safe-integer.js","webpack:///./~/core-js/modules/es6.number.min-safe-integer.js","webpack:///./~/core-js/modules/es6.number.parse-float.js","webpack:///./~/core-js/modules/es6.number.parse-int.js","webpack:///./~/core-js/modules/es6.math.acosh.js","webpack:///./~/core-js/modules/_math-log1p.js","webpack:///./~/core-js/modules/es6.math.asinh.js","webpack:///./~/core-js/modules/es6.math.atanh.js","webpack:///./~/core-js/modules/es6.math.cbrt.js","webpack:///./~/core-js/modules/_math-sign.js","webpack:///./~/core-js/modules/es6.math.clz32.js","webpack:///./~/core-js/modules/es6.math.cosh.js","webpack:///./~/core-js/modules/es6.math.expm1.js","webpack:///./~/core-js/modules/_math-expm1.js","webpack:///./~/core-js/modules/es6.math.fround.js","webpack:///./~/core-js/modules/es6.math.hypot.js","webpack:///./~/core-js/modules/es6.math.imul.js","webpack:///./~/core-js/modules/es6.math.log10.js","webpack:///./~/core-js/modules/es6.math.log1p.js","webpack:///./~/core-js/modules/es6.math.log2.js","webpack:///./~/core-js/modules/es6.math.sign.js","webpack:///./~/core-js/modules/es6.math.sinh.js","webpack:///./~/core-js/modules/es6.math.tanh.js","webpack:///./~/core-js/modules/es6.math.trunc.js","webpack:///./~/core-js/modules/es6.string.from-code-point.js","webpack:///./~/core-js/modules/es6.string.raw.js","webpack:///./~/core-js/modules/es6.string.trim.js","webpack:///./~/core-js/modules/es6.string.iterator.js","webpack:///./~/core-js/modules/_string-at.js","webpack:///./~/core-js/modules/_iter-define.js","webpack:///./~/core-js/modules/_iterators.js","webpack:///./~/core-js/modules/_iter-create.js","webpack:///./~/core-js/modules/es6.string.code-point-at.js","webpack:///./~/core-js/modules/es6.string.ends-with.js","webpack:///./~/core-js/modules/_string-context.js","webpack:///./~/core-js/modules/_is-regexp.js","webpack:///./~/core-js/modules/_fails-is-regexp.js","webpack:///./~/core-js/modules/es6.string.includes.js","webpack:///./~/core-js/modules/es6.string.repeat.js","webpack:///./~/core-js/modules/es6.string.starts-with.js","webpack:///./~/core-js/modules/es6.string.anchor.js","webpack:///./~/core-js/modules/_string-html.js","webpack:///./~/core-js/modules/es6.string.big.js","webpack:///./~/core-js/modules/es6.string.blink.js","webpack:///./~/core-js/modules/es6.string.bold.js","webpack:///./~/core-js/modules/es6.string.fixed.js","webpack:///./~/core-js/modules/es6.string.fontcolor.js","webpack:///./~/core-js/modules/es6.string.fontsize.js","webpack:///./~/core-js/modules/es6.string.italics.js","webpack:///./~/core-js/modules/es6.string.link.js","webpack:///./~/core-js/modules/es6.string.small.js","webpack:///./~/core-js/modules/es6.string.strike.js","webpack:///./~/core-js/modules/es6.string.sub.js","webpack:///./~/core-js/modules/es6.string.sup.js","webpack:///./~/core-js/modules/es6.date.now.js","webpack:///./~/core-js/modules/es6.date.to-json.js","webpack:///./~/core-js/modules/es6.date.to-iso-string.js","webpack:///./~/core-js/modules/es6.date.to-string.js","webpack:///./~/core-js/modules/es6.date.to-primitive.js","webpack:///./~/core-js/modules/_date-to-primitive.js","webpack:///./~/core-js/modules/es6.array.is-array.js","webpack:///./~/core-js/modules/es6.array.from.js","webpack:///./~/core-js/modules/_iter-call.js","webpack:///./~/core-js/modules/_is-array-iter.js","webpack:///./~/core-js/modules/_create-property.js","webpack:///./~/core-js/modules/core.get-iterator-method.js","webpack:///./~/core-js/modules/_iter-detect.js","webpack:///./~/core-js/modules/es6.array.of.js","webpack:///./~/core-js/modules/es6.array.join.js","webpack:///./~/core-js/modules/_strict-method.js","webpack:///./~/core-js/modules/es6.array.slice.js","webpack:///./~/core-js/modules/es6.array.sort.js","webpack:///./~/core-js/modules/es6.array.for-each.js","webpack:///./~/core-js/modules/_array-methods.js","webpack:///./~/core-js/modules/_array-species-create.js","webpack:///./~/core-js/modules/_array-species-constructor.js","webpack:///./~/core-js/modules/es6.array.map.js","webpack:///./~/core-js/modules/es6.array.filter.js","webpack:///./~/core-js/modules/es6.array.some.js","webpack:///./~/core-js/modules/es6.array.every.js","webpack:///./~/core-js/modules/es6.array.reduce.js","webpack:///./~/core-js/modules/_array-reduce.js","webpack:///./~/core-js/modules/es6.array.reduce-right.js","webpack:///./~/core-js/modules/es6.array.index-of.js","webpack:///./~/core-js/modules/es6.array.last-index-of.js","webpack:///./~/core-js/modules/es6.array.copy-within.js","webpack:///./~/core-js/modules/_array-copy-within.js","webpack:///./~/core-js/modules/_add-to-unscopables.js","webpack:///./~/core-js/modules/es6.array.fill.js","webpack:///./~/core-js/modules/_array-fill.js","webpack:///./~/core-js/modules/es6.array.find.js","webpack:///./~/core-js/modules/es6.array.find-index.js","webpack:///./~/core-js/modules/es6.array.species.js","webpack:///./~/core-js/modules/_set-species.js","webpack:///./~/core-js/modules/es6.array.iterator.js","webpack:///./~/core-js/modules/_iter-step.js","webpack:///./~/core-js/modules/es6.regexp.constructor.js","webpack:///./~/core-js/modules/_flags.js","webpack:///./~/core-js/modules/es6.regexp.to-string.js","webpack:///./~/core-js/modules/es6.regexp.flags.js","webpack:///./~/core-js/modules/es6.regexp.match.js","webpack:///./~/core-js/modules/_fix-re-wks.js","webpack:///./~/core-js/modules/es6.regexp.replace.js","webpack:///./~/core-js/modules/es6.regexp.search.js","webpack:///./~/core-js/modules/es6.regexp.split.js","webpack:///./~/core-js/modules/es6.promise.js","webpack:///./~/core-js/modules/_for-of.js","webpack:///./~/core-js/modules/_species-constructor.js","webpack:///./~/core-js/modules/_task.js","webpack:///./~/core-js/modules/_microtask.js","webpack:///./~/core-js/modules/_redefine-all.js","webpack:///./~/core-js/modules/es6.map.js","webpack:///./~/core-js/modules/_collection-strong.js","webpack:///./~/core-js/modules/_collection.js","webpack:///./~/core-js/modules/es6.set.js","webpack:///./~/core-js/modules/es6.weak-map.js","webpack:///./~/core-js/modules/_collection-weak.js","webpack:///./~/core-js/modules/es6.weak-set.js","webpack:///./~/core-js/modules/es6.typed.array-buffer.js","webpack:///./~/core-js/modules/_typed.js","webpack:///./~/core-js/modules/_typed-buffer.js","webpack:///./~/core-js/modules/es6.typed.data-view.js","webpack:///./~/core-js/modules/es6.typed.int8-array.js","webpack:///./~/core-js/modules/_typed-array.js","webpack:///./~/core-js/modules/core.is-iterable.js","webpack:///./~/core-js/modules/es6.typed.uint8-array.js","webpack:///./~/core-js/modules/es6.typed.uint8-clamped-array.js","webpack:///./~/core-js/modules/es6.typed.int16-array.js","webpack:///./~/core-js/modules/es6.typed.uint16-array.js","webpack:///./~/core-js/modules/es6.typed.int32-array.js","webpack:///./~/core-js/modules/es6.typed.uint32-array.js","webpack:///./~/core-js/modules/es6.typed.float32-array.js","webpack:///./~/core-js/modules/es6.typed.float64-array.js","webpack:///./~/core-js/modules/es6.reflect.apply.js","webpack:///./~/core-js/modules/es6.reflect.construct.js","webpack:///./~/core-js/modules/es6.reflect.define-property.js","webpack:///./~/core-js/modules/es6.reflect.delete-property.js","webpack:///./~/core-js/modules/es6.reflect.enumerate.js","webpack:///./~/core-js/modules/es6.reflect.get.js","webpack:///./~/core-js/modules/es6.reflect.get-own-property-descriptor.js","webpack:///./~/core-js/modules/es6.reflect.get-prototype-of.js","webpack:///./~/core-js/modules/es6.reflect.has.js","webpack:///./~/core-js/modules/es6.reflect.is-extensible.js","webpack:///./~/core-js/modules/es6.reflect.own-keys.js","webpack:///./~/core-js/modules/_own-keys.js","webpack:///./~/core-js/modules/es6.reflect.prevent-extensions.js","webpack:///./~/core-js/modules/es6.reflect.set.js","webpack:///./~/core-js/modules/es6.reflect.set-prototype-of.js","webpack:///./~/core-js/modules/es7.array.includes.js","webpack:///./~/core-js/modules/es7.string.at.js","webpack:///./~/core-js/modules/es7.string.pad-start.js","webpack:///./~/core-js/modules/_string-pad.js","webpack:///./~/core-js/modules/es7.string.pad-end.js","webpack:///./~/core-js/modules/es7.string.trim-left.js","webpack:///./~/core-js/modules/es7.string.trim-right.js","webpack:///./~/core-js/modules/es7.string.match-all.js","webpack:///./~/core-js/modules/es7.symbol.async-iterator.js","webpack:///./~/core-js/modules/es7.symbol.observable.js","webpack:///./~/core-js/modules/es7.object.get-own-property-descriptors.js","webpack:///./~/core-js/modules/es7.object.values.js","webpack:///./~/core-js/modules/_object-to-array.js","webpack:///./~/core-js/modules/es7.object.entries.js","webpack:///./~/core-js/modules/es7.object.define-getter.js","webpack:///./~/core-js/modules/_object-forced-pam.js","webpack:///./~/core-js/modules/es7.object.define-setter.js","webpack:///./~/core-js/modules/es7.object.lookup-getter.js","webpack:///./~/core-js/modules/es7.object.lookup-setter.js","webpack:///./~/core-js/modules/es7.map.to-json.js","webpack:///./~/core-js/modules/_collection-to-json.js","webpack:///./~/core-js/modules/_array-from-iterable.js","webpack:///./~/core-js/modules/es7.set.to-json.js","webpack:///./~/core-js/modules/es7.system.global.js","webpack:///./~/core-js/modules/es7.error.is-error.js","webpack:///./~/core-js/modules/es7.math.iaddh.js","webpack:///./~/core-js/modules/es7.math.isubh.js","webpack:///./~/core-js/modules/es7.math.imulh.js","webpack:///./~/core-js/modules/es7.math.umulh.js","webpack:///./~/core-js/modules/es7.reflect.define-metadata.js","webpack:///./~/core-js/modules/_metadata.js","webpack:///./~/core-js/modules/es7.reflect.delete-metadata.js","webpack:///./~/core-js/modules/es7.reflect.get-metadata.js","webpack:///./~/core-js/modules/es7.reflect.get-metadata-keys.js","webpack:///./~/core-js/modules/es7.reflect.get-own-metadata.js","webpack:///./~/core-js/modules/es7.reflect.get-own-metadata-keys.js","webpack:///./~/core-js/modules/es7.reflect.has-metadata.js","webpack:///./~/core-js/modules/es7.reflect.has-own-metadata.js","webpack:///./~/core-js/modules/es7.reflect.metadata.js","webpack:///./~/core-js/modules/es7.asap.js","webpack:///./~/core-js/modules/es7.observable.js","webpack:///./~/core-js/modules/web.timers.js","webpack:///./~/core-js/modules/_partial.js","webpack:///./~/core-js/modules/_path.js","webpack:///./~/core-js/modules/web.immediate.js","webpack:///./~/core-js/modules/web.dom.iterable.js","webpack:///./~/babel-regenerator-runtime/runtime.js","webpack:///./~/process/browser.js","webpack:///./~/core-js/fn/regexp/escape.js","webpack:///./~/core-js/modules/core.regexp.escape.js","webpack:///./~/core-js/modules/_replacer.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Three","text","renderer","WebGLRenderer","clearDepth","document","getElementById","innerText","a","undefined","regeneratorRuntime","mark","_callee","wrap","_context","prev","console","log","stop","this","global","define","O","key","Object","DEFINE_PROPERTY","writable","configurable","_babelPolyfill","Error","String","prototype","padStart","padEnd","split","forEach","Array","Function","bind","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","keyOf","enumKeys","isArray","anObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","it","D","protoDesc","tag","sym","_k","isSymbol","iterator","$defineProperty","enumerable","$defineProperties","keys","i","l","length","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","push","$getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","set","name","G","W","F","symbols","store","S","for","keyFor","useSetter","useSimple","create","defineProperty","defineProperties","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","replacer","$replacer","args","valueOf","Math","window","self","__g","hasOwnProperty","exec","core","hide","ctx","type","source","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","R","version","__e","object","IE8_DOM_DEFINE","Attributes","isObject","is","createElement","fn","val","toString","bitmap","SRC","TO_STRING","$toString","TPL","inspectSource","safe","isFunction","join","px","random","concat","aFunction","that","b","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","SHARED","def","TAG","stat","USE_SYMBOL","$exports","LIBRARY","charAt","getKeys","el","index","enumBugKeys","arrayIndexOf","IE_PROTO","IObject","defined","cof","slice","toLength","toIndex","IS_INCLUDES","$this","fromIndex","toInteger","min","ceil","floor","isNaN","max","gOPS","pIE","getSymbols","arg","dPs","Empty","createDict","iframeDocument","iframe","gt","style","display","appendChild","src","contentWindow","open","write","close","Properties","documentElement","windowNames","getWindowNames","hiddenKeys","fails","toObject","$getPrototypeOf","getPrototypeOf","constructor","$freeze","$seal","$preventExtensions","$isFrozen","$isSealed","$isExtensible","assign","$assign","A","K","k","T","aLen","j","x","y","setPrototypeOf","check","proto","test","buggy","__proto__","classof","ARG","tryGet","callee","invoke","arraySlice","factories","construct","len","n","partArgs","bound","un","FProto","nameRE","NAME","match","HAS_INSTANCE","FunctionProto","$parseInt","parseInt","$trim","trim","ws","hex","str","radix","string","spaces","space","non","ltrim","RegExp","rtrim","exporter","ALIAS","FORCE","TYPE","replace","$parseFloat","parseFloat","Infinity","inheritIfRequired","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","third","maxCode","first","charCodeAt","NaN","code","digits","C","aNumberValue","repeat","$toFixed","toFixed","data","ERROR","ZERO","multiply","c2","divide","numToString","s","t","pow","acc","x2","fractionDigits","z","RangeError","Constructor","forbiddenField","msg","count","res","$toPrecision","toPrecision","precision","EPSILON","_isFinite","isFinite","isInteger","number","abs","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Number","log1p","sqrt","$acosh","acosh","MAX_VALUE","LN2","asinh","$asinh","$atanh","atanh","sign","cbrt","clz32","LOG2E","cosh","$expm1","expm1","EPSILON32","MAX32","MIN32","roundTiesToEven","fround","$abs","$sign","hypot","value1","value2","div","sum","larg","$imul","imul","UINT16","xn","yn","xl","yl","log10","LN10","log2","sinh","tanh","trunc","fromCharCode","$fromCodePoint","fromCodePoint","raw","callSite","tpl","$at","iterated","_t","_i","point","pos","Iterators","$iterCreate","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","descriptor","codePointAt","context","ENDS_WITH","$endsWith","endsWith","searchString","endPosition","end","search","isRegExp","MATCH","re","INCLUDES","includes","indexOf","STARTS_WITH","$startsWith","startsWith","createHTML","quot","attribute","p1","toLowerCase","color","size","url","now","Date","getTime","toJSON","toISOString","pv","lz","num","d","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","DateProto","INVALID_DATE","hint","isArrayIter","createProperty","getIterFn","iter","from","arrayLike","mapfn","mapping","iterFn","ret","ArrayProto","getIteratorMethod","SAFE_CLOSING","riter","skipClosing","arr","of","arrayJoin","separator","method","html","begin","klass","start","upTo","cloned","$sort","sort","comparefn","$forEach","STRICT","callbackfn","asc","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","speciesConstructor","original","SPECIES","$map","map","$filter","filter","$some","some","$every","every","$reduce","reduce","memo","isRight","reduceRight","$indexOf","NEGATIVE_ZERO","searchElement","lastIndexOf","copyWithin","to","inc","UNSCOPABLES","fill","endPos","$find","forced","find","findIndex","addToUnscopables","Arguments","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","ignoreCase","multiline","unicode","sticky","flags","$match","regexp","SYMBOL","fns","strfn","rxfn","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","$SPLIT","LENGTH","LAST_INDEX","NPCG","limit","separator2","lastIndex","lastLength","output","lastLastIndex","splitLimit","separatorCopy","Internal","GenericPromiseCapability","Wrapper","anInstance","forOf","task","microtask","PROMISE","process","$Promise","isNode","empty","promise","FakePromise","PromiseRejectionEvent","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","$$resolve","$$reject","perform","error","notify","isReject","_n","chain","_c","_v","ok","_s","run","reaction","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","abrupt","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","catch","r","capability","all","iterable","remaining","$index","alreadyCalled","race","BREAK","RETURN","defer","channel","port","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","listener","event","nextTick","port2","port1","onmessage","postMessage","addEventListener","importScripts","removeChild","setTimeout","clear","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","toggle","node","createTextNode","observe","characterData","strong","entry","getEntry","v","redefineAll","$iterDefine","setSpecies","SIZE","_f","getConstructor","ADDER","_l","delete","setStrong","$iterDetect","common","IS_WEAK","fixMethod","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","add","InternalMap","each","weak","uncaughtFrozenStore","ufstore","tmp","$WeakMap","freeze","createArrayMethod","$has","arrayFind","arrayFindIndex","UncaughtFrozenStore","findUncaughtFrozen","splice","$typed","buffer","ArrayBuffer","$ArrayBuffer","$DataView","DataView","$isView","ABV","isView","$slice","VIEW","ARRAY_BUFFER","CONSTR","byteLength","final","viewS","viewT","setUint8","getUint8","Typed","TYPED","TypedArrayConstructors","arrayFill","DATA_VIEW","WRONG_LENGTH","WRONG_INDEX","BaseBuffer","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","addGetter","internal","view","isLittleEndian","numIndex","intIndex","_b","pack","reverse","conversion","validateArrayBufferArguments","numberLength","ArrayBufferProto","$setInt8","setInt8","getInt8","byteOffset","bufferLength","offset","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","init","$buffer","propertyDesc","same","createArrayIncludes","ArrayIterators","arrayCopyWithin","Uint8Array","SHARED_BUFFER","BYTES_PER_ELEMENT","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","arrayReduce","arrayReduceRight","arraySort","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","strictToLength","SAME","toOffset","BYTES","validate","speciesFromList","list","fromList","$from","$of","TO_LOCALE_BUG","$toLocaleString","predicate","middle","subarray","$begin","$iterators","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","CLAMPED","ISNT_UINT8","GETTER","SETTER","TypedArray","TAC","TypedArrayPrototype","getter","o","round","addElement","$offset","$length","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","isIterable","_apply","thisArgument","argumentsList","Reflect","Target","newTarget","$args","propertyKey","attributes","deleteProperty","Enumerate","enumerate","receiver","getProto","ownKeys","V","existingDescriptor","ownDesc","setProto","$includes","at","$pad","maxLength","fillString","left","stringLength","fillStr","intMaxLength","fillLen","stringFiller","getFlags","RegExpProto","$RegExpStringIterator","_r","matchAll","rx","getOwnPropertyDescriptors","getDesc","$values","isEntries","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","isError","iaddh","x0","x1","y0","y1","$x0","$x1","$y0","isubh","imulh","u","$u","$v","u0","v0","u1","v1","umulh","metadata","toMetaKey","ordinaryDefineOwnMetadata","defineMetadata","metadataKey","metadataValue","targetKey","Map","getOrCreateMetadataMap","targetMetadata","keyMetadata","ordinaryHasOwnMetadata","MetadataKey","metadataMap","ordinaryGetOwnMetadata","MetadataValue","ordinaryOwnMetadataKeys","_","deleteMetadata","ordinaryGetMetadata","hasOwn","getMetadata","Set","ordinaryMetadataKeys","oKeys","pKeys","getMetadataKeys","getOwnMetadata","getOwnMetadataKeys","ordinaryHasMetadata","hasMetadata","hasOwnMetadata","asap","OBSERVABLE","cleanupSubscription","subscription","cleanup","subscriptionClosed","_o","closeSubscription","Subscription","observer","subscriber","SubscriptionObserver","unsubscribe","complete","$Observable","subscribe","observable","items","Observable","partial","navigator","MSIE","userAgent","time","setInterval","path","pargs","holder","$task","TO_STRING_TAG","ArrayValues","collections","Collection","innerFn","outerFn","tryLocsList","Generator","Context","_invoke","makeInvokeMethod","tryCatch","obj","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AwaitArgument","AsyncIterator","invokeNext","invokeThrow","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","returnMethod","record","info","GenStateSuspendedYield","resultName","nextLoc","_sent","sent","dispatchException","ContinueSentinel","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","iteratorSymbol","inModule","runtime","Gp","displayName","isGeneratorFunction","genFun","ctor","awrap","async","pop","skipTempReset","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","clearTimeout","Item","fun","array","noop","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask","escape","$re","regExp","part","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","THREE","REVISION","nextSource","keysArray","nextIndex","nextKey","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","Color","fromArray","g","copy","setHex","setStyle","setScalar","scalar","setRGB","setHSL","hue2rgb","q","h","euclideanModulo","clamp","handleAlpha","warn","components","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiplyScalar","lerp","alpha","equals","toArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","_x","_y","_z","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","c1","cos","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","EPS","vFrom","vTo","Vector3","dot","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","onChange","callback","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","z0","w0","z1","w1","sqrSin","tDir","Vector2","width","height","setX","setY","setComponent","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","divideScalar","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","lengthManhattan","PI","distanceTo","distanceToSquared","dx","dy","setLength","lerpVectors","v2","fromAttribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","distance","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","scope","updateMatrixWorld","traverse","geometry","boundingBox","computeBoundingBox","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnDegenerate","t11","t12","t13","det","transpose","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","Spherical","other","makeSafe","vec3","generateUUID","chars","uuid","rnd","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nearestPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","stride","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","getElapsedTime","getDelta","newTime","EventDispatcher","hasEventListener","removeEventListener","dispatchEvent","_listeners","listeners","listenerArray","Layers","mask","enable","disable","layers","ascSort","intersectObject","raycaster","intersects","recursive","visible","raycast","children","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","PointCloud","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","intersectObjects","objects","Object3D","onRotationChange","rotation","onQuaternionChange","Object3DIdCount","DefaultUp","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","extractFromCache","cache","isRootObject","geometries","materials","textures","images","material","parse","Face3","materialIndex","vertexNormals","vertexColors","BufferAttribute","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Geometry","GeometryIdCount","vertices","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","fromBufferGeometry","addFace","normals","tempNormals","uvs","tempUVs","uvs2","tempUVs2","positions","uv","uv2","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","enabled","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdate","onUpdateCallback","AnimationClip","duration","tracks","resetDuration","optimize","track","times","json","jsonTracks","frameTime","fps","KeyframeTrack","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","nodeName","addNonemptyTrack","trackType","trackName","animationKeys","propertyName","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","timeScale","clipAction","optionalRoot","prototypeAction","rootUuid","clipObject","actionsForClip","_actionsByClip","existingAction","actionByRoot","knownActions","_clip","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","deltaTime","timeDirection","accuIndex","action","_update","getRoot","uncacheClip","actionsByClip","actionsToRemove","_deactivateAction","cacheIndex","_cacheIndex","lastInactiveAction","_byClipCacheIndex","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","restoreOriginalState","_removeInactiveBinding","uncacheAction","mixer","localRoot","_mixer","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","_currentTimeScale","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","pause","loopCount","pingPong","_setEndings","loopDelta","pending","atStart","atEnd","weightNow","weightThen","bindingsByName","referenceCount","_addInactiveBinding","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","inUse","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","paths","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","isTypedArray","convertArray","forceClone","compareTime","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","getInterpolation","shift","timeOffset","endTime","nKeys","valid","prevTime","currTime","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","getValue","targetArray","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","matches","results","searchSkeleton","bone","searchNodeSubtree","childNode","subTreeNode","mixFunction","bufferType","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","IntepolateDiscrete","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","getOutput","load","file","AudioBuffer","setBuffer","setNodeSource","audioNode","audioBuffer","onReady","currentTime","disconnect","getFilter","setFilter","setPlaybackRate","getPlaybackRate","getLoop","setVolume","getVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getData","getByteFrequencyData","ready","readyCallbacks","request","XMLHttpRequest","responseType","onload","decodeAudioData","response","send","PositionalAudio","panner","createPanner","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setDistanceModel","distanceModel","getDistanceModel","setMaxDistance","maxDistance","getMaxDistance","AudioListener","AudioContext","webkitAudioContext","destination","removeFilter","setMasterVolume","getMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","options","format","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","scene","generateMipmaps","texture","activeCubeFace","render","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","focalLength","setLens","frameHeight","atan","setViewOffset","fullWidth","fullHeight","StereoCamera","cameraL","cameraR","eyeRight","eyeLeft","eyeSep","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","AmbientLight","DirectionalLight","shadow","HemisphereLight","skyColor","PointLight","power","SpotLight","Cache","files","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","textureLoader","materialLoader","loadTexture","anisotropy","fullPath","loader","Handlers","setCrossOrigin","wrapS","wrapT","TextureLoader","MaterialLoader","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","XHRLoader","manager","DefaultLoadingManager","onLoad","onProgress","onError","cached","overrideMimeType","status","itemEnd","itemError","withCredentials","itemStart","setPath","setResponseType","setWithCredentials","FontLoader","Font","substring","ImageLoader","image","JSONLoader","statusDomElement","_statusDomElement","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","animations","morphAnimationClips","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","DodecahedronGeometry","detail","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","LatheGeometry","loadImage","parseConstant","Texture","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","level","addLevel","CubeTextureLoader","urls","CubeTexture","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","texDatas","CompressedTexture","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","envMapIntensity","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","PointsMaterial","ShaderMaterial","defines","lights","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","encoding","getDataURL","canvas","toDataURL","getContext","drawImage","transformUv","CanvasTexture","VideoTexture","video","requestAnimationFrame","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","distSq","faceIndex","nbVertices","LineStrip","LinePieces","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","uvA","uvB","uvC","tempA","tempB","tempC","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","offsetMatrix","bindMode","bindMatrix","bindMatrixInverse","gbone","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLights","properties","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","distanceRGBA","lightPos","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","glClearColor","_premultipliedAlpha","clearColor","setDefaultGLState","scissor","_currentScissor","_scissor","viewport","_currentViewport","_viewport","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","onContextLost","preventDefault","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","_gl","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglDepthbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","getAttributeBuffer","enableAttributeAndDivisor","enableAttribute","bindBuffer","vertexAttribPointer","FLOAT","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","absNumericalSort","painterSortStable","reversePainterSortStable","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","_frustum","sprites","ImmediateRenderObject","_this","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","setMaterial","setProgram","renderBufferImmediate","renderBufferDirect","initMaterial","materialProperties","getParameters","_lights","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","location","lightsHash","ambient","directional","spot","hemi","hasDynamicUniforms","uniform","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","CULL_FACE","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","toneMappingExposure","toneMappingWhitePoint","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsStandard","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","updateDynamicUniforms","dynamicUniforms","uvScaleMap","WebGLRenderTarget","_canvas","clientHeight","uniformMatrix3fv","maxTextures","loadUniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix2fv","property","locationProperty","valueProperty","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setupLights","ll","light","directionalLength","pointLength","spotLength","hemiLength","shadowsLength","shadowsPointLight","lightCache","shadows","setTextureParameters","textureType","isPowerOfTwoImage","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","makePowerOfTwo","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","HTMLImageElement","HTMLCanvasElement","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","_alpha","_depth","_stencil","stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","_currentFramebuffer","_currentScissorTest","_width","_height","_scissorTest","_infoRender","calls","memory","programs","getShaderPrecisionFormat","rangeMin","rangeMax","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","shadowMap","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","getCurrentRenderTarget","scissorTest","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttribute","deleteAttributes","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","edges","checkEdge","WebGLProgram","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","rendererExtensions","envMapCubeUV","flatShading","filterEmptyLine","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","structRe","structName","structProperty","uniformsStruct","arrayStructRe","arrayName","arrayIndex","arrayProperty","uniformsArray","uniformsArrayIndex","arrayRe","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","programIdCount","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","customDefines","createProgram","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","pointLightShadows","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","shaderIDs","parameterNames","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","getDepthMaterial","isPointLight","lightPositionWorld","newMaterial","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","shadowCamera","_renderList","_state","_shadowMapSize","_lookTarget","_lightPositionWorld","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","depthShader","depthUniforms","distanceShader","distanceUniforms","depthMaterial","distanceMaterial","USE_SHADOWMAP","faceCount","BLEND","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","clearAlpha","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentStencilWrite","currentStencilFunc","currentStencilRef","currentStencilMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentClearColor","currentClearDepth","currentClearStencil","currentScissor","currentViewport","emptyTexture","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","stencilOp","setStencilTest","stencilTest","STENCIL_TEST","setStencilWrite","stencilWrite","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","hasVertexTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","uvOffset","uvScale","fogType","fillStyle","fillRect","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","Face4","Vertex","eulerOrder","getChildByName","renderDepth","useQuaternion","ParticleSystem","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","MeshFaceMaterial","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","shape","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPaths","resolution","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","Path","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","shapes","toShapes","fromPoints","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","closed","ClosedSplineCurve3","BoxGeometry","BoxBufferGeometry","CubeGeometry","calculateVertexCount","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","vertexBufferOffset","uvBufferOffset","numberOfVertices","indexBufferOffset","vertexCount","indexCount","CircleGeometry","CircleBufferGeometry","ii","segment","CylinderBufferGeometry","calculateIndexCount","generateTorso","tanTheta","indexRow","halfHeight","indexArray","generateCap","centerIndexStart","centerIndexEnd","CylinderGeometry","EdgesGeometry","thresholdAngle","sortFunction","thresholdDot","edge","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","curveSegments","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheBufferGeometry","base","inverseSegments","n1","n2","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","font","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","cs","P1","P2","N","TorusKnotGeometry","heightScale","taper","NoTaper","ip","jp","uva","uvb","uvc","uvd","grid","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","tz","mat","PolyhedronGeometry","prepare","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n\t    return new (P || (P = Promise))(function (resolve, reject) {\n\t        function fulfilled(value) {\n\t            try {\n\t                step(generator.next(value));\n\t            } catch (e) {\n\t                reject(e);\n\t            }\n\t        }\n\t        function rejected(value) {\n\t            try {\n\t                step(generator.throw(value));\n\t            } catch (e) {\n\t                reject(e);\n\t            }\n\t        }\n\t        function step(result) {\n\t            result.done ? resolve(result.value) : new P(function (resolve) {\n\t                resolve(result.value);\n\t            }).then(fulfilled, rejected);\n\t        }\n\t        step((generator = generator.apply(thisArg, _arguments)).next());\n\t    });\n\t};\n\t__webpack_require__(1);\n\tvar Three = __webpack_require__(299);\n\tvar text = \"hello world!\";\n\tvar renderer = new Three.WebGLRenderer();\n\trenderer.clearDepth();\n\tdocument.getElementById(\"main\").innerText += text;\n\tvar a = function a() {\n\t    return __awaiter(undefined, void 0, void 0, regeneratorRuntime.mark(function _callee() {\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t            while (1) {\n\t                switch (_context.prev = _context.next) {\n\t                    case 0:\n\t                        console.log(\"doSome\");\n\t\n\t                    case 1:\n\t                    case \"end\":\n\t                        return _context.stop();\n\t                }\n\t            }\n\t        }, _callee, this);\n\t    }));\n\t};\n\ta();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*istanbul ignore next*/\"use strict\";\n\t\n\t/*istanbul ignore next*/__webpack_require__(2);\n\t\n\t/*istanbul ignore next*/__webpack_require__(294);\n\t\n\t/*istanbul ignore next*/__webpack_require__(296);\n\t\n\t/* eslint max-len: 0 */\n\t\n\tif (global._babelPolyfill) {\n\t  throw new Error(\"only one instance of babel-polyfill is allowed\");\n\t}\n\tglobal._babelPolyfill = true;\n\t\n\t// Should be removed in the next major release:\n\t\n\tvar DEFINE_PROPERTY = \"defineProperty\";\n\tfunction define(O, key, value) {\n\t  O[key] || Object[DEFINE_PROPERTY](O, key, {\n\t    writable: true,\n\t    configurable: true,\n\t    value: value\n\t  });\n\t}\n\t\n\tdefine(String.prototype, \"padLeft\", \"\".padStart);\n\tdefine(String.prototype, \"padRight\", \"\".padEnd);\n\t\n\t\"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill\".split(\",\").forEach(function (key) {\n\t  [][key] && define(Array, key, Function.call.bind([][key]));\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(3);\n\t__webpack_require__(52);\n\t__webpack_require__(53);\n\t__webpack_require__(54);\n\t__webpack_require__(55);\n\t__webpack_require__(57);\n\t__webpack_require__(60);\n\t__webpack_require__(61);\n\t__webpack_require__(62);\n\t__webpack_require__(63);\n\t__webpack_require__(64);\n\t__webpack_require__(65);\n\t__webpack_require__(66);\n\t__webpack_require__(67);\n\t__webpack_require__(68);\n\t__webpack_require__(70);\n\t__webpack_require__(72);\n\t__webpack_require__(74);\n\t__webpack_require__(76);\n\t__webpack_require__(79);\n\t__webpack_require__(80);\n\t__webpack_require__(81);\n\t__webpack_require__(85);\n\t__webpack_require__(87);\n\t__webpack_require__(89);\n\t__webpack_require__(93);\n\t__webpack_require__(94);\n\t__webpack_require__(95);\n\t__webpack_require__(96);\n\t__webpack_require__(98);\n\t__webpack_require__(99);\n\t__webpack_require__(100);\n\t__webpack_require__(101);\n\t__webpack_require__(102);\n\t__webpack_require__(103);\n\t__webpack_require__(104);\n\t__webpack_require__(106);\n\t__webpack_require__(107);\n\t__webpack_require__(108);\n\t__webpack_require__(110);\n\t__webpack_require__(111);\n\t__webpack_require__(112);\n\t__webpack_require__(114);\n\t__webpack_require__(115);\n\t__webpack_require__(116);\n\t__webpack_require__(117);\n\t__webpack_require__(118);\n\t__webpack_require__(119);\n\t__webpack_require__(120);\n\t__webpack_require__(121);\n\t__webpack_require__(122);\n\t__webpack_require__(123);\n\t__webpack_require__(124);\n\t__webpack_require__(125);\n\t__webpack_require__(126);\n\t__webpack_require__(127);\n\t__webpack_require__(132);\n\t__webpack_require__(133);\n\t__webpack_require__(137);\n\t__webpack_require__(138);\n\t__webpack_require__(139);\n\t__webpack_require__(140);\n\t__webpack_require__(142);\n\t__webpack_require__(143);\n\t__webpack_require__(144);\n\t__webpack_require__(145);\n\t__webpack_require__(146);\n\t__webpack_require__(147);\n\t__webpack_require__(148);\n\t__webpack_require__(149);\n\t__webpack_require__(150);\n\t__webpack_require__(151);\n\t__webpack_require__(152);\n\t__webpack_require__(153);\n\t__webpack_require__(154);\n\t__webpack_require__(155);\n\t__webpack_require__(156);\n\t__webpack_require__(157);\n\t__webpack_require__(158);\n\t__webpack_require__(160);\n\t__webpack_require__(161);\n\t__webpack_require__(167);\n\t__webpack_require__(168);\n\t__webpack_require__(170);\n\t__webpack_require__(171);\n\t__webpack_require__(172);\n\t__webpack_require__(176);\n\t__webpack_require__(177);\n\t__webpack_require__(178);\n\t__webpack_require__(179);\n\t__webpack_require__(180);\n\t__webpack_require__(182);\n\t__webpack_require__(183);\n\t__webpack_require__(184);\n\t__webpack_require__(185);\n\t__webpack_require__(188);\n\t__webpack_require__(190);\n\t__webpack_require__(191);\n\t__webpack_require__(192);\n\t__webpack_require__(194);\n\t__webpack_require__(196);\n\t__webpack_require__(198);\n\t__webpack_require__(199);\n\t__webpack_require__(200);\n\t__webpack_require__(202);\n\t__webpack_require__(203);\n\t__webpack_require__(204);\n\t__webpack_require__(205);\n\t__webpack_require__(211);\n\t__webpack_require__(214);\n\t__webpack_require__(215);\n\t__webpack_require__(217);\n\t__webpack_require__(218);\n\t__webpack_require__(221);\n\t__webpack_require__(222);\n\t__webpack_require__(225);\n\t__webpack_require__(226);\n\t__webpack_require__(227);\n\t__webpack_require__(228);\n\t__webpack_require__(229);\n\t__webpack_require__(230);\n\t__webpack_require__(231);\n\t__webpack_require__(232);\n\t__webpack_require__(233);\n\t__webpack_require__(234);\n\t__webpack_require__(235);\n\t__webpack_require__(236);\n\t__webpack_require__(237);\n\t__webpack_require__(238);\n\t__webpack_require__(239);\n\t__webpack_require__(240);\n\t__webpack_require__(241);\n\t__webpack_require__(242);\n\t__webpack_require__(243);\n\t__webpack_require__(245);\n\t__webpack_require__(246);\n\t__webpack_require__(247);\n\t__webpack_require__(248);\n\t__webpack_require__(249);\n\t__webpack_require__(250);\n\t__webpack_require__(252);\n\t__webpack_require__(253);\n\t__webpack_require__(254);\n\t__webpack_require__(255);\n\t__webpack_require__(256);\n\t__webpack_require__(257);\n\t__webpack_require__(258);\n\t__webpack_require__(259);\n\t__webpack_require__(261);\n\t__webpack_require__(262);\n\t__webpack_require__(264);\n\t__webpack_require__(265);\n\t__webpack_require__(266);\n\t__webpack_require__(267);\n\t__webpack_require__(270);\n\t__webpack_require__(271);\n\t__webpack_require__(272);\n\t__webpack_require__(273);\n\t__webpack_require__(274);\n\t__webpack_require__(275);\n\t__webpack_require__(276);\n\t__webpack_require__(277);\n\t__webpack_require__(279);\n\t__webpack_require__(280);\n\t__webpack_require__(281);\n\t__webpack_require__(282);\n\t__webpack_require__(283);\n\t__webpack_require__(284);\n\t__webpack_require__(285);\n\t__webpack_require__(286);\n\t__webpack_require__(287);\n\t__webpack_require__(288);\n\t__webpack_require__(289);\n\t__webpack_require__(292);\n\t__webpack_require__(293);\n\tmodule.exports = __webpack_require__(9);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// ECMAScript 6 symbols shim\n\tvar global         = __webpack_require__(4)\n\t  , has            = __webpack_require__(5)\n\t  , DESCRIPTORS    = __webpack_require__(6)\n\t  , $export        = __webpack_require__(8)\n\t  , redefine       = __webpack_require__(18)\n\t  , META           = __webpack_require__(22).KEY\n\t  , $fails         = __webpack_require__(7)\n\t  , shared         = __webpack_require__(23)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , uid            = __webpack_require__(19)\n\t  , wks            = __webpack_require__(25)\n\t  , wksExt         = __webpack_require__(26)\n\t  , wksDefine      = __webpack_require__(27)\n\t  , keyOf          = __webpack_require__(29)\n\t  , enumKeys       = __webpack_require__(42)\n\t  , isArray        = __webpack_require__(45)\n\t  , anObject       = __webpack_require__(12)\n\t  , toIObject      = __webpack_require__(32)\n\t  , toPrimitive    = __webpack_require__(16)\n\t  , createDesc     = __webpack_require__(17)\n\t  , _create        = __webpack_require__(46)\n\t  , gOPNExt        = __webpack_require__(49)\n\t  , $GOPD          = __webpack_require__(51)\n\t  , $DP            = __webpack_require__(11)\n\t  , $keys          = __webpack_require__(30)\n\t  , gOPD           = $GOPD.f\n\t  , dP             = $DP.f\n\t  , gOPN           = gOPNExt.f\n\t  , $Symbol        = global.Symbol\n\t  , $JSON          = global.JSON\n\t  , _stringify     = $JSON && $JSON.stringify\n\t  , PROTOTYPE      = 'prototype'\n\t  , HIDDEN         = wks('_hidden')\n\t  , TO_PRIMITIVE   = wks('toPrimitive')\n\t  , isEnum         = {}.propertyIsEnumerable\n\t  , SymbolRegistry = shared('symbol-registry')\n\t  , AllSymbols     = shared('symbols')\n\t  , OPSymbols      = shared('op-symbols')\n\t  , ObjectProto    = Object[PROTOTYPE]\n\t  , USE_NATIVE     = typeof $Symbol == 'function'\n\t  , QObject        = global.QObject;\n\t// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n\tvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\t\n\t// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\tvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n\t  return _create(dP({}, 'a', {\n\t    get: function(){ return dP(this, 'a', {value: 7}).a; }\n\t  })).a != 7;\n\t}) ? function(it, key, D){\n\t  var protoDesc = gOPD(ObjectProto, key);\n\t  if(protoDesc)delete ObjectProto[key];\n\t  dP(it, key, D);\n\t  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n\t} : dP;\n\t\n\tvar wrap = function(tag){\n\t  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n\t  sym._k = tag;\n\t  return sym;\n\t};\n\t\n\tvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n\t  return typeof it == 'symbol';\n\t} : function(it){\n\t  return it instanceof $Symbol;\n\t};\n\t\n\tvar $defineProperty = function defineProperty(it, key, D){\n\t  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n\t  anObject(it);\n\t  key = toPrimitive(key, true);\n\t  anObject(D);\n\t  if(has(AllSymbols, key)){\n\t    if(!D.enumerable){\n\t      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n\t      it[HIDDEN][key] = true;\n\t    } else {\n\t      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n\t      D = _create(D, {enumerable: createDesc(0, false)});\n\t    } return setSymbolDesc(it, key, D);\n\t  } return dP(it, key, D);\n\t};\n\tvar $defineProperties = function defineProperties(it, P){\n\t  anObject(it);\n\t  var keys = enumKeys(P = toIObject(P))\n\t    , i    = 0\n\t    , l = keys.length\n\t    , key;\n\t  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n\t  return it;\n\t};\n\tvar $create = function create(it, P){\n\t  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n\t};\n\tvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n\t  var E = isEnum.call(this, key = toPrimitive(key, true));\n\t  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n\t  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n\t};\n\tvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n\t  it  = toIObject(it);\n\t  key = toPrimitive(key, true);\n\t  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n\t  var D = gOPD(it, key);\n\t  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n\t  return D;\n\t};\n\tvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n\t  var names  = gOPN(toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i){\n\t    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n\t  } return result;\n\t};\n\tvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n\t  var IS_OP  = it === ObjectProto\n\t    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i){\n\t    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n\t  } return result;\n\t};\n\t\n\t// 19.4.1.1 Symbol([description])\n\tif(!USE_NATIVE){\n\t  $Symbol = function Symbol(){\n\t    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n\t    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n\t    var $set = function(value){\n\t      if(this === ObjectProto)$set.call(OPSymbols, value);\n\t      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n\t      setSymbolDesc(this, tag, createDesc(1, value));\n\t    };\n\t    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n\t    return wrap(tag);\n\t  };\n\t  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n\t    return this._k;\n\t  });\n\t\n\t  $GOPD.f = $getOwnPropertyDescriptor;\n\t  $DP.f   = $defineProperty;\n\t  __webpack_require__(50).f = gOPNExt.f = $getOwnPropertyNames;\n\t  __webpack_require__(44).f  = $propertyIsEnumerable;\n\t  __webpack_require__(43).f = $getOwnPropertySymbols;\n\t\n\t  if(DESCRIPTORS && !__webpack_require__(28)){\n\t    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n\t  }\n\t\n\t  wksExt.f = function(name){\n\t    return wrap(wks(name));\n\t  }\n\t}\n\t\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\t\n\tfor(var symbols = (\n\t  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n\t  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n\t).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\t\n\tfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\t\n\t$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n\t  // 19.4.2.1 Symbol.for(key)\n\t  'for': function(key){\n\t    return has(SymbolRegistry, key += '')\n\t      ? SymbolRegistry[key]\n\t      : SymbolRegistry[key] = $Symbol(key);\n\t  },\n\t  // 19.4.2.5 Symbol.keyFor(sym)\n\t  keyFor: function keyFor(key){\n\t    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n\t    throw TypeError(key + ' is not a symbol!');\n\t  },\n\t  useSetter: function(){ setter = true; },\n\t  useSimple: function(){ setter = false; }\n\t});\n\t\n\t$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n\t  // 19.1.2.2 Object.create(O [, Properties])\n\t  create: $create,\n\t  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n\t  defineProperty: $defineProperty,\n\t  // 19.1.2.3 Object.defineProperties(O, Properties)\n\t  defineProperties: $defineProperties,\n\t  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\t  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n\t  // 19.1.2.7 Object.getOwnPropertyNames(O)\n\t  getOwnPropertyNames: $getOwnPropertyNames,\n\t  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n\t  getOwnPropertySymbols: $getOwnPropertySymbols\n\t});\n\t\n\t// 24.3.2 JSON.stringify(value [, replacer [, space]])\n\t$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n\t  var S = $Symbol();\n\t  // MS Edge converts symbol values to JSON as {}\n\t  // WebKit converts symbol values to JSON as null\n\t  // V8 throws on boxed symbols\n\t  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n\t})), 'JSON', {\n\t  stringify: function stringify(it){\n\t    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n\t    var args = [it]\n\t      , i    = 1\n\t      , replacer, $replacer;\n\t    while(arguments.length > i)args.push(arguments[i++]);\n\t    replacer = args[1];\n\t    if(typeof replacer == 'function')$replacer = replacer;\n\t    if($replacer || !isArray(replacer))replacer = function(key, value){\n\t      if($replacer)value = $replacer.call(this, key, value);\n\t      if(!isSymbol(value))return value;\n\t    };\n\t    args[1] = replacer;\n\t    return _stringify.apply($JSON, args);\n\t  }\n\t});\n\t\n\t// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n\t$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n\t// 19.4.3.5 Symbol.prototype[@@toStringTag]\n\tsetToStringTag($Symbol, 'Symbol');\n\t// 20.2.1.9 Math[@@toStringTag]\n\tsetToStringTag(Math, 'Math', true);\n\t// 24.3.3 JSON[@@toStringTag]\n\tsetToStringTag(global.JSON, 'JSON', true);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(7)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(4)\n\t  , core      = __webpack_require__(9)\n\t  , hide      = __webpack_require__(10)\n\t  , redefine  = __webpack_require__(18)\n\t  , ctx       = __webpack_require__(20)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n\t    , key, own, out, exp;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // extend global\n\t    if(target)redefine(target, key, out, type & $export.U);\n\t    // export\n\t    if(exports[key] != out)hide(exports, key, exp);\n\t    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n\t  }\n\t};\n\tglobal.core = core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(11)\n\t  , createDesc = __webpack_require__(17);\n\tmodule.exports = __webpack_require__(6) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(12)\n\t  , IE8_DOM_DEFINE = __webpack_require__(14)\n\t  , toPrimitive    = __webpack_require__(16)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(13);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(6) && !__webpack_require__(7)(function(){\r\n\t  return Object.defineProperty(__webpack_require__(15)('div'), 'a', {get: function(){ return 7; }}).a != 7;\r\n\t});\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(13)\n\t  , document = __webpack_require__(4).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(13);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(4)\n\t  , hide      = __webpack_require__(10)\n\t  , has       = __webpack_require__(5)\n\t  , SRC       = __webpack_require__(19)('src')\n\t  , TO_STRING = 'toString'\n\t  , $toString = Function[TO_STRING]\n\t  , TPL       = ('' + $toString).split(TO_STRING);\n\t\n\t__webpack_require__(9).inspectSource = function(it){\n\t  return $toString.call(it);\n\t};\n\t\n\t(module.exports = function(O, key, val, safe){\n\t  var isFunction = typeof val == 'function';\n\t  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n\t  if(O[key] === val)return;\n\t  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\t  if(O === global){\n\t    O[key] = val;\n\t  } else {\n\t    if(!safe){\n\t      delete O[key];\n\t      hide(O, key, val);\n\t    } else {\n\t      if(O[key])O[key] = val;\n\t      else hide(O, key, val);\n\t    }\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString(){\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(21);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar META     = __webpack_require__(19)('meta')\n\t  , isObject = __webpack_require__(13)\n\t  , has      = __webpack_require__(5)\n\t  , setDesc  = __webpack_require__(11).f\n\t  , id       = 0;\n\tvar isExtensible = Object.isExtensible || function(){\n\t  return true;\n\t};\n\tvar FREEZE = !__webpack_require__(7)(function(){\n\t  return isExtensible(Object.preventExtensions({}));\n\t});\n\tvar setMeta = function(it){\n\t  setDesc(it, META, {value: {\n\t    i: 'O' + ++id, // object ID\n\t    w: {}          // weak collections IDs\n\t  }});\n\t};\n\tvar fastKey = function(it, create){\n\t  // return primitive with prefix\n\t  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\t  if(!has(it, META)){\n\t    // can't set metadata to uncaught frozen object\n\t    if(!isExtensible(it))return 'F';\n\t    // not necessary to add metadata\n\t    if(!create)return 'E';\n\t    // add missing metadata\n\t    setMeta(it);\n\t  // return object ID\n\t  } return it[META].i;\n\t};\n\tvar getWeak = function(it, create){\n\t  if(!has(it, META)){\n\t    // can't set metadata to uncaught frozen object\n\t    if(!isExtensible(it))return true;\n\t    // not necessary to add metadata\n\t    if(!create)return false;\n\t    // add missing metadata\n\t    setMeta(it);\n\t  // return hash weak collections IDs\n\t  } return it[META].w;\n\t};\n\t// add metadata on freeze-family methods calling\n\tvar onFreeze = function(it){\n\t  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n\t  return it;\n\t};\n\tvar meta = module.exports = {\n\t  KEY:      META,\n\t  NEED:     false,\n\t  fastKey:  fastKey,\n\t  getWeak:  getWeak,\n\t  onFreeze: onFreeze\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(4)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar def = __webpack_require__(11).f\n\t  , has = __webpack_require__(5)\n\t  , TAG = __webpack_require__(25)('toStringTag');\n\t\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar store      = __webpack_require__(23)('wks')\n\t  , uid        = __webpack_require__(19)\n\t  , Symbol     = __webpack_require__(4).Symbol\n\t  , USE_SYMBOL = typeof Symbol == 'function';\n\t\n\tvar $exports = module.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n\t};\n\t\n\t$exports.store = store;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.f = __webpack_require__(25);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global         = __webpack_require__(4)\r\n\t  , core           = __webpack_require__(9)\r\n\t  , LIBRARY        = __webpack_require__(28)\r\n\t  , wksExt         = __webpack_require__(26)\r\n\t  , defineProperty = __webpack_require__(11).f;\r\n\tmodule.exports = function(name){\r\n\t  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\r\n\t  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\r\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = false;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getKeys   = __webpack_require__(30)\n\t  , toIObject = __webpack_require__(32);\n\tmodule.exports = function(object, el){\n\t  var O      = toIObject(object)\n\t    , keys   = getKeys(O)\n\t    , length = keys.length\n\t    , index  = 0\n\t    , key;\n\t  while(length > index)if(O[key = keys[index++]] === el)return key;\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\n\tvar $keys       = __webpack_require__(31)\r\n\t  , enumBugKeys = __webpack_require__(41);\r\n\t\r\n\tmodule.exports = Object.keys || function keys(O){\r\n\t  return $keys(O, enumBugKeys);\r\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(5)\r\n\t  , toIObject    = __webpack_require__(32)\r\n\t  , arrayIndexOf = __webpack_require__(36)(false)\r\n\t  , IE_PROTO     = __webpack_require__(40)('IE_PROTO');\r\n\t\r\n\tmodule.exports = function(object, names){\r\n\t  var O      = toIObject(object)\r\n\t    , i      = 0\r\n\t    , result = []\r\n\t    , key;\r\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\r\n\t  // Don't enum bug & hidden keys\r\n\t  while(names.length > i)if(has(O, key = names[i++])){\r\n\t    ~arrayIndexOf(result, key) || result.push(key);\r\n\t  }\r\n\t  return result;\r\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(33)\n\t  , defined = __webpack_require__(35);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(34);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(32)\n\t  , toLength  = __webpack_require__(37)\n\t  , toIndex   = __webpack_require__(39);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(38)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(38)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(23)('keys')\r\n\t  , uid    = __webpack_require__(19);\r\n\tmodule.exports = function(key){\r\n\t  return shared[key] || (shared[key] = uid(key));\r\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\r\n\tmodule.exports = (\r\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n\t).split(',');\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// all enumerable object keys, includes symbols\n\tvar getKeys = __webpack_require__(30)\n\t  , gOPS    = __webpack_require__(43)\n\t  , pIE     = __webpack_require__(44);\n\tmodule.exports = function(it){\n\t  var result     = getKeys(it)\n\t    , getSymbols = gOPS.f;\n\t  if(getSymbols){\n\t    var symbols = getSymbols(it)\n\t      , isEnum  = pIE.f\n\t      , i       = 0\n\t      , key;\n\t    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n\t  } return result;\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.2.2 IsArray(argument)\n\tvar cof = __webpack_require__(34);\n\tmodule.exports = Array.isArray || function isArray(arg){\n\t  return cof(arg) == 'Array';\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n\tvar anObject    = __webpack_require__(12)\r\n\t  , dPs         = __webpack_require__(47)\r\n\t  , enumBugKeys = __webpack_require__(41)\r\n\t  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')\r\n\t  , Empty       = function(){ /* empty */ }\r\n\t  , PROTOTYPE   = 'prototype';\r\n\t\r\n\t// Create object with fake `null` prototype: use iframe Object with cleared prototype\r\n\tvar createDict = function(){\r\n\t  // Thrash, waste and sodomy: IE GC bug\r\n\t  var iframe = __webpack_require__(15)('iframe')\r\n\t    , i      = enumBugKeys.length\r\n\t    , gt     = '>'\r\n\t    , iframeDocument;\r\n\t  iframe.style.display = 'none';\r\n\t  __webpack_require__(48).appendChild(iframe);\r\n\t  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\r\n\t  // createDict = iframe.contentWindow.Object;\r\n\t  // html.removeChild(iframe);\r\n\t  iframeDocument = iframe.contentWindow.document;\r\n\t  iframeDocument.open();\r\n\t  iframeDocument.write('<script>document.F=Object</script' + gt);\r\n\t  iframeDocument.close();\r\n\t  createDict = iframeDocument.F;\r\n\t  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\r\n\t  return createDict();\r\n\t};\r\n\t\r\n\tmodule.exports = Object.create || function create(O, Properties){\r\n\t  var result;\r\n\t  if(O !== null){\r\n\t    Empty[PROTOTYPE] = anObject(O);\r\n\t    result = new Empty;\r\n\t    Empty[PROTOTYPE] = null;\r\n\t    // add \"__proto__\" for Object.getPrototypeOf polyfill\r\n\t    result[IE_PROTO] = O;\r\n\t  } else result = createDict();\r\n\t  return Properties === undefined ? result : dPs(result, Properties);\r\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP       = __webpack_require__(11)\r\n\t  , anObject = __webpack_require__(12)\r\n\t  , getKeys  = __webpack_require__(30);\r\n\t\r\n\tmodule.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties){\r\n\t  anObject(O);\r\n\t  var keys   = getKeys(Properties)\r\n\t    , length = keys.length\r\n\t    , i = 0\r\n\t    , P;\r\n\t  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\r\n\t  return O;\r\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4).document && document.documentElement;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\tvar toIObject = __webpack_require__(32)\n\t  , gOPN      = __webpack_require__(50).f\n\t  , toString  = {}.toString;\n\t\n\tvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n\t  ? Object.getOwnPropertyNames(window) : [];\n\t\n\tvar getWindowNames = function(it){\n\t  try {\n\t    return gOPN(it);\n\t  } catch(e){\n\t    return windowNames.slice();\n\t  }\n\t};\n\t\n\tmodule.exports.f = function getOwnPropertyNames(it){\n\t  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n\t};\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\r\n\tvar $keys      = __webpack_require__(31)\r\n\t  , hiddenKeys = __webpack_require__(41).concat('length', 'prototype');\r\n\t\r\n\texports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\r\n\t  return $keys(O, hiddenKeys);\r\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pIE            = __webpack_require__(44)\r\n\t  , createDesc     = __webpack_require__(17)\r\n\t  , toIObject      = __webpack_require__(32)\r\n\t  , toPrimitive    = __webpack_require__(16)\r\n\t  , has            = __webpack_require__(5)\r\n\t  , IE8_DOM_DEFINE = __webpack_require__(14)\r\n\t  , gOPD           = Object.getOwnPropertyDescriptor;\r\n\t\r\n\texports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P){\r\n\t  O = toIObject(O);\r\n\t  P = toPrimitive(P, true);\r\n\t  if(IE8_DOM_DEFINE)try {\r\n\t    return gOPD(O, P);\r\n\t  } catch(e){ /* empty */ }\r\n\t  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\r\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8)\r\n\t// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n\t$export($export.S, 'Object', {create: __webpack_require__(46)});\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8);\r\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\r\n\t$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperty: __webpack_require__(11).f});\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8);\r\n\t// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\r\n\t$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperties: __webpack_require__(47)});\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\tvar toIObject                 = __webpack_require__(32)\n\t  , $getOwnPropertyDescriptor = __webpack_require__(51).f;\n\t\n\t__webpack_require__(56)('getOwnPropertyDescriptor', function(){\n\t  return function getOwnPropertyDescriptor(it, key){\n\t    return $getOwnPropertyDescriptor(toIObject(it), key);\n\t  };\n\t});\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(8)\n\t  , core    = __webpack_require__(9)\n\t  , fails   = __webpack_require__(7);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.9 Object.getPrototypeOf(O)\n\tvar toObject        = __webpack_require__(58)\n\t  , $getPrototypeOf = __webpack_require__(59);\n\t\n\t__webpack_require__(56)('getPrototypeOf', function(){\n\t  return function getPrototypeOf(it){\n\t    return $getPrototypeOf(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(35);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\r\n\tvar has         = __webpack_require__(5)\r\n\t  , toObject    = __webpack_require__(58)\r\n\t  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')\r\n\t  , ObjectProto = Object.prototype;\r\n\t\r\n\tmodule.exports = Object.getPrototypeOf || function(O){\r\n\t  O = toObject(O);\r\n\t  if(has(O, IE_PROTO))return O[IE_PROTO];\r\n\t  if(typeof O.constructor == 'function' && O instanceof O.constructor){\r\n\t    return O.constructor.prototype;\r\n\t  } return O instanceof Object ? ObjectProto : null;\r\n\t};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __webpack_require__(58)\n\t  , $keys    = __webpack_require__(30);\n\t\n\t__webpack_require__(56)('keys', function(){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.7 Object.getOwnPropertyNames(O)\n\t__webpack_require__(56)('getOwnPropertyNames', function(){\n\t  return __webpack_require__(49).f;\n\t});\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.5 Object.freeze(O)\n\tvar isObject = __webpack_require__(13)\n\t  , meta     = __webpack_require__(22).onFreeze;\n\t\n\t__webpack_require__(56)('freeze', function($freeze){\n\t  return function freeze(it){\n\t    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.17 Object.seal(O)\n\tvar isObject = __webpack_require__(13)\n\t  , meta     = __webpack_require__(22).onFreeze;\n\t\n\t__webpack_require__(56)('seal', function($seal){\n\t  return function seal(it){\n\t    return $seal && isObject(it) ? $seal(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.15 Object.preventExtensions(O)\n\tvar isObject = __webpack_require__(13)\n\t  , meta     = __webpack_require__(22).onFreeze;\n\t\n\t__webpack_require__(56)('preventExtensions', function($preventExtensions){\n\t  return function preventExtensions(it){\n\t    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n\t  };\n\t});\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.12 Object.isFrozen(O)\n\tvar isObject = __webpack_require__(13);\n\t\n\t__webpack_require__(56)('isFrozen', function($isFrozen){\n\t  return function isFrozen(it){\n\t    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n\t  };\n\t});\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.13 Object.isSealed(O)\n\tvar isObject = __webpack_require__(13);\n\t\n\t__webpack_require__(56)('isSealed', function($isSealed){\n\t  return function isSealed(it){\n\t    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n\t  };\n\t});\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.11 Object.isExtensible(O)\n\tvar isObject = __webpack_require__(13);\n\t\n\t__webpack_require__(56)('isExtensible', function($isExtensible){\n\t  return function isExtensible(it){\n\t    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n\t  };\n\t});\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(69)});\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys  = __webpack_require__(30)\n\t  , gOPS     = __webpack_require__(43)\n\t  , pIE      = __webpack_require__(44)\n\t  , toObject = __webpack_require__(58)\n\t  , IObject  = __webpack_require__(33)\n\t  , $assign  = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(7)(function(){\n\t  var A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , aLen  = arguments.length\n\t    , index = 1\n\t    , getSymbols = gOPS.f\n\t    , isEnum     = pIE.f;\n\t  while(aLen > index){\n\t    var S      = IObject(arguments[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.10 Object.is(value1, value2)\n\tvar $export = __webpack_require__(8);\n\t$export($export.S, 'Object', {is: __webpack_require__(71)});\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\t// 7.2.9 SameValue(x, y)\n\tmodule.exports = Object.is || function is(x, y){\n\t  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n\t};\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.19 Object.setPrototypeOf(O, proto)\n\tvar $export = __webpack_require__(8);\n\t$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(73).set});\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Works with __proto__ only. Old v8 can't work with null proto objects.\n\t/* eslint-disable no-proto */\n\tvar isObject = __webpack_require__(13)\n\t  , anObject = __webpack_require__(12);\n\tvar check = function(O, proto){\n\t  anObject(O);\n\t  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n\t};\n\tmodule.exports = {\n\t  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n\t    function(test, buggy, set){\n\t      try {\n\t        set = __webpack_require__(20)(Function.call, __webpack_require__(51).f(Object.prototype, '__proto__').set, 2);\n\t        set(test, []);\n\t        buggy = !(test instanceof Array);\n\t      } catch(e){ buggy = true; }\n\t      return function setPrototypeOf(O, proto){\n\t        check(O, proto);\n\t        if(buggy)O.__proto__ = proto;\n\t        else set(O, proto);\n\t        return O;\n\t      };\n\t    }({}, false) : undefined),\n\t  check: check\n\t};\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.3.6 Object.prototype.toString()\n\tvar classof = __webpack_require__(75)\n\t  , test    = {};\n\ttest[__webpack_require__(25)('toStringTag')] = 'z';\n\tif(test + '' != '[object z]'){\n\t  __webpack_require__(18)(Object.prototype, 'toString', function toString(){\n\t    return '[object ' + classof(this) + ']';\n\t  }, true);\n\t}\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __webpack_require__(34)\n\t  , TAG = __webpack_require__(25)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\t\n\t// fallback for IE11 Script Access Denied error\n\tvar tryGet = function(it, key){\n\t  try {\n\t    return it[key];\n\t  } catch(e){ /* empty */ }\n\t};\n\t\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\r\n\tvar $export = __webpack_require__(8);\r\n\t\r\n\t$export($export.P, 'Function', {bind: __webpack_require__(77)});\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar aFunction  = __webpack_require__(21)\n\t  , isObject   = __webpack_require__(13)\n\t  , invoke     = __webpack_require__(78)\n\t  , arraySlice = [].slice\n\t  , factories  = {};\n\t\n\tvar construct = function(F, len, args){\n\t  if(!(len in factories)){\n\t    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';\n\t    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n\t  } return factories[len](F, args);\n\t};\n\t\n\tmodule.exports = Function.bind || function bind(that /*, args... */){\n\t  var fn       = aFunction(this)\n\t    , partArgs = arraySlice.call(arguments, 1);\n\t  var bound = function(/* args... */){\n\t    var args = partArgs.concat(arraySlice.call(arguments));\n\t    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n\t  };\n\t  if(isObject(fn.prototype))bound.prototype = fn.prototype;\n\t  return bound;\n\t};\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\t// fast apply, http://jsperf.lnkit.com/fast-apply/5\n\tmodule.exports = function(fn, args, that){\n\t  var un = that === undefined;\n\t  switch(args.length){\n\t    case 0: return un ? fn()\n\t                      : fn.call(that);\n\t    case 1: return un ? fn(args[0])\n\t                      : fn.call(that, args[0]);\n\t    case 2: return un ? fn(args[0], args[1])\n\t                      : fn.call(that, args[0], args[1]);\n\t    case 3: return un ? fn(args[0], args[1], args[2])\n\t                      : fn.call(that, args[0], args[1], args[2]);\n\t    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n\t                      : fn.call(that, args[0], args[1], args[2], args[3]);\n\t  } return              fn.apply(that, args);\n\t};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(11).f\n\t  , createDesc = __webpack_require__(17)\n\t  , has        = __webpack_require__(5)\n\t  , FProto     = Function.prototype\n\t  , nameRE     = /^\\s*function ([^ (]*)/\n\t  , NAME       = 'name';\n\t\n\tvar isExtensible = Object.isExtensible || function(){\n\t  return true;\n\t};\n\t\n\t// 19.2.4.2 name\n\tNAME in FProto || __webpack_require__(6) && dP(FProto, NAME, {\n\t  configurable: true,\n\t  get: function(){\n\t    try {\n\t      var that = this\n\t        , name = ('' + that).match(nameRE)[1];\n\t      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));\n\t      return name;\n\t    } catch(e){\n\t      return '';\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar isObject       = __webpack_require__(13)\n\t  , getPrototypeOf = __webpack_require__(59)\n\t  , HAS_INSTANCE   = __webpack_require__(25)('hasInstance')\n\t  , FunctionProto  = Function.prototype;\n\t// 19.2.3.6 Function.prototype[@@hasInstance](V)\n\tif(!(HAS_INSTANCE in FunctionProto))__webpack_require__(11).f(FunctionProto, HAS_INSTANCE, {value: function(O){\n\t  if(typeof this != 'function' || !isObject(O))return false;\n\t  if(!isObject(this.prototype))return O instanceof this;\n\t  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\t  while(O = getPrototypeOf(O))if(this.prototype === O)return true;\n\t  return false;\n\t}});\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(8)\r\n\t  , $parseInt = __webpack_require__(82);\r\n\t// 18.2.5 parseInt(string, radix)\r\n\t$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $parseInt = __webpack_require__(4).parseInt\n\t  , $trim     = __webpack_require__(83).trim\n\t  , ws        = __webpack_require__(84)\n\t  , hex       = /^[\\-+]?0[xX]/;\n\t\n\tmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){\n\t  var string = $trim(String(str), 3);\n\t  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n\t} : $parseInt;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8)\n\t  , defined = __webpack_require__(35)\n\t  , fails   = __webpack_require__(7)\n\t  , spaces  = __webpack_require__(84)\n\t  , space   = '[' + spaces + ']'\n\t  , non     = '\\u200b\\u0085'\n\t  , ltrim   = RegExp('^' + space + space + '*')\n\t  , rtrim   = RegExp(space + space + '*$');\n\t\n\tvar exporter = function(KEY, exec, ALIAS){\n\t  var exp   = {};\n\t  var FORCE = fails(function(){\n\t    return !!spaces[KEY]() || non[KEY]() != non;\n\t  });\n\t  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n\t  if(ALIAS)exp[ALIAS] = fn;\n\t  $export($export.P + $export.F * FORCE, 'String', exp);\n\t};\n\t\n\t// 1 -> String#trimLeft\n\t// 2 -> String#trimRight\n\t// 3 -> String#trim\n\tvar trim = exporter.trim = function(string, TYPE){\n\t  string = String(defined(string));\n\t  if(TYPE & 1)string = string.replace(ltrim, '');\n\t  if(TYPE & 2)string = string.replace(rtrim, '');\n\t  return string;\n\t};\n\t\n\tmodule.exports = exporter;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\tmodule.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\r\n\t  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export     = __webpack_require__(8)\r\n\t  , $parseFloat = __webpack_require__(86);\r\n\t// 18.2.4 parseFloat(string)\r\n\t$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $parseFloat = __webpack_require__(4).parseFloat\n\t  , $trim       = __webpack_require__(83).trim;\n\t\n\tmodule.exports = 1 / $parseFloat(__webpack_require__(84) + '-0') !== -Infinity ? function parseFloat(str){\n\t  var string = $trim(String(str), 3)\n\t    , result = $parseFloat(string);\n\t  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n\t} : $parseFloat;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global            = __webpack_require__(4)\n\t  , has               = __webpack_require__(5)\n\t  , cof               = __webpack_require__(34)\n\t  , inheritIfRequired = __webpack_require__(88)\n\t  , toPrimitive       = __webpack_require__(16)\n\t  , fails             = __webpack_require__(7)\n\t  , gOPN              = __webpack_require__(50).f\n\t  , gOPD              = __webpack_require__(51).f\n\t  , dP                = __webpack_require__(11).f\n\t  , $trim             = __webpack_require__(83).trim\n\t  , NUMBER            = 'Number'\n\t  , $Number           = global[NUMBER]\n\t  , Base              = $Number\n\t  , proto             = $Number.prototype\n\t  // Opera ~12 has broken Object#toString\n\t  , BROKEN_COF        = cof(__webpack_require__(46)(proto)) == NUMBER\n\t  , TRIM              = 'trim' in String.prototype;\n\t\n\t// 7.1.3 ToNumber(argument)\n\tvar toNumber = function(argument){\n\t  var it = toPrimitive(argument, false);\n\t  if(typeof it == 'string' && it.length > 2){\n\t    it = TRIM ? it.trim() : $trim(it, 3);\n\t    var first = it.charCodeAt(0)\n\t      , third, radix, maxCode;\n\t    if(first === 43 || first === 45){\n\t      third = it.charCodeAt(2);\n\t      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix\n\t    } else if(first === 48){\n\t      switch(it.charCodeAt(1)){\n\t        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n\t        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n\t        default : return +it;\n\t      }\n\t      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){\n\t        code = digits.charCodeAt(i);\n\t        // parseInt parses a string to a first unavailable symbol\n\t        // but ToNumber should return NaN if a string contains unavailable symbols\n\t        if(code < 48 || code > maxCode)return NaN;\n\t      } return parseInt(digits, radix);\n\t    }\n\t  } return +it;\n\t};\n\t\n\tif(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){\n\t  $Number = function Number(value){\n\t    var it = arguments.length < 1 ? 0 : value\n\t      , that = this;\n\t    return that instanceof $Number\n\t      // check on 1..constructor(foo) case\n\t      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)\n\t        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n\t  };\n\t  for(var keys = __webpack_require__(6) ? gOPN(Base) : (\n\t    // ES3:\n\t    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n\t    // ES6 (in case, if modules with ES6 Number statics required before):\n\t    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n\t    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n\t  ).split(','), j = 0, key; keys.length > j; j++){\n\t    if(has(Base, key = keys[j]) && !has($Number, key)){\n\t      dP($Number, key, gOPD(Base, key));\n\t    }\n\t  }\n\t  $Number.prototype = proto;\n\t  proto.constructor = $Number;\n\t  __webpack_require__(18)(global, NUMBER, $Number);\n\t}\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject       = __webpack_require__(13)\r\n\t  , setPrototypeOf = __webpack_require__(73).set;\r\n\tmodule.exports = function(that, target, C){\r\n\t  var P, S = target.constructor;\r\n\t  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){\r\n\t    setPrototypeOf(that, P);\r\n\t  } return that;\r\n\t};\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export      = __webpack_require__(8)\r\n\t  , anInstance   = __webpack_require__(90)\r\n\t  , toInteger    = __webpack_require__(38)\r\n\t  , aNumberValue = __webpack_require__(91)\r\n\t  , repeat       = __webpack_require__(92)\r\n\t  , $toFixed     = 1..toFixed\r\n\t  , floor        = Math.floor\r\n\t  , data         = [0, 0, 0, 0, 0, 0]\r\n\t  , ERROR        = 'Number.toFixed: incorrect invocation!'\r\n\t  , ZERO         = '0';\r\n\t\r\n\tvar multiply = function(n, c){\r\n\t  var i  = -1\r\n\t    , c2 = c;\r\n\t  while(++i < 6){\r\n\t    c2 += n * data[i];\r\n\t    data[i] = c2 % 1e7;\r\n\t    c2 = floor(c2 / 1e7);\r\n\t  }\r\n\t};\r\n\tvar divide = function(n){\r\n\t  var i = 6\r\n\t    , c = 0;\r\n\t  while(--i >= 0){\r\n\t    c += data[i];\r\n\t    data[i] = floor(c / n);\r\n\t    c = (c % n) * 1e7;\r\n\t  }\r\n\t};\r\n\tvar numToString = function(){\r\n\t  var i = 6\r\n\t    , s = '';\r\n\t  while(--i >= 0){\r\n\t    if(s !== '' || i === 0 || data[i] !== 0){\r\n\t      var t = String(data[i]);\r\n\t      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\r\n\t    }\r\n\t  } return s;\r\n\t};\r\n\tvar pow = function(x, n, acc){\r\n\t  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\r\n\t};\r\n\tvar log = function(x){\r\n\t  var n  = 0\r\n\t    , x2 = x;\r\n\t  while(x2 >= 4096){\r\n\t    n += 12;\r\n\t    x2 /= 4096;\r\n\t  }\r\n\t  while(x2 >= 2){\r\n\t    n  += 1;\r\n\t    x2 /= 2;\r\n\t  } return n;\r\n\t};\r\n\t\r\n\t$export($export.P + $export.F * (!!$toFixed && (\r\n\t  0.00008.toFixed(3) !== '0.000' ||\r\n\t  0.9.toFixed(0) !== '1' ||\r\n\t  1.255.toFixed(2) !== '1.25' ||\r\n\t  1000000000000000128..toFixed(0) !== '1000000000000000128'\r\n\t) || !__webpack_require__(7)(function(){\r\n\t  // V8 ~ Android 4.3-\r\n\t  $toFixed.call({});\r\n\t})), 'Number', {\r\n\t  toFixed: function toFixed(fractionDigits){\r\n\t    var x = aNumberValue(this, ERROR)\r\n\t      , f = toInteger(fractionDigits)\r\n\t      , s = ''\r\n\t      , m = ZERO\r\n\t      , e, z, j, k;\r\n\t    if(f < 0 || f > 20)throw RangeError(ERROR);\r\n\t    if(x != x)return 'NaN';\r\n\t    if(x <= -1e21 || x >= 1e21)return String(x);\r\n\t    if(x < 0){\r\n\t      s = '-';\r\n\t      x = -x;\r\n\t    }\r\n\t    if(x > 1e-21){\r\n\t      e = log(x * pow(2, 69, 1)) - 69;\r\n\t      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\r\n\t      z *= 0x10000000000000;\r\n\t      e = 52 - e;\r\n\t      if(e > 0){\r\n\t        multiply(0, z);\r\n\t        j = f;\r\n\t        while(j >= 7){\r\n\t          multiply(1e7, 0);\r\n\t          j -= 7;\r\n\t        }\r\n\t        multiply(pow(10, j, 1), 0);\r\n\t        j = e - 1;\r\n\t        while(j >= 23){\r\n\t          divide(1 << 23);\r\n\t          j -= 23;\r\n\t        }\r\n\t        divide(1 << j);\r\n\t        multiply(1, 1);\r\n\t        divide(2);\r\n\t        m = numToString();\r\n\t      } else {\r\n\t        multiply(0, z);\r\n\t        multiply(1 << -e, 0);\r\n\t        m = numToString() + repeat.call(ZERO, f);\r\n\t      }\r\n\t    }\r\n\t    if(f > 0){\r\n\t      k = m.length;\r\n\t      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\r\n\t    } else {\r\n\t      m = s + m;\r\n\t    } return m;\r\n\t  }\r\n\t});\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it, Constructor, name, forbiddenField){\n\t  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n\t    throw TypeError(name + ': incorrect invocation!');\n\t  } return it;\n\t};\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cof = __webpack_require__(34);\r\n\tmodule.exports = function(it, msg){\r\n\t  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);\r\n\t  return +it;\r\n\t};\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar toInteger = __webpack_require__(38)\n\t  , defined   = __webpack_require__(35);\n\t\n\tmodule.exports = function repeat(count){\n\t  var str = String(defined(this))\n\t    , res = ''\n\t    , n   = toInteger(count);\n\t  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n\t  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n\t  return res;\n\t};\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export      = __webpack_require__(8)\r\n\t  , $fails       = __webpack_require__(7)\r\n\t  , aNumberValue = __webpack_require__(91)\r\n\t  , $toPrecision = 1..toPrecision;\r\n\t\r\n\t$export($export.P + $export.F * ($fails(function(){\r\n\t  // IE7-\r\n\t  return $toPrecision.call(1, undefined) !== '1';\r\n\t}) || !$fails(function(){\r\n\t  // V8 ~ Android 4.3-\r\n\t  $toPrecision.call({});\r\n\t})), 'Number', {\r\n\t  toPrecision: function toPrecision(precision){\r\n\t    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\r\n\t    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); \r\n\t  }\r\n\t});\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.1 Number.EPSILON\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.2 Number.isFinite(number)\n\tvar $export   = __webpack_require__(8)\n\t  , _isFinite = __webpack_require__(4).isFinite;\n\t\n\t$export($export.S, 'Number', {\n\t  isFinite: function isFinite(it){\n\t    return typeof it == 'number' && _isFinite(it);\n\t  }\n\t});\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.3 Number.isInteger(number)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Number', {isInteger: __webpack_require__(97)});\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.3 Number.isInteger(number)\n\tvar isObject = __webpack_require__(13)\n\t  , floor    = Math.floor;\n\tmodule.exports = function isInteger(it){\n\t  return !isObject(it) && isFinite(it) && floor(it) === it;\n\t};\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.4 Number.isNaN(number)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Number', {\n\t  isNaN: function isNaN(number){\n\t    return number != number;\n\t  }\n\t});\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.5 Number.isSafeInteger(number)\n\tvar $export   = __webpack_require__(8)\n\t  , isInteger = __webpack_require__(97)\n\t  , abs       = Math.abs;\n\t\n\t$export($export.S, 'Number', {\n\t  isSafeInteger: function isSafeInteger(number){\n\t    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n\t  }\n\t});\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.6 Number.MAX_SAFE_INTEGER\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.1.2.10 Number.MIN_SAFE_INTEGER\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export     = __webpack_require__(8)\n\t  , $parseFloat = __webpack_require__(86);\n\t// 20.1.2.12 Number.parseFloat(string)\n\t$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(8)\n\t  , $parseInt = __webpack_require__(82);\n\t// 20.1.2.13 Number.parseInt(string, radix)\n\t$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.3 Math.acosh(x)\n\tvar $export = __webpack_require__(8)\n\t  , log1p   = __webpack_require__(105)\n\t  , sqrt    = Math.sqrt\n\t  , $acosh  = Math.acosh;\n\t\n\t$export($export.S + $export.F * !($acosh\n\t  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n\t  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n\t  // Tor Browser bug: Math.acosh(Infinity) -> NaN \n\t  && $acosh(Infinity) == Infinity\n\t), 'Math', {\n\t  acosh: function acosh(x){\n\t    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n\t      ? Math.log(x) + Math.LN2\n\t      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n\t  }\n\t});\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.20 Math.log1p(x)\n\tmodule.exports = Math.log1p || function log1p(x){\n\t  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n\t};\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.5 Math.asinh(x)\n\tvar $export = __webpack_require__(8)\n\t  , $asinh  = Math.asinh;\n\t\n\tfunction asinh(x){\n\t  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n\t}\n\t\n\t// Tor Browser bug: Math.asinh(0) -> -0 \n\t$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.7 Math.atanh(x)\n\tvar $export = __webpack_require__(8)\n\t  , $atanh  = Math.atanh;\n\t\n\t// Tor Browser bug: Math.atanh(-0) -> 0 \n\t$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n\t  atanh: function atanh(x){\n\t    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n\t  }\n\t});\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.9 Math.cbrt(x)\n\tvar $export = __webpack_require__(8)\n\t  , sign    = __webpack_require__(109);\n\t\n\t$export($export.S, 'Math', {\n\t  cbrt: function cbrt(x){\n\t    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n\t  }\n\t});\n\n/***/ },\n/* 109 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.28 Math.sign(x)\n\tmodule.exports = Math.sign || function sign(x){\n\t  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n\t};\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.11 Math.clz32(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  clz32: function clz32(x){\n\t    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n\t  }\n\t});\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.12 Math.cosh(x)\n\tvar $export = __webpack_require__(8)\n\t  , exp     = Math.exp;\n\t\n\t$export($export.S, 'Math', {\n\t  cosh: function cosh(x){\n\t    return (exp(x = +x) + exp(-x)) / 2;\n\t  }\n\t});\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.14 Math.expm1(x)\n\tvar $export = __webpack_require__(8)\n\t  , $expm1  = __webpack_require__(113);\n\t\n\t$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\t// 20.2.2.14 Math.expm1(x)\n\tvar $expm1 = Math.expm1;\n\tmodule.exports = (!$expm1\n\t  // Old FF bug\n\t  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n\t  // Tor Browser bug\n\t  || $expm1(-2e-17) != -2e-17\n\t) ? function expm1(x){\n\t  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n\t} : $expm1;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.16 Math.fround(x)\n\tvar $export   = __webpack_require__(8)\n\t  , sign      = __webpack_require__(109)\n\t  , pow       = Math.pow\n\t  , EPSILON   = pow(2, -52)\n\t  , EPSILON32 = pow(2, -23)\n\t  , MAX32     = pow(2, 127) * (2 - EPSILON32)\n\t  , MIN32     = pow(2, -126);\n\t\n\tvar roundTiesToEven = function(n){\n\t  return n + 1 / EPSILON - 1 / EPSILON;\n\t};\n\t\n\t\n\t$export($export.S, 'Math', {\n\t  fround: function fround(x){\n\t    var $abs  = Math.abs(x)\n\t      , $sign = sign(x)\n\t      , a, result;\n\t    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n\t    a = (1 + EPSILON32 / EPSILON) * $abs;\n\t    result = a - (a - $abs);\n\t    if(result > MAX32 || result != result)return $sign * Infinity;\n\t    return $sign * result;\n\t  }\n\t});\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\n\tvar $export = __webpack_require__(8)\n\t  , abs     = Math.abs;\n\t\n\t$export($export.S, 'Math', {\n\t  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n\t    var sum  = 0\n\t      , i    = 0\n\t      , aLen = arguments.length\n\t      , larg = 0\n\t      , arg, div;\n\t    while(i < aLen){\n\t      arg = abs(arguments[i++]);\n\t      if(larg < arg){\n\t        div  = larg / arg;\n\t        sum  = sum * div * div + 1;\n\t        larg = arg;\n\t      } else if(arg > 0){\n\t        div  = arg / larg;\n\t        sum += div * div;\n\t      } else sum += arg;\n\t    }\n\t    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n\t  }\n\t});\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.18 Math.imul(x, y)\n\tvar $export = __webpack_require__(8)\n\t  , $imul   = Math.imul;\n\t\n\t// some WebKit versions fails with big numbers, some has wrong arity\n\t$export($export.S + $export.F * __webpack_require__(7)(function(){\n\t  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n\t}), 'Math', {\n\t  imul: function imul(x, y){\n\t    var UINT16 = 0xffff\n\t      , xn = +x\n\t      , yn = +y\n\t      , xl = UINT16 & xn\n\t      , yl = UINT16 & yn;\n\t    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n\t  }\n\t});\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.21 Math.log10(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  log10: function log10(x){\n\t    return Math.log(x) / Math.LN10;\n\t  }\n\t});\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.20 Math.log1p(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {log1p: __webpack_require__(105)});\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.22 Math.log2(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  log2: function log2(x){\n\t    return Math.log(x) / Math.LN2;\n\t  }\n\t});\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.28 Math.sign(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {sign: __webpack_require__(109)});\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.30 Math.sinh(x)\n\tvar $export = __webpack_require__(8)\n\t  , expm1   = __webpack_require__(113)\n\t  , exp     = Math.exp;\n\t\n\t// V8 near Chromium 38 has a problem with very small numbers\n\t$export($export.S + $export.F * __webpack_require__(7)(function(){\n\t  return !Math.sinh(-2e-17) != -2e-17;\n\t}), 'Math', {\n\t  sinh: function sinh(x){\n\t    return Math.abs(x = +x) < 1\n\t      ? (expm1(x) - expm1(-x)) / 2\n\t      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n\t  }\n\t});\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.33 Math.tanh(x)\n\tvar $export = __webpack_require__(8)\n\t  , expm1   = __webpack_require__(113)\n\t  , exp     = Math.exp;\n\t\n\t$export($export.S, 'Math', {\n\t  tanh: function tanh(x){\n\t    var a = expm1(x = +x)\n\t      , b = expm1(-x);\n\t    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n\t  }\n\t});\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.2.2.34 Math.trunc(x)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  trunc: function trunc(it){\n\t    return (it > 0 ? Math.floor : Math.ceil)(it);\n\t  }\n\t});\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export        = __webpack_require__(8)\n\t  , toIndex        = __webpack_require__(39)\n\t  , fromCharCode   = String.fromCharCode\n\t  , $fromCodePoint = String.fromCodePoint;\n\t\n\t// length should be 1, old FF problem\n\t$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars\n\t    var res  = []\n\t      , aLen = arguments.length\n\t      , i    = 0\n\t      , code;\n\t    while(aLen > i){\n\t      code = +arguments[i++];\n\t      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export   = __webpack_require__(8)\n\t  , toIObject = __webpack_require__(32)\n\t  , toLength  = __webpack_require__(37);\n\t\n\t$export($export.S, 'String', {\n\t  // 21.1.2.4 String.raw(callSite, ...substitutions)\n\t  raw: function raw(callSite){\n\t    var tpl  = toIObject(callSite.raw)\n\t      , len  = toLength(tpl.length)\n\t      , aLen = arguments.length\n\t      , res  = []\n\t      , i    = 0;\n\t    while(len > i){\n\t      res.push(String(tpl[i++]));\n\t      if(i < aLen)res.push(String(arguments[i]));\n\t    } return res.join('');\n\t  }\n\t});\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 21.1.3.25 String.prototype.trim()\n\t__webpack_require__(83)('trim', function($trim){\n\t  return function trim(){\n\t    return $trim(this, 3);\n\t  };\n\t});\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $at  = __webpack_require__(128)(true);\n\t\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__webpack_require__(129)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(38)\n\t  , defined   = __webpack_require__(35);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY        = __webpack_require__(28)\n\t  , $export        = __webpack_require__(8)\n\t  , redefine       = __webpack_require__(18)\n\t  , hide           = __webpack_require__(10)\n\t  , has            = __webpack_require__(5)\n\t  , Iterators      = __webpack_require__(130)\n\t  , $iterCreate    = __webpack_require__(131)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , getPrototypeOf = __webpack_require__(59)\n\t  , ITERATOR       = __webpack_require__(25)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\t\n\tvar returnThis = function(){ return this; };\n\t\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n\t    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n\t    , methods, key, IteratorPrototype;\n\t  // Fix native\n\t  if($anyNative){\n\t    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n\t    if(IteratorPrototype !== Object.prototype){\n\t      // Set @@toStringTag to native iterators\n\t      setToStringTag(IteratorPrototype, TAG, true);\n\t      // fix for some old engines\n\t      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    }\n\t  }\n\t  // fix Array#{values, @@iterator}.name in V8 / FF\n\t  if(DEF_VALUES && $native && $native.name !== VALUES){\n\t    VALUES_BUG = true;\n\t    $default = function values(){ return $native.call(this); };\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES ? $default : getMethod(VALUES),\n\t      keys:    IS_SET     ? $default : getMethod(KEYS),\n\t      entries: $entries\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ },\n/* 130 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar create         = __webpack_require__(46)\n\t  , descriptor     = __webpack_require__(17)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , IteratorPrototype = {};\n\t\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__webpack_require__(10)(IteratorPrototype, __webpack_require__(25)('iterator'), function(){ return this; });\n\t\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(8)\n\t  , $at     = __webpack_require__(128)(false);\n\t$export($export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos){\n\t    return $at(this, pos);\n\t  }\n\t});\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n\t'use strict';\n\tvar $export   = __webpack_require__(8)\n\t  , toLength  = __webpack_require__(37)\n\t  , context   = __webpack_require__(134)\n\t  , ENDS_WITH = 'endsWith'\n\t  , $endsWith = ''[ENDS_WITH];\n\t\n\t$export($export.P + $export.F * __webpack_require__(136)(ENDS_WITH), 'String', {\n\t  endsWith: function endsWith(searchString /*, endPosition = @length */){\n\t    var that = context(this, searchString, ENDS_WITH)\n\t      , endPosition = arguments.length > 1 ? arguments[1] : undefined\n\t      , len    = toLength(that.length)\n\t      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n\t      , search = String(searchString);\n\t    return $endsWith\n\t      ? $endsWith.call(that, search, end)\n\t      : that.slice(end - search.length, end) === search;\n\t  }\n\t});\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// helper for String#{startsWith, endsWith, includes}\n\tvar isRegExp = __webpack_require__(135)\n\t  , defined  = __webpack_require__(35);\n\t\n\tmodule.exports = function(that, searchString, NAME){\n\t  if(isRegExp(searchString))throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n\t  return String(defined(that));\n\t};\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.2.8 IsRegExp(argument)\n\tvar isObject = __webpack_require__(13)\n\t  , cof      = __webpack_require__(34)\n\t  , MATCH    = __webpack_require__(25)('match');\n\tmodule.exports = function(it){\n\t  var isRegExp;\n\t  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n\t};\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar MATCH = __webpack_require__(25)('match');\n\tmodule.exports = function(KEY){\n\t  var re = /./;\n\t  try {\n\t    '/./'[KEY](re);\n\t  } catch(e){\n\t    try {\n\t      re[MATCH] = false;\n\t      return !'/./'[KEY](re);\n\t    } catch(f){ /* empty */ }\n\t  } return true;\n\t};\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n\t'use strict';\n\tvar $export  = __webpack_require__(8)\n\t  , context  = __webpack_require__(134)\n\t  , INCLUDES = 'includes';\n\t\n\t$export($export.P + $export.F * __webpack_require__(136)(INCLUDES), 'String', {\n\t  includes: function includes(searchString /*, position = 0 */){\n\t    return !!~context(this, searchString, INCLUDES)\n\t      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.P, 'String', {\n\t  // 21.1.3.13 String.prototype.repeat(count)\n\t  repeat: __webpack_require__(92)\n\t});\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n\t'use strict';\n\tvar $export     = __webpack_require__(8)\n\t  , toLength    = __webpack_require__(37)\n\t  , context     = __webpack_require__(134)\n\t  , STARTS_WITH = 'startsWith'\n\t  , $startsWith = ''[STARTS_WITH];\n\t\n\t$export($export.P + $export.F * __webpack_require__(136)(STARTS_WITH), 'String', {\n\t  startsWith: function startsWith(searchString /*, position = 0 */){\n\t    var that   = context(this, searchString, STARTS_WITH)\n\t      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))\n\t      , search = String(searchString);\n\t    return $startsWith\n\t      ? $startsWith.call(that, search, index)\n\t      : that.slice(index, index + search.length) === search;\n\t  }\n\t});\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.2 String.prototype.anchor(name)\n\t__webpack_require__(141)('anchor', function(createHTML){\n\t  return function anchor(name){\n\t    return createHTML(this, 'a', 'name', name);\n\t  }\n\t});\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8)\n\t  , fails   = __webpack_require__(7)\n\t  , defined = __webpack_require__(35)\n\t  , quot    = /\"/g;\n\t// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\n\tvar createHTML = function(string, tag, attribute, value) {\n\t  var S  = String(defined(string))\n\t    , p1 = '<' + tag;\n\t  if(attribute !== '')p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n\t  return p1 + '>' + S + '</' + tag + '>';\n\t};\n\tmodule.exports = function(NAME, exec){\n\t  var O = {};\n\t  O[NAME] = exec(createHTML);\n\t  $export($export.P + $export.F * fails(function(){\n\t    var test = ''[NAME]('\"');\n\t    return test !== test.toLowerCase() || test.split('\"').length > 3;\n\t  }), 'String', O);\n\t};\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.3 String.prototype.big()\n\t__webpack_require__(141)('big', function(createHTML){\n\t  return function big(){\n\t    return createHTML(this, 'big', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.4 String.prototype.blink()\n\t__webpack_require__(141)('blink', function(createHTML){\n\t  return function blink(){\n\t    return createHTML(this, 'blink', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.5 String.prototype.bold()\n\t__webpack_require__(141)('bold', function(createHTML){\n\t  return function bold(){\n\t    return createHTML(this, 'b', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.6 String.prototype.fixed()\n\t__webpack_require__(141)('fixed', function(createHTML){\n\t  return function fixed(){\n\t    return createHTML(this, 'tt', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.7 String.prototype.fontcolor(color)\n\t__webpack_require__(141)('fontcolor', function(createHTML){\n\t  return function fontcolor(color){\n\t    return createHTML(this, 'font', 'color', color);\n\t  }\n\t});\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.8 String.prototype.fontsize(size)\n\t__webpack_require__(141)('fontsize', function(createHTML){\n\t  return function fontsize(size){\n\t    return createHTML(this, 'font', 'size', size);\n\t  }\n\t});\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.9 String.prototype.italics()\n\t__webpack_require__(141)('italics', function(createHTML){\n\t  return function italics(){\n\t    return createHTML(this, 'i', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.10 String.prototype.link(url)\n\t__webpack_require__(141)('link', function(createHTML){\n\t  return function link(url){\n\t    return createHTML(this, 'a', 'href', url);\n\t  }\n\t});\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.11 String.prototype.small()\n\t__webpack_require__(141)('small', function(createHTML){\n\t  return function small(){\n\t    return createHTML(this, 'small', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.12 String.prototype.strike()\n\t__webpack_require__(141)('strike', function(createHTML){\n\t  return function strike(){\n\t    return createHTML(this, 'strike', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.13 String.prototype.sub()\n\t__webpack_require__(141)('sub', function(createHTML){\n\t  return function sub(){\n\t    return createHTML(this, 'sub', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// B.2.3.14 String.prototype.sup()\n\t__webpack_require__(141)('sup', function(createHTML){\n\t  return function sup(){\n\t    return createHTML(this, 'sup', '', '');\n\t  }\n\t});\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 20.3.3.1 / 15.9.4.4 Date.now()\r\n\tvar $export = __webpack_require__(8);\r\n\t\r\n\t$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export     = __webpack_require__(8)\n\t  , toObject    = __webpack_require__(58)\n\t  , toPrimitive = __webpack_require__(16);\n\t\n\t$export($export.P + $export.F * __webpack_require__(7)(function(){\n\t  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;\n\t}), 'Date', {\n\t  toJSON: function toJSON(key){\n\t    var O  = toObject(this)\n\t      , pv = toPrimitive(O);\n\t    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n\t  }\n\t});\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\r\n\tvar $export = __webpack_require__(8)\r\n\t  , fails   = __webpack_require__(7)\r\n\t  , getTime = Date.prototype.getTime;\r\n\t\r\n\tvar lz = function(num){\r\n\t  return num > 9 ? num : '0' + num;\r\n\t};\r\n\t\r\n\t// PhantomJS / old WebKit has a broken implementations\r\n\t$export($export.P + $export.F * (fails(function(){\r\n\t  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';\r\n\t}) || !fails(function(){\r\n\t  new Date(NaN).toISOString();\r\n\t})), 'Date', {\r\n\t  toISOString: function toISOString(){\r\n\t    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');\r\n\t    var d = this\r\n\t      , y = d.getUTCFullYear()\r\n\t      , m = d.getUTCMilliseconds()\r\n\t      , s = y < 0 ? '-' : y > 9999 ? '+' : '';\r\n\t    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\r\n\t      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\r\n\t      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\r\n\t      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\r\n\t  }\r\n\t});\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DateProto    = Date.prototype\n\t  , INVALID_DATE = 'Invalid Date'\n\t  , TO_STRING    = 'toString'\n\t  , $toString    = DateProto[TO_STRING]\n\t  , getTime      = DateProto.getTime;\n\tif(new Date(NaN) + '' != INVALID_DATE){\n\t  __webpack_require__(18)(DateProto, TO_STRING, function toString(){\n\t    var value = getTime.call(this);\n\t    return value === value ? $toString.call(this) : INVALID_DATE;\n\t  });\n\t}\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar TO_PRIMITIVE = __webpack_require__(25)('toPrimitive')\r\n\t  , proto        = Date.prototype;\r\n\t\r\n\tif(!(TO_PRIMITIVE in proto))__webpack_require__(10)(proto, TO_PRIMITIVE, __webpack_require__(159));\n\n/***/ },\n/* 159 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar anObject    = __webpack_require__(12)\r\n\t  , toPrimitive = __webpack_require__(16)\r\n\t  , NUMBER      = 'number';\r\n\t\r\n\tmodule.exports = function(hint){\r\n\t  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');\r\n\t  return toPrimitive(anObject(this), hint != NUMBER);\r\n\t};\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\r\n\tvar $export = __webpack_require__(8);\r\n\t\r\n\t$export($export.S, 'Array', {isArray: __webpack_require__(45)});\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ctx            = __webpack_require__(20)\n\t  , $export        = __webpack_require__(8)\n\t  , toObject       = __webpack_require__(58)\n\t  , call           = __webpack_require__(162)\n\t  , isArrayIter    = __webpack_require__(163)\n\t  , toLength       = __webpack_require__(37)\n\t  , createProperty = __webpack_require__(164)\n\t  , getIterFn      = __webpack_require__(165);\n\t\n\t$export($export.S + $export.F * !__webpack_require__(166)(function(iter){ Array.from(iter); }), 'Array', {\n\t  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n\t  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n\t    var O       = toObject(arrayLike)\n\t      , C       = typeof this == 'function' ? this : Array\n\t      , aLen    = arguments.length\n\t      , mapfn   = aLen > 1 ? arguments[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , index   = 0\n\t      , iterFn  = getIterFn(O)\n\t      , length, result, step, iterator;\n\t    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n\t    // if object isn't iterable or it's array with default iterator - use simple case\n\t    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n\t      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n\t        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n\t      }\n\t    } else {\n\t      length = toLength(O.length);\n\t      for(result = new C(length); length > index; index++){\n\t        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n\t      }\n\t    }\n\t    result.length = index;\n\t    return result;\n\t  }\n\t});\n\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// call something on iterator step with safe closing on error\n\tvar anObject = __webpack_require__(12);\n\tmodule.exports = function(iterator, fn, value, entries){\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch(e){\n\t    var ret = iterator['return'];\n\t    if(ret !== undefined)anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// check on default Array iterator\n\tvar Iterators  = __webpack_require__(130)\n\t  , ITERATOR   = __webpack_require__(25)('iterator')\n\t  , ArrayProto = Array.prototype;\n\t\n\tmodule.exports = function(it){\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\n/***/ },\n/* 164 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $defineProperty = __webpack_require__(11)\r\n\t  , createDesc      = __webpack_require__(17);\r\n\t\r\n\tmodule.exports = function(object, index, value){\r\n\t  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\r\n\t  else object[index] = value;\r\n\t};\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(75)\n\t  , ITERATOR  = __webpack_require__(25)('iterator')\n\t  , Iterators = __webpack_require__(130);\n\tmodule.exports = __webpack_require__(9).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ITERATOR     = __webpack_require__(25)('iterator')\n\t  , SAFE_CLOSING = false;\n\t\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function(){ SAFE_CLOSING = true; };\n\t  Array.from(riter, function(){ throw 2; });\n\t} catch(e){ /* empty */ }\n\t\n\tmodule.exports = function(exec, skipClosing){\n\t  if(!skipClosing && !SAFE_CLOSING)return false;\n\t  var safe = false;\n\t  try {\n\t    var arr  = [7]\n\t      , iter = arr[ITERATOR]();\n\t    iter.next = function(){ return {done: safe = true}; };\n\t    arr[ITERATOR] = function(){ return iter; };\n\t    exec(arr);\n\t  } catch(e){ /* empty */ }\n\t  return safe;\n\t};\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export        = __webpack_require__(8)\n\t  , createProperty = __webpack_require__(164);\n\t\n\t// WebKit Array.of isn't generic\n\t$export($export.S + $export.F * __webpack_require__(7)(function(){\n\t  function F(){}\n\t  return !(Array.of.call(F) instanceof F);\n\t}), 'Array', {\n\t  // 22.1.2.3 Array.of( ...items)\n\t  of: function of(/* ...args */){\n\t    var index  = 0\n\t      , aLen   = arguments.length\n\t      , result = new (typeof this == 'function' ? this : Array)(aLen);\n\t    while(aLen > index)createProperty(result, index, arguments[index++]);\n\t    result.length = aLen;\n\t    return result;\n\t  }\n\t});\n\n/***/ },\n/* 168 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t// 22.1.3.13 Array.prototype.join(separator)\r\n\tvar $export   = __webpack_require__(8)\r\n\t  , toIObject = __webpack_require__(32)\r\n\t  , arrayJoin = [].join;\r\n\t\r\n\t// fallback for not array-like strings\r\n\t$export($export.P + $export.F * (__webpack_require__(33) != Object || !__webpack_require__(169)(arrayJoin)), 'Array', {\r\n\t  join: function join(separator){\r\n\t    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fails = __webpack_require__(7);\r\n\t\r\n\tmodule.exports = function(method, arg){\r\n\t  return !!method && fails(function(){\r\n\t    arg ? method.call(null, function(){}, 1) : method.call(null);\r\n\t  });\r\n\t};\n\n/***/ },\n/* 170 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export    = __webpack_require__(8)\r\n\t  , html       = __webpack_require__(48)\r\n\t  , cof        = __webpack_require__(34)\r\n\t  , toIndex    = __webpack_require__(39)\r\n\t  , toLength   = __webpack_require__(37)\r\n\t  , arraySlice = [].slice;\r\n\t\r\n\t// fallback for not array-like ES3 strings and DOM objects\r\n\t$export($export.P + $export.F * __webpack_require__(7)(function(){\r\n\t  if(html)arraySlice.call(html);\r\n\t}), 'Array', {\r\n\t  slice: function slice(begin, end){\r\n\t    var len   = toLength(this.length)\r\n\t      , klass = cof(this);\r\n\t    end = end === undefined ? len : end;\r\n\t    if(klass == 'Array')return arraySlice.call(this, begin, end);\r\n\t    var start  = toIndex(begin, len)\r\n\t      , upTo   = toIndex(end, len)\r\n\t      , size   = toLength(upTo - start)\r\n\t      , cloned = Array(size)\r\n\t      , i      = 0;\r\n\t    for(; i < size; i++)cloned[i] = klass == 'String'\r\n\t      ? this.charAt(start + i)\r\n\t      : this[start + i];\r\n\t    return cloned;\r\n\t  }\r\n\t});\n\n/***/ },\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export   = __webpack_require__(8)\r\n\t  , aFunction = __webpack_require__(21)\r\n\t  , toObject  = __webpack_require__(58)\r\n\t  , fails     = __webpack_require__(7)\r\n\t  , $sort     = [].sort\r\n\t  , test      = [1, 2, 3];\r\n\t\r\n\t$export($export.P + $export.F * (fails(function(){\r\n\t  // IE8-\r\n\t  test.sort(undefined);\r\n\t}) || !fails(function(){\r\n\t  // V8 bug\r\n\t  test.sort(null);\r\n\t  // Old WebKit\r\n\t}) || !__webpack_require__(169)($sort)), 'Array', {\r\n\t  // 22.1.3.25 Array.prototype.sort(comparefn)\r\n\t  sort: function sort(comparefn){\r\n\t    return comparefn === undefined\r\n\t      ? $sort.call(toObject(this))\r\n\t      : $sort.call(toObject(this), aFunction(comparefn));\r\n\t  }\r\n\t});\n\n/***/ },\n/* 172 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export  = __webpack_require__(8)\r\n\t  , $forEach = __webpack_require__(173)(0)\r\n\t  , STRICT   = __webpack_require__(169)([].forEach, true);\r\n\t\r\n\t$export($export.P + $export.F * !STRICT, 'Array', {\r\n\t  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\r\n\t  forEach: function forEach(callbackfn /* , thisArg */){\r\n\t    return $forEach(this, callbackfn, arguments[1]);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 0 -> Array#forEach\n\t// 1 -> Array#map\n\t// 2 -> Array#filter\n\t// 3 -> Array#some\n\t// 4 -> Array#every\n\t// 5 -> Array#find\n\t// 6 -> Array#findIndex\n\tvar ctx      = __webpack_require__(20)\n\t  , IObject  = __webpack_require__(33)\n\t  , toObject = __webpack_require__(58)\n\t  , toLength = __webpack_require__(37)\n\t  , asc      = __webpack_require__(174);\n\tmodule.exports = function(TYPE, $create){\n\t  var IS_MAP        = TYPE == 1\n\t    , IS_FILTER     = TYPE == 2\n\t    , IS_SOME       = TYPE == 3\n\t    , IS_EVERY      = TYPE == 4\n\t    , IS_FIND_INDEX = TYPE == 6\n\t    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n\t    , create        = $create || asc;\n\t  return function($this, callbackfn, that){\n\t    var O      = toObject($this)\n\t      , self   = IObject(O)\n\t      , f      = ctx(callbackfn, that, 3)\n\t      , length = toLength(self.length)\n\t      , index  = 0\n\t      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n\t      , val, res;\n\t    for(;length > index; index++)if(NO_HOLES || index in self){\n\t      val = self[index];\n\t      res = f(val, index, O);\n\t      if(TYPE){\n\t        if(IS_MAP)result[index] = res;            // map\n\t        else if(res)switch(TYPE){\n\t          case 3: return true;                    // some\n\t          case 5: return val;                     // find\n\t          case 6: return index;                   // findIndex\n\t          case 2: result.push(val);               // filter\n\t        } else if(IS_EVERY)return false;          // every\n\t      }\n\t    }\n\t    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n\t  };\n\t};\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\tvar speciesConstructor = __webpack_require__(175);\n\t\n\tmodule.exports = function(original, length){\n\t  return new (speciesConstructor(original))(length);\n\t};\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(13)\r\n\t  , isArray  = __webpack_require__(45)\r\n\t  , SPECIES  = __webpack_require__(25)('species');\r\n\t\r\n\tmodule.exports = function(original){\r\n\t  var C;\r\n\t  if(isArray(original)){\r\n\t    C = original.constructor;\r\n\t    // cross-realm fallback\r\n\t    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\r\n\t    if(isObject(C)){\r\n\t      C = C[SPECIES];\r\n\t      if(C === null)C = undefined;\r\n\t    }\r\n\t  } return C === undefined ? Array : C;\r\n\t};\n\n/***/ },\n/* 176 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export = __webpack_require__(8)\r\n\t  , $map    = __webpack_require__(173)(1);\r\n\t\r\n\t$export($export.P + $export.F * !__webpack_require__(169)([].map, true), 'Array', {\r\n\t  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\r\n\t  map: function map(callbackfn /* , thisArg */){\r\n\t    return $map(this, callbackfn, arguments[1]);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 177 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export = __webpack_require__(8)\n\t  , $filter = __webpack_require__(173)(2);\n\t\n\t$export($export.P + $export.F * !__webpack_require__(169)([].filter, true), 'Array', {\n\t  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n\t  filter: function filter(callbackfn /* , thisArg */){\n\t    return $filter(this, callbackfn, arguments[1]);\n\t  }\n\t});\n\n/***/ },\n/* 178 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export = __webpack_require__(8)\r\n\t  , $some   = __webpack_require__(173)(3);\r\n\t\r\n\t$export($export.P + $export.F * !__webpack_require__(169)([].some, true), 'Array', {\r\n\t  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\r\n\t  some: function some(callbackfn /* , thisArg */){\r\n\t    return $some(this, callbackfn, arguments[1]);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 179 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export = __webpack_require__(8)\r\n\t  , $every  = __webpack_require__(173)(4);\r\n\t\r\n\t$export($export.P + $export.F * !__webpack_require__(169)([].every, true), 'Array', {\r\n\t  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\r\n\t  every: function every(callbackfn /* , thisArg */){\r\n\t    return $every(this, callbackfn, arguments[1]);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export = __webpack_require__(8)\r\n\t  , $reduce = __webpack_require__(181);\r\n\t\r\n\t$export($export.P + $export.F * !__webpack_require__(169)([].reduce, true), 'Array', {\r\n\t  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\r\n\t  reduce: function reduce(callbackfn /* , initialValue */){\r\n\t    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar aFunction = __webpack_require__(21)\r\n\t  , toObject  = __webpack_require__(58)\r\n\t  , IObject   = __webpack_require__(33)\r\n\t  , toLength  = __webpack_require__(37);\r\n\t\r\n\tmodule.exports = function(that, callbackfn, aLen, memo, isRight){\r\n\t  aFunction(callbackfn);\r\n\t  var O      = toObject(that)\r\n\t    , self   = IObject(O)\r\n\t    , length = toLength(O.length)\r\n\t    , index  = isRight ? length - 1 : 0\r\n\t    , i      = isRight ? -1 : 1;\r\n\t  if(aLen < 2)for(;;){\r\n\t    if(index in self){\r\n\t      memo = self[index];\r\n\t      index += i;\r\n\t      break;\r\n\t    }\r\n\t    index += i;\r\n\t    if(isRight ? index < 0 : length <= index){\r\n\t      throw TypeError('Reduce of empty array with no initial value');\r\n\t    }\r\n\t  }\r\n\t  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){\r\n\t    memo = callbackfn(memo, self[index], index, O);\r\n\t  }\r\n\t  return memo;\r\n\t};\n\n/***/ },\n/* 182 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export = __webpack_require__(8)\r\n\t  , $reduce = __webpack_require__(181);\r\n\t\r\n\t$export($export.P + $export.F * !__webpack_require__(169)([].reduceRight, true), 'Array', {\r\n\t  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\r\n\t  reduceRight: function reduceRight(callbackfn /* , initialValue */){\r\n\t    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 183 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export       = __webpack_require__(8)\r\n\t  , $indexOf      = __webpack_require__(36)(false)\r\n\t  , $native       = [].indexOf\r\n\t  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\r\n\t\r\n\t$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)), 'Array', {\r\n\t  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\r\n\t  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){\r\n\t    return NEGATIVE_ZERO\r\n\t      // convert -0 to +0\r\n\t      ? $native.apply(this, arguments) || 0\r\n\t      : $indexOf(this, searchElement, arguments[1]);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 184 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export       = __webpack_require__(8)\r\n\t  , toIObject     = __webpack_require__(32)\r\n\t  , toInteger     = __webpack_require__(38)\r\n\t  , toLength      = __webpack_require__(37)\r\n\t  , $native       = [].lastIndexOf\r\n\t  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\r\n\t\r\n\t$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)), 'Array', {\r\n\t  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\r\n\t  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){\r\n\t    // convert -0 to +0\r\n\t    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;\r\n\t    var O      = toIObject(this)\r\n\t      , length = toLength(O.length)\r\n\t      , index  = length - 1;\r\n\t    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));\r\n\t    if(index < 0)index = length + index;\r\n\t    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;\r\n\t    return -1;\r\n\t  }\r\n\t});\n\n/***/ },\n/* 185 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.P, 'Array', {copyWithin: __webpack_require__(186)});\n\t\n\t__webpack_require__(187)('copyWithin');\n\n/***/ },\n/* 186 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\t'use strict';\n\tvar toObject = __webpack_require__(58)\n\t  , toIndex  = __webpack_require__(39)\n\t  , toLength = __webpack_require__(37);\n\t\n\tmodule.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){\n\t  var O     = toObject(this)\n\t    , len   = toLength(O.length)\n\t    , to    = toIndex(target, len)\n\t    , from  = toIndex(start, len)\n\t    , end   = arguments.length > 2 ? arguments[2] : undefined\n\t    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)\n\t    , inc   = 1;\n\t  if(from < to && to < from + count){\n\t    inc  = -1;\n\t    from += count - 1;\n\t    to   += count - 1;\n\t  }\n\t  while(count-- > 0){\n\t    if(from in O)O[to] = O[from];\n\t    else delete O[to];\n\t    to   += inc;\n\t    from += inc;\n\t  } return O;\n\t};\n\n/***/ },\n/* 187 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.31 Array.prototype[@@unscopables]\n\tvar UNSCOPABLES = __webpack_require__(25)('unscopables')\n\t  , ArrayProto  = Array.prototype;\n\tif(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(10)(ArrayProto, UNSCOPABLES, {});\n\tmodule.exports = function(key){\n\t  ArrayProto[UNSCOPABLES][key] = true;\n\t};\n\n/***/ },\n/* 188 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.P, 'Array', {fill: __webpack_require__(189)});\n\t\n\t__webpack_require__(187)('fill');\n\n/***/ },\n/* 189 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\t'use strict';\n\tvar toObject = __webpack_require__(58)\n\t  , toIndex  = __webpack_require__(39)\n\t  , toLength = __webpack_require__(37);\n\tmodule.exports = function fill(value /*, start = 0, end = @length */){\n\t  var O      = toObject(this)\n\t    , length = toLength(O.length)\n\t    , aLen   = arguments.length\n\t    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)\n\t    , end    = aLen > 2 ? arguments[2] : undefined\n\t    , endPos = end === undefined ? length : toIndex(end, length);\n\t  while(endPos > index)O[index++] = value;\n\t  return O;\n\t};\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\tvar $export = __webpack_require__(8)\n\t  , $find   = __webpack_require__(173)(5)\n\t  , KEY     = 'find'\n\t  , forced  = true;\n\t// Shouldn't skip holes\n\tif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n\t$export($export.P + $export.F * forced, 'Array', {\n\t  find: function find(callbackfn/*, that = undefined */){\n\t    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t__webpack_require__(187)(KEY);\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\tvar $export = __webpack_require__(8)\n\t  , $find   = __webpack_require__(173)(6)\n\t  , KEY     = 'findIndex'\n\t  , forced  = true;\n\t// Shouldn't skip holes\n\tif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n\t$export($export.P + $export.F * forced, 'Array', {\n\t  findIndex: function findIndex(callbackfn/*, that = undefined */){\n\t    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t__webpack_require__(187)(KEY);\n\n/***/ },\n/* 192 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(193)('Array');\n\n/***/ },\n/* 193 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global      = __webpack_require__(4)\n\t  , dP          = __webpack_require__(11)\n\t  , DESCRIPTORS = __webpack_require__(6)\n\t  , SPECIES     = __webpack_require__(25)('species');\n\t\n\tmodule.exports = function(KEY){\n\t  var C = global[KEY];\n\t  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n\t    configurable: true,\n\t    get: function(){ return this; }\n\t  });\n\t};\n\n/***/ },\n/* 194 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar addToUnscopables = __webpack_require__(187)\n\t  , step             = __webpack_require__(195)\n\t  , Iterators        = __webpack_require__(130)\n\t  , toIObject        = __webpack_require__(32);\n\t\n\t// 22.1.3.4 Array.prototype.entries()\n\t// 22.1.3.13 Array.prototype.keys()\n\t// 22.1.3.29 Array.prototype.values()\n\t// 22.1.3.30 Array.prototype[@@iterator]()\n\tmodule.exports = __webpack_require__(129)(Array, 'Array', function(iterated, kind){\n\t  this._t = toIObject(iterated); // target\n\t  this._i = 0;                   // next index\n\t  this._k = kind;                // kind\n\t// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , kind  = this._k\n\t    , index = this._i++;\n\t  if(!O || index >= O.length){\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if(kind == 'keys'  )return step(0, index);\n\t  if(kind == 'values')return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\t\n\t// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\tIterators.Arguments = Iterators.Array;\n\t\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n/***/ },\n/* 195 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(done, value){\n\t  return {value: value, done: !!done};\n\t};\n\n/***/ },\n/* 196 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global            = __webpack_require__(4)\n\t  , inheritIfRequired = __webpack_require__(88)\n\t  , dP                = __webpack_require__(11).f\n\t  , gOPN              = __webpack_require__(50).f\n\t  , isRegExp          = __webpack_require__(135)\n\t  , $flags            = __webpack_require__(197)\n\t  , $RegExp           = global.RegExp\n\t  , Base              = $RegExp\n\t  , proto             = $RegExp.prototype\n\t  , re1               = /a/g\n\t  , re2               = /a/g\n\t  // \"new\" creates a new object, old webkit buggy here\n\t  , CORRECT_NEW       = new $RegExp(re1) !== re1;\n\t\n\tif(__webpack_require__(6) && (!CORRECT_NEW || __webpack_require__(7)(function(){\n\t  re2[__webpack_require__(25)('match')] = false;\n\t  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n\t  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n\t}))){\n\t  $RegExp = function RegExp(p, f){\n\t    var tiRE = this instanceof $RegExp\n\t      , piRE = isRegExp(p)\n\t      , fiU  = f === undefined;\n\t    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n\t      : inheritIfRequired(CORRECT_NEW\n\t        ? new Base(piRE && !fiU ? p.source : p, f)\n\t        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n\t      , tiRE ? this : proto, $RegExp);\n\t  };\n\t  var proxy = function(key){\n\t    key in $RegExp || dP($RegExp, key, {\n\t      configurable: true,\n\t      get: function(){ return Base[key]; },\n\t      set: function(it){ Base[key] = it; }\n\t    });\n\t  };\n\t  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);\n\t  proto.constructor = $RegExp;\n\t  $RegExp.prototype = proto;\n\t  __webpack_require__(18)(global, 'RegExp', $RegExp);\n\t}\n\t\n\t__webpack_require__(193)('RegExp');\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 21.2.5.3 get RegExp.prototype.flags\n\tvar anObject = __webpack_require__(12);\n\tmodule.exports = function(){\n\t  var that   = anObject(this)\n\t    , result = '';\n\t  if(that.global)     result += 'g';\n\t  if(that.ignoreCase) result += 'i';\n\t  if(that.multiline)  result += 'm';\n\t  if(that.unicode)    result += 'u';\n\t  if(that.sticky)     result += 'y';\n\t  return result;\n\t};\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t__webpack_require__(199);\r\n\tvar anObject    = __webpack_require__(12)\r\n\t  , $flags      = __webpack_require__(197)\r\n\t  , DESCRIPTORS = __webpack_require__(6)\r\n\t  , TO_STRING   = 'toString'\r\n\t  , $toString   = /./[TO_STRING];\r\n\t\r\n\tvar define = function(fn){\r\n\t  __webpack_require__(18)(RegExp.prototype, TO_STRING, fn, true);\r\n\t};\r\n\t\r\n\t// 21.2.5.14 RegExp.prototype.toString()\r\n\tif(__webpack_require__(7)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){\r\n\t  define(function toString(){\r\n\t    var R = anObject(this);\r\n\t    return '/'.concat(R.source, '/',\r\n\t      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\r\n\t  });\r\n\t// FF44- RegExp#toString has a wrong name\r\n\t} else if($toString.name != TO_STRING){\r\n\t  define(function toString(){\r\n\t    return $toString.call(this);\r\n\t  });\r\n\t}\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 21.2.5.3 get RegExp.prototype.flags()\n\tif(__webpack_require__(6) && /./g.flags != 'g')__webpack_require__(11).f(RegExp.prototype, 'flags', {\n\t  configurable: true,\n\t  get: __webpack_require__(197)\n\t});\n\n/***/ },\n/* 200 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@match logic\n\t__webpack_require__(201)('match', 1, function(defined, MATCH, $match){\n\t  // 21.1.3.11 String.prototype.match(regexp)\n\t  return [function match(regexp){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = regexp == undefined ? undefined : regexp[MATCH];\n\t    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n\t  }, $match];\n\t});\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar hide     = __webpack_require__(10)\n\t  , redefine = __webpack_require__(18)\n\t  , fails    = __webpack_require__(7)\n\t  , defined  = __webpack_require__(35)\n\t  , wks      = __webpack_require__(25);\n\t\n\tmodule.exports = function(KEY, length, exec){\n\t  var SYMBOL   = wks(KEY)\n\t    , fns      = exec(defined, SYMBOL, ''[KEY])\n\t    , strfn    = fns[0]\n\t    , rxfn     = fns[1];\n\t  if(fails(function(){\n\t    var O = {};\n\t    O[SYMBOL] = function(){ return 7; };\n\t    return ''[KEY](O) != 7;\n\t  })){\n\t    redefine(String.prototype, KEY, strfn);\n\t    hide(RegExp.prototype, SYMBOL, length == 2\n\t      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n\t      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n\t      ? function(string, arg){ return rxfn.call(string, this, arg); }\n\t      // 21.2.5.6 RegExp.prototype[@@match](string)\n\t      // 21.2.5.9 RegExp.prototype[@@search](string)\n\t      : function(string){ return rxfn.call(string, this); }\n\t    );\n\t  }\n\t};\n\n/***/ },\n/* 202 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@replace logic\n\t__webpack_require__(201)('replace', 2, function(defined, REPLACE, $replace){\n\t  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n\t  return [function replace(searchValue, replaceValue){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n\t    return fn !== undefined\n\t      ? fn.call(searchValue, O, replaceValue)\n\t      : $replace.call(String(O), searchValue, replaceValue);\n\t  }, $replace];\n\t});\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@search logic\n\t__webpack_require__(201)('search', 1, function(defined, SEARCH, $search){\n\t  // 21.1.3.15 String.prototype.search(regexp)\n\t  return [function search(regexp){\n\t    'use strict';\n\t    var O  = defined(this)\n\t      , fn = regexp == undefined ? undefined : regexp[SEARCH];\n\t    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n\t  }, $search];\n\t});\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @@split logic\n\t__webpack_require__(201)('split', 2, function(defined, SPLIT, $split){\n\t  'use strict';\n\t  var isRegExp   = __webpack_require__(135)\n\t    , _split     = $split\n\t    , $push      = [].push\n\t    , $SPLIT     = 'split'\n\t    , LENGTH     = 'length'\n\t    , LAST_INDEX = 'lastIndex';\n\t  if(\n\t    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n\t    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n\t    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n\t    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n\t    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n\t    ''[$SPLIT](/.?/)[LENGTH]\n\t  ){\n\t    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n\t    // based on es5-shim implementation, need to rework it\n\t    $split = function(separator, limit){\n\t      var string = String(this);\n\t      if(separator === undefined && limit === 0)return [];\n\t      // If `separator` is not a regex, use native split\n\t      if(!isRegExp(separator))return _split.call(string, separator, limit);\n\t      var output = [];\n\t      var flags = (separator.ignoreCase ? 'i' : '') +\n\t                  (separator.multiline ? 'm' : '') +\n\t                  (separator.unicode ? 'u' : '') +\n\t                  (separator.sticky ? 'y' : '');\n\t      var lastLastIndex = 0;\n\t      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n\t      // Make `global` and avoid `lastIndex` issues by working with a copy\n\t      var separatorCopy = new RegExp(separator.source, flags + 'g');\n\t      var separator2, match, lastIndex, lastLength, i;\n\t      // Doesn't need flags gy, but they don't hurt\n\t      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n\t      while(match = separatorCopy.exec(string)){\n\t        // `separatorCopy.lastIndex` is not reliable cross-browser\n\t        lastIndex = match.index + match[0][LENGTH];\n\t        if(lastIndex > lastLastIndex){\n\t          output.push(string.slice(lastLastIndex, match.index));\n\t          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n\t          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n\t            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n\t          });\n\t          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n\t          lastLength = match[0][LENGTH];\n\t          lastLastIndex = lastIndex;\n\t          if(output[LENGTH] >= splitLimit)break;\n\t        }\n\t        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n\t      }\n\t      if(lastLastIndex === string[LENGTH]){\n\t        if(lastLength || !separatorCopy.test(''))output.push('');\n\t      } else output.push(string.slice(lastLastIndex));\n\t      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n\t    };\n\t  // Chakra, V8\n\t  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n\t    $split = function(separator, limit){\n\t      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n\t    };\n\t  }\n\t  // 21.1.3.17 String.prototype.split(separator, limit)\n\t  return [function split(separator, limit){\n\t    var O  = defined(this)\n\t      , fn = separator == undefined ? undefined : separator[SPLIT];\n\t    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n\t  }, $split];\n\t});\n\n/***/ },\n/* 205 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY            = __webpack_require__(28)\n\t  , global             = __webpack_require__(4)\n\t  , ctx                = __webpack_require__(20)\n\t  , classof            = __webpack_require__(75)\n\t  , $export            = __webpack_require__(8)\n\t  , isObject           = __webpack_require__(13)\n\t  , anObject           = __webpack_require__(12)\n\t  , aFunction          = __webpack_require__(21)\n\t  , anInstance         = __webpack_require__(90)\n\t  , forOf              = __webpack_require__(206)\n\t  , setProto           = __webpack_require__(73).set\n\t  , speciesConstructor = __webpack_require__(207)\n\t  , task               = __webpack_require__(208).set\n\t  , microtask          = __webpack_require__(209)()\n\t  , PROMISE            = 'Promise'\n\t  , TypeError          = global.TypeError\n\t  , process            = global.process\n\t  , $Promise           = global[PROMISE]\n\t  , process            = global.process\n\t  , isNode             = classof(process) == 'process'\n\t  , empty              = function(){ /* empty */ }\n\t  , Internal, GenericPromiseCapability, Wrapper;\n\t\n\tvar USE_NATIVE = !!function(){\n\t  try {\n\t    // correct subclassing with @@species support\n\t    var promise     = $Promise.resolve(1)\n\t      , FakePromise = (promise.constructor = {})[__webpack_require__(25)('species')] = function(exec){ exec(empty, empty); };\n\t    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\t    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n\t  } catch(e){ /* empty */ }\n\t}();\n\t\n\t// helpers\n\tvar sameConstructor = function(a, b){\n\t  // with library wrapper special case\n\t  return a === b || a === $Promise && b === Wrapper;\n\t};\n\tvar isThenable = function(it){\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\tvar newPromiseCapability = function(C){\n\t  return sameConstructor($Promise, C)\n\t    ? new PromiseCapability(C)\n\t    : new GenericPromiseCapability(C);\n\t};\n\tvar PromiseCapability = GenericPromiseCapability = function(C){\n\t  var resolve, reject;\n\t  this.promise = new C(function($$resolve, $$reject){\n\t    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject  = $$reject;\n\t  });\n\t  this.resolve = aFunction(resolve);\n\t  this.reject  = aFunction(reject);\n\t};\n\tvar perform = function(exec){\n\t  try {\n\t    exec();\n\t  } catch(e){\n\t    return {error: e};\n\t  }\n\t};\n\tvar notify = function(promise, isReject){\n\t  if(promise._n)return;\n\t  promise._n = true;\n\t  var chain = promise._c;\n\t  microtask(function(){\n\t    var value = promise._v\n\t      , ok    = promise._s == 1\n\t      , i     = 0;\n\t    var run = function(reaction){\n\t      var handler = ok ? reaction.ok : reaction.fail\n\t        , resolve = reaction.resolve\n\t        , reject  = reaction.reject\n\t        , domain  = reaction.domain\n\t        , result, then;\n\t      try {\n\t        if(handler){\n\t          if(!ok){\n\t            if(promise._h == 2)onHandleUnhandled(promise);\n\t            promise._h = 1;\n\t          }\n\t          if(handler === true)result = value;\n\t          else {\n\t            if(domain)domain.enter();\n\t            result = handler(value);\n\t            if(domain)domain.exit();\n\t          }\n\t          if(result === reaction.promise){\n\t            reject(TypeError('Promise-chain cycle'));\n\t          } else if(then = isThenable(result)){\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch(e){\n\t        reject(e);\n\t      }\n\t    };\n\t    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n\t    promise._c = [];\n\t    promise._n = false;\n\t    if(isReject && !promise._h)onUnhandled(promise);\n\t  });\n\t};\n\tvar onUnhandled = function(promise){\n\t  task.call(global, function(){\n\t    var value = promise._v\n\t      , abrupt, handler, console;\n\t    if(isUnhandled(promise)){\n\t      abrupt = perform(function(){\n\t        if(isNode){\n\t          process.emit('unhandledRejection', value, promise);\n\t        } else if(handler = global.onunhandledrejection){\n\t          handler({promise: promise, reason: value});\n\t        } else if((console = global.console) && console.error){\n\t          console.error('Unhandled promise rejection', value);\n\t        }\n\t      });\n\t      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\t      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n\t    } promise._a = undefined;\n\t    if(abrupt)throw abrupt.error;\n\t  });\n\t};\n\tvar isUnhandled = function(promise){\n\t  if(promise._h == 1)return false;\n\t  var chain = promise._a || promise._c\n\t    , i     = 0\n\t    , reaction;\n\t  while(chain.length > i){\n\t    reaction = chain[i++];\n\t    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n\t  } return true;\n\t};\n\tvar onHandleUnhandled = function(promise){\n\t  task.call(global, function(){\n\t    var handler;\n\t    if(isNode){\n\t      process.emit('rejectionHandled', promise);\n\t    } else if(handler = global.onrejectionhandled){\n\t      handler({promise: promise, reason: promise._v});\n\t    }\n\t  });\n\t};\n\tvar $reject = function(value){\n\t  var promise = this;\n\t  if(promise._d)return;\n\t  promise._d = true;\n\t  promise = promise._w || promise; // unwrap\n\t  promise._v = value;\n\t  promise._s = 2;\n\t  if(!promise._a)promise._a = promise._c.slice();\n\t  notify(promise, true);\n\t};\n\tvar $resolve = function(value){\n\t  var promise = this\n\t    , then;\n\t  if(promise._d)return;\n\t  promise._d = true;\n\t  promise = promise._w || promise; // unwrap\n\t  try {\n\t    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n\t    if(then = isThenable(value)){\n\t      microtask(function(){\n\t        var wrapper = {_w: promise, _d: false}; // wrap\n\t        try {\n\t          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n\t        } catch(e){\n\t          $reject.call(wrapper, e);\n\t        }\n\t      });\n\t    } else {\n\t      promise._v = value;\n\t      promise._s = 1;\n\t      notify(promise, false);\n\t    }\n\t  } catch(e){\n\t    $reject.call({_w: promise, _d: false}, e); // wrap\n\t  }\n\t};\n\t\n\t// constructor polyfill\n\tif(!USE_NATIVE){\n\t  // 25.4.3.1 Promise(executor)\n\t  $Promise = function Promise(executor){\n\t    anInstance(this, $Promise, PROMISE, '_h');\n\t    aFunction(executor);\n\t    Internal.call(this);\n\t    try {\n\t      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n\t    } catch(err){\n\t      $reject.call(this, err);\n\t    }\n\t  };\n\t  Internal = function Promise(executor){\n\t    this._c = [];             // <- awaiting reactions\n\t    this._a = undefined;      // <- checked in isUnhandled reactions\n\t    this._s = 0;              // <- state\n\t    this._d = false;          // <- done\n\t    this._v = undefined;      // <- value\n\t    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n\t    this._n = false;          // <- notify\n\t  };\n\t  Internal.prototype = __webpack_require__(210)($Promise.prototype, {\n\t    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n\t    then: function then(onFulfilled, onRejected){\n\t      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n\t      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail   = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = isNode ? process.domain : undefined;\n\t      this._c.push(reaction);\n\t      if(this._a)this._a.push(reaction);\n\t      if(this._s)notify(this, false);\n\t      return reaction.promise;\n\t    },\n\t    // 25.4.5.1 Promise.prototype.catch(onRejected)\n\t    'catch': function(onRejected){\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\t  PromiseCapability = function(){\n\t    var promise  = new Internal;\n\t    this.promise = promise;\n\t    this.resolve = ctx($resolve, promise, 1);\n\t    this.reject  = ctx($reject, promise, 1);\n\t  };\n\t}\n\t\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n\t__webpack_require__(24)($Promise, PROMISE);\n\t__webpack_require__(193)(PROMISE);\n\tWrapper = __webpack_require__(9)[PROMISE];\n\t\n\t// statics\n\t$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n\t  // 25.4.4.5 Promise.reject(r)\n\t  reject: function reject(r){\n\t    var capability = newPromiseCapability(this)\n\t      , $$reject   = capability.reject;\n\t    $$reject(r);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n\t  // 25.4.4.6 Promise.resolve(x)\n\t  resolve: function resolve(x){\n\t    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n\t    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n\t    var capability = newPromiseCapability(this)\n\t      , $$resolve  = capability.resolve;\n\t    $$resolve(x);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(166)(function(iter){\n\t  $Promise.all(iter)['catch'](empty);\n\t})), PROMISE, {\n\t  // 25.4.4.1 Promise.all(iterable)\n\t  all: function all(iterable){\n\t    var C          = this\n\t      , capability = newPromiseCapability(C)\n\t      , resolve    = capability.resolve\n\t      , reject     = capability.reject;\n\t    var abrupt = perform(function(){\n\t      var values    = []\n\t        , index     = 0\n\t        , remaining = 1;\n\t      forOf(iterable, false, function(promise){\n\t        var $index        = index++\n\t          , alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        C.resolve(promise).then(function(value){\n\t          if(alreadyCalled)return;\n\t          alreadyCalled  = true;\n\t          values[$index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if(abrupt)reject(abrupt.error);\n\t    return capability.promise;\n\t  },\n\t  // 25.4.4.4 Promise.race(iterable)\n\t  race: function race(iterable){\n\t    var C          = this\n\t      , capability = newPromiseCapability(C)\n\t      , reject     = capability.reject;\n\t    var abrupt = perform(function(){\n\t      forOf(iterable, false, function(promise){\n\t        C.resolve(promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if(abrupt)reject(abrupt.error);\n\t    return capability.promise;\n\t  }\n\t});\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ctx         = __webpack_require__(20)\n\t  , call        = __webpack_require__(162)\n\t  , isArrayIter = __webpack_require__(163)\n\t  , anObject    = __webpack_require__(12)\n\t  , toLength    = __webpack_require__(37)\n\t  , getIterFn   = __webpack_require__(165)\n\t  , BREAK       = {}\n\t  , RETURN      = {};\n\tvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n\t  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n\t    , f      = ctx(fn, that, entries ? 2 : 1)\n\t    , index  = 0\n\t    , length, step, iterator, result;\n\t  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n\t  // fast case for arrays with default iterator\n\t  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n\t    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n\t    if(result === BREAK || result === RETURN)return result;\n\t  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n\t    result = call(iterator, f, step.value, entries);\n\t    if(result === BREAK || result === RETURN)return result;\n\t  }\n\t};\n\texports.BREAK  = BREAK;\n\texports.RETURN = RETURN;\n\n/***/ },\n/* 207 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.3.20 SpeciesConstructor(O, defaultConstructor)\n\tvar anObject  = __webpack_require__(12)\n\t  , aFunction = __webpack_require__(21)\n\t  , SPECIES   = __webpack_require__(25)('species');\n\tmodule.exports = function(O, D){\n\t  var C = anObject(O).constructor, S;\n\t  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n\t};\n\n/***/ },\n/* 208 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ctx                = __webpack_require__(20)\n\t  , invoke             = __webpack_require__(78)\n\t  , html               = __webpack_require__(48)\n\t  , cel                = __webpack_require__(15)\n\t  , global             = __webpack_require__(4)\n\t  , process            = global.process\n\t  , setTask            = global.setImmediate\n\t  , clearTask          = global.clearImmediate\n\t  , MessageChannel     = global.MessageChannel\n\t  , counter            = 0\n\t  , queue              = {}\n\t  , ONREADYSTATECHANGE = 'onreadystatechange'\n\t  , defer, channel, port;\n\tvar run = function(){\n\t  var id = +this;\n\t  if(queue.hasOwnProperty(id)){\n\t    var fn = queue[id];\n\t    delete queue[id];\n\t    fn();\n\t  }\n\t};\n\tvar listener = function(event){\n\t  run.call(event.data);\n\t};\n\t// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\tif(!setTask || !clearTask){\n\t  setTask = function setImmediate(fn){\n\t    var args = [], i = 1;\n\t    while(arguments.length > i)args.push(arguments[i++]);\n\t    queue[++counter] = function(){\n\t      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n\t    };\n\t    defer(counter);\n\t    return counter;\n\t  };\n\t  clearTask = function clearImmediate(id){\n\t    delete queue[id];\n\t  };\n\t  // Node.js 0.8-\n\t  if(__webpack_require__(34)(process) == 'process'){\n\t    defer = function(id){\n\t      process.nextTick(ctx(run, id, 1));\n\t    };\n\t  // Browsers with MessageChannel, includes WebWorkers\n\t  } else if(MessageChannel){\n\t    channel = new MessageChannel;\n\t    port    = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = ctx(port.postMessage, port, 1);\n\t  // Browsers with postMessage, skip WebWorkers\n\t  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n\t  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n\t    defer = function(id){\n\t      global.postMessage(id + '', '*');\n\t    };\n\t    global.addEventListener('message', listener, false);\n\t  // IE8-\n\t  } else if(ONREADYSTATECHANGE in cel('script')){\n\t    defer = function(id){\n\t      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n\t        html.removeChild(this);\n\t        run.call(id);\n\t      };\n\t    };\n\t  // Rest old browsers\n\t  } else {\n\t    defer = function(id){\n\t      setTimeout(ctx(run, id, 1), 0);\n\t    };\n\t  }\n\t}\n\tmodule.exports = {\n\t  set:   setTask,\n\t  clear: clearTask\n\t};\n\n/***/ },\n/* 209 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(4)\n\t  , macrotask = __webpack_require__(208).set\n\t  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n\t  , process   = global.process\n\t  , Promise   = global.Promise\n\t  , isNode    = __webpack_require__(34)(process) == 'process';\n\t\n\tmodule.exports = function(){\n\t  var head, last, notify;\n\t\n\t  var flush = function(){\n\t    var parent, fn;\n\t    if(isNode && (parent = process.domain))parent.exit();\n\t    while(head){\n\t      fn   = head.fn;\n\t      head = head.next;\n\t      try {\n\t        fn();\n\t      } catch(e){\n\t        if(head)notify();\n\t        else last = undefined;\n\t        throw e;\n\t      }\n\t    } last = undefined;\n\t    if(parent)parent.enter();\n\t  };\n\t\n\t  // Node.js\n\t  if(isNode){\n\t    notify = function(){\n\t      process.nextTick(flush);\n\t    };\n\t  // browsers with MutationObserver\n\t  } else if(Observer){\n\t    var toggle = true\n\t      , node   = document.createTextNode('');\n\t    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n\t    notify = function(){\n\t      node.data = toggle = !toggle;\n\t    };\n\t  // environments with maybe non-completely correct, but existent Promise\n\t  } else if(Promise && Promise.resolve){\n\t    var promise = Promise.resolve();\n\t    notify = function(){\n\t      promise.then(flush);\n\t    };\n\t  // for other environments - macrotask based on:\n\t  // - setImmediate\n\t  // - MessageChannel\n\t  // - window.postMessag\n\t  // - onreadystatechange\n\t  // - setTimeout\n\t  } else {\n\t    notify = function(){\n\t      // strange IE + webpack dev server bug - use .call(global)\n\t      macrotask.call(global, flush);\n\t    };\n\t  }\n\t\n\t  return function(fn){\n\t    var task = {fn: fn, next: undefined};\n\t    if(last)last.next = task;\n\t    if(!head){\n\t      head = task;\n\t      notify();\n\t    } last = task;\n\t  };\n\t};\n\n/***/ },\n/* 210 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar redefine = __webpack_require__(18);\n\tmodule.exports = function(target, src, safe){\n\t  for(var key in src)redefine(target, key, src[key], safe);\n\t  return target;\n\t};\n\n/***/ },\n/* 211 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar strong = __webpack_require__(212);\n\t\n\t// 23.1 Map Objects\n\tmodule.exports = __webpack_require__(213)('Map', function(get){\n\t  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.1.3.6 Map.prototype.get(key)\n\t  get: function get(key){\n\t    var entry = strong.getEntry(this, key);\n\t    return entry && entry.v;\n\t  },\n\t  // 23.1.3.9 Map.prototype.set(key, value)\n\t  set: function set(key, value){\n\t    return strong.def(this, key === 0 ? 0 : key, value);\n\t  }\n\t}, strong, true);\n\n/***/ },\n/* 212 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar dP          = __webpack_require__(11).f\n\t  , create      = __webpack_require__(46)\n\t  , hide        = __webpack_require__(10)\n\t  , redefineAll = __webpack_require__(210)\n\t  , ctx         = __webpack_require__(20)\n\t  , anInstance  = __webpack_require__(90)\n\t  , defined     = __webpack_require__(35)\n\t  , forOf       = __webpack_require__(206)\n\t  , $iterDefine = __webpack_require__(129)\n\t  , step        = __webpack_require__(195)\n\t  , setSpecies  = __webpack_require__(193)\n\t  , DESCRIPTORS = __webpack_require__(6)\n\t  , fastKey     = __webpack_require__(22).fastKey\n\t  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\t\n\tvar getEntry = function(that, key){\n\t  // fast case\n\t  var index = fastKey(key), entry;\n\t  if(index !== 'F')return that._i[index];\n\t  // frozen object case\n\t  for(entry = that._f; entry; entry = entry.n){\n\t    if(entry.k == key)return entry;\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n\t    var C = wrapper(function(that, iterable){\n\t      anInstance(that, C, NAME, '_i');\n\t      that._i = create(null); // index\n\t      that._f = undefined;    // first entry\n\t      that._l = undefined;    // last entry\n\t      that[SIZE] = 0;         // size\n\t      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      // 23.1.3.1 Map.prototype.clear()\n\t      // 23.2.3.2 Set.prototype.clear()\n\t      clear: function clear(){\n\t        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n\t          entry.r = true;\n\t          if(entry.p)entry.p = entry.p.n = undefined;\n\t          delete data[entry.i];\n\t        }\n\t        that._f = that._l = undefined;\n\t        that[SIZE] = 0;\n\t      },\n\t      // 23.1.3.3 Map.prototype.delete(key)\n\t      // 23.2.3.4 Set.prototype.delete(value)\n\t      'delete': function(key){\n\t        var that  = this\n\t          , entry = getEntry(that, key);\n\t        if(entry){\n\t          var next = entry.n\n\t            , prev = entry.p;\n\t          delete that._i[entry.i];\n\t          entry.r = true;\n\t          if(prev)prev.n = next;\n\t          if(next)next.p = prev;\n\t          if(that._f == entry)that._f = next;\n\t          if(that._l == entry)that._l = prev;\n\t          that[SIZE]--;\n\t        } return !!entry;\n\t      },\n\t      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n\t      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n\t      forEach: function forEach(callbackfn /*, that = undefined */){\n\t        anInstance(this, C, 'forEach');\n\t        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n\t          , entry;\n\t        while(entry = entry ? entry.n : this._f){\n\t          f(entry.v, entry.k, this);\n\t          // revert to the last existing entry\n\t          while(entry && entry.r)entry = entry.p;\n\t        }\n\t      },\n\t      // 23.1.3.7 Map.prototype.has(key)\n\t      // 23.2.3.7 Set.prototype.has(value)\n\t      has: function has(key){\n\t        return !!getEntry(this, key);\n\t      }\n\t    });\n\t    if(DESCRIPTORS)dP(C.prototype, 'size', {\n\t      get: function(){\n\t        return defined(this[SIZE]);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function(that, key, value){\n\t    var entry = getEntry(that, key)\n\t      , prev, index;\n\t    // change existing entry\n\t    if(entry){\n\t      entry.v = value;\n\t    // create new entry\n\t    } else {\n\t      that._l = entry = {\n\t        i: index = fastKey(key, true), // <- index\n\t        k: key,                        // <- key\n\t        v: value,                      // <- value\n\t        p: prev = that._l,             // <- previous entry\n\t        n: undefined,                  // <- next entry\n\t        r: false                       // <- removed\n\t      };\n\t      if(!that._f)that._f = entry;\n\t      if(prev)prev.n = entry;\n\t      that[SIZE]++;\n\t      // add to index\n\t      if(index !== 'F')that._i[index] = entry;\n\t    } return that;\n\t  },\n\t  getEntry: getEntry,\n\t  setStrong: function(C, NAME, IS_MAP){\n\t    // add .keys, .values, .entries, [@@iterator]\n\t    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n\t    $iterDefine(C, NAME, function(iterated, kind){\n\t      this._t = iterated;  // target\n\t      this._k = kind;      // kind\n\t      this._l = undefined; // previous\n\t    }, function(){\n\t      var that  = this\n\t        , kind  = that._k\n\t        , entry = that._l;\n\t      // revert to the last existing entry\n\t      while(entry && entry.r)entry = entry.p;\n\t      // get next entry\n\t      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n\t        // or finish the iteration\n\t        that._t = undefined;\n\t        return step(1);\n\t      }\n\t      // return step by kind\n\t      if(kind == 'keys'  )return step(0, entry.k);\n\t      if(kind == 'values')return step(0, entry.v);\n\t      return step(0, [entry.k, entry.v]);\n\t    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\t\n\t    // add [@@species], 23.1.2.2, 23.2.2.2\n\t    setSpecies(NAME);\n\t  }\n\t};\n\n/***/ },\n/* 213 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global            = __webpack_require__(4)\n\t  , $export           = __webpack_require__(8)\n\t  , redefine          = __webpack_require__(18)\n\t  , redefineAll       = __webpack_require__(210)\n\t  , meta              = __webpack_require__(22)\n\t  , forOf             = __webpack_require__(206)\n\t  , anInstance        = __webpack_require__(90)\n\t  , isObject          = __webpack_require__(13)\n\t  , fails             = __webpack_require__(7)\n\t  , $iterDetect       = __webpack_require__(166)\n\t  , setToStringTag    = __webpack_require__(24)\n\t  , inheritIfRequired = __webpack_require__(88);\n\t\n\tmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n\t  var Base  = global[NAME]\n\t    , C     = Base\n\t    , ADDER = IS_MAP ? 'set' : 'add'\n\t    , proto = C && C.prototype\n\t    , O     = {};\n\t  var fixMethod = function(KEY){\n\t    var fn = proto[KEY];\n\t    redefine(proto, KEY,\n\t      KEY == 'delete' ? function(a){\n\t        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'has' ? function has(a){\n\t        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'get' ? function get(a){\n\t        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n\t      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }\n\t        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }\n\t    );\n\t  };\n\t  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n\t    new C().entries().next();\n\t  }))){\n\t    // create collection constructor\n\t    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n\t    redefineAll(C.prototype, methods);\n\t    meta.NEED = true;\n\t  } else {\n\t    var instance             = new C\n\t      // early implementations not supports chaining\n\t      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance\n\t      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n\t      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })\n\t      // most early implementations doesn't supports iterables, most modern - not close it correctly\n\t      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new\n\t      // for early implementations -0 and +0 not the same\n\t      , BUGGY_ZERO = !IS_WEAK && fails(function(){\n\t        // V8 ~ Chromium 42- fails only with 5+ elements\n\t        var $instance = new C()\n\t          , index     = 5;\n\t        while(index--)$instance[ADDER](index, index);\n\t        return !$instance.has(-0);\n\t      });\n\t    if(!ACCEPT_ITERABLES){ \n\t      C = wrapper(function(target, iterable){\n\t        anInstance(target, C, NAME);\n\t        var that = inheritIfRequired(new Base, target, C);\n\t        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t        return that;\n\t      });\n\t      C.prototype = proto;\n\t      proto.constructor = C;\n\t    }\n\t    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\t    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);\n\t    // weak collections should not contains .clear method\n\t    if(IS_WEAK && proto.clear)delete proto.clear;\n\t  }\n\t\n\t  setToStringTag(C, NAME);\n\t\n\t  O[NAME] = C;\n\t  $export($export.G + $export.W + $export.F * (C != Base), O);\n\t\n\t  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\t\n\t  return C;\n\t};\n\n/***/ },\n/* 214 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar strong = __webpack_require__(212);\n\t\n\t// 23.2 Set Objects\n\tmodule.exports = __webpack_require__(213)('Set', function(get){\n\t  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.2.3.1 Set.prototype.add(value)\n\t  add: function add(value){\n\t    return strong.def(this, value = value === 0 ? 0 : value, value);\n\t  }\n\t}, strong);\n\n/***/ },\n/* 215 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar each         = __webpack_require__(173)(0)\n\t  , redefine     = __webpack_require__(18)\n\t  , meta         = __webpack_require__(22)\n\t  , assign       = __webpack_require__(69)\n\t  , weak         = __webpack_require__(216)\n\t  , isObject     = __webpack_require__(13)\n\t  , has          = __webpack_require__(5)\n\t  , getWeak      = meta.getWeak\n\t  , isExtensible = Object.isExtensible\n\t  , uncaughtFrozenStore = weak.ufstore\n\t  , tmp          = {}\n\t  , InternalMap;\n\t\n\tvar wrapper = function(get){\n\t  return function WeakMap(){\n\t    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n\t  };\n\t};\n\t\n\tvar methods = {\n\t  // 23.3.3.3 WeakMap.prototype.get(key)\n\t  get: function get(key){\n\t    if(isObject(key)){\n\t      var data = getWeak(key);\n\t      if(data === true)return uncaughtFrozenStore(this).get(key);\n\t      return data ? data[this._i] : undefined;\n\t    }\n\t  },\n\t  // 23.3.3.5 WeakMap.prototype.set(key, value)\n\t  set: function set(key, value){\n\t    return weak.def(this, key, value);\n\t  }\n\t};\n\t\n\t// 23.3 WeakMap Objects\n\tvar $WeakMap = module.exports = __webpack_require__(213)('WeakMap', wrapper, methods, weak, true, true);\n\t\n\t// IE11 WeakMap frozen keys fix\n\tif(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){\n\t  InternalMap = weak.getConstructor(wrapper);\n\t  assign(InternalMap.prototype, methods);\n\t  meta.NEED = true;\n\t  each(['delete', 'has', 'get', 'set'], function(key){\n\t    var proto  = $WeakMap.prototype\n\t      , method = proto[key];\n\t    redefine(proto, key, function(a, b){\n\t      // store frozen objects on internal weakmap shim\n\t      if(isObject(a) && !isExtensible(a)){\n\t        if(!this._f)this._f = new InternalMap;\n\t        var result = this._f[key](a, b);\n\t        return key == 'set' ? this : result;\n\t      // store all the rest on native weakmap\n\t      } return method.call(this, a, b);\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 216 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar redefineAll       = __webpack_require__(210)\n\t  , getWeak           = __webpack_require__(22).getWeak\n\t  , anObject          = __webpack_require__(12)\n\t  , isObject          = __webpack_require__(13)\n\t  , anInstance        = __webpack_require__(90)\n\t  , forOf             = __webpack_require__(206)\n\t  , createArrayMethod = __webpack_require__(173)\n\t  , $has              = __webpack_require__(5)\n\t  , arrayFind         = createArrayMethod(5)\n\t  , arrayFindIndex    = createArrayMethod(6)\n\t  , id                = 0;\n\t\n\t// fallback for uncaught frozen keys\n\tvar uncaughtFrozenStore = function(that){\n\t  return that._l || (that._l = new UncaughtFrozenStore);\n\t};\n\tvar UncaughtFrozenStore = function(){\n\t  this.a = [];\n\t};\n\tvar findUncaughtFrozen = function(store, key){\n\t  return arrayFind(store.a, function(it){\n\t    return it[0] === key;\n\t  });\n\t};\n\tUncaughtFrozenStore.prototype = {\n\t  get: function(key){\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if(entry)return entry[1];\n\t  },\n\t  has: function(key){\n\t    return !!findUncaughtFrozen(this, key);\n\t  },\n\t  set: function(key, value){\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if(entry)entry[1] = value;\n\t    else this.a.push([key, value]);\n\t  },\n\t  'delete': function(key){\n\t    var index = arrayFindIndex(this.a, function(it){\n\t      return it[0] === key;\n\t    });\n\t    if(~index)this.a.splice(index, 1);\n\t    return !!~index;\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n\t    var C = wrapper(function(that, iterable){\n\t      anInstance(that, C, NAME, '_i');\n\t      that._i = id++;      // collection id\n\t      that._l = undefined; // leak store for uncaught frozen objects\n\t      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      // 23.3.3.2 WeakMap.prototype.delete(key)\n\t      // 23.4.3.3 WeakSet.prototype.delete(value)\n\t      'delete': function(key){\n\t        if(!isObject(key))return false;\n\t        var data = getWeak(key);\n\t        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\n\t        return data && $has(data, this._i) && delete data[this._i];\n\t      },\n\t      // 23.3.3.4 WeakMap.prototype.has(key)\n\t      // 23.4.3.4 WeakSet.prototype.has(value)\n\t      has: function has(key){\n\t        if(!isObject(key))return false;\n\t        var data = getWeak(key);\n\t        if(data === true)return uncaughtFrozenStore(this).has(key);\n\t        return data && $has(data, this._i);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function(that, key, value){\n\t    var data = getWeak(anObject(key), true);\n\t    if(data === true)uncaughtFrozenStore(that).set(key, value);\n\t    else data[that._i] = value;\n\t    return that;\n\t  },\n\t  ufstore: uncaughtFrozenStore\n\t};\n\n/***/ },\n/* 217 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar weak = __webpack_require__(216);\n\t\n\t// 23.4 WeakSet Objects\n\t__webpack_require__(213)('WeakSet', function(get){\n\t  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n\t}, {\n\t  // 23.4.3.1 WeakSet.prototype.add(value)\n\t  add: function add(value){\n\t    return weak.def(this, value, true);\n\t  }\n\t}, weak, false, true);\n\n/***/ },\n/* 218 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $export      = __webpack_require__(8)\n\t  , $typed       = __webpack_require__(219)\n\t  , buffer       = __webpack_require__(220)\n\t  , anObject     = __webpack_require__(12)\n\t  , toIndex      = __webpack_require__(39)\n\t  , toLength     = __webpack_require__(37)\n\t  , isObject     = __webpack_require__(13)\n\t  , TYPED_ARRAY  = __webpack_require__(25)('typed_array')\n\t  , ArrayBuffer  = __webpack_require__(4).ArrayBuffer\n\t  , speciesConstructor = __webpack_require__(207)\n\t  , $ArrayBuffer = buffer.ArrayBuffer\n\t  , $DataView    = buffer.DataView\n\t  , $isView      = $typed.ABV && ArrayBuffer.isView\n\t  , $slice       = $ArrayBuffer.prototype.slice\n\t  , VIEW         = $typed.VIEW\n\t  , ARRAY_BUFFER = 'ArrayBuffer';\n\t\n\t$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\t\n\t$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n\t  // 24.1.3.1 ArrayBuffer.isView(arg)\n\t  isView: function isView(it){\n\t    return $isView && $isView(it) || isObject(it) && VIEW in it;\n\t  }\n\t});\n\t\n\t$export($export.P + $export.U + $export.F * __webpack_require__(7)(function(){\n\t  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n\t}), ARRAY_BUFFER, {\n\t  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n\t  slice: function slice(start, end){\n\t    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n\t    var len    = anObject(this).byteLength\n\t      , first  = toIndex(start, len)\n\t      , final  = toIndex(end === undefined ? len : end, len)\n\t      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n\t      , viewS  = new $DataView(this)\n\t      , viewT  = new $DataView(result)\n\t      , index  = 0;\n\t    while(first < final){\n\t      viewT.setUint8(index++, viewS.getUint8(first++));\n\t    } return result;\n\t  }\n\t});\n\t\n\t__webpack_require__(193)(ARRAY_BUFFER);\n\n/***/ },\n/* 219 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(4)\n\t  , hide   = __webpack_require__(10)\n\t  , uid    = __webpack_require__(19)\n\t  , TYPED  = uid('typed_array')\n\t  , VIEW   = uid('view')\n\t  , ABV    = !!(global.ArrayBuffer && global.DataView)\n\t  , CONSTR = ABV\n\t  , i = 0, l = 9, Typed;\n\t\n\tvar TypedArrayConstructors = (\n\t  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n\t).split(',');\n\t\n\twhile(i < l){\n\t  if(Typed = global[TypedArrayConstructors[i++]]){\n\t    hide(Typed.prototype, TYPED, true);\n\t    hide(Typed.prototype, VIEW, true);\n\t  } else CONSTR = false;\n\t}\n\t\n\tmodule.exports = {\n\t  ABV:    ABV,\n\t  CONSTR: CONSTR,\n\t  TYPED:  TYPED,\n\t  VIEW:   VIEW\n\t};\n\n/***/ },\n/* 220 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar global         = __webpack_require__(4)\n\t  , DESCRIPTORS    = __webpack_require__(6)\n\t  , LIBRARY        = __webpack_require__(28)\n\t  , $typed         = __webpack_require__(219)\n\t  , hide           = __webpack_require__(10)\n\t  , redefineAll    = __webpack_require__(210)\n\t  , fails          = __webpack_require__(7)\n\t  , anInstance     = __webpack_require__(90)\n\t  , toInteger      = __webpack_require__(38)\n\t  , toLength       = __webpack_require__(37)\n\t  , gOPN           = __webpack_require__(50).f\n\t  , dP             = __webpack_require__(11).f\n\t  , arrayFill      = __webpack_require__(189)\n\t  , setToStringTag = __webpack_require__(24)\n\t  , ARRAY_BUFFER   = 'ArrayBuffer'\n\t  , DATA_VIEW      = 'DataView'\n\t  , PROTOTYPE      = 'prototype'\n\t  , WRONG_LENGTH   = 'Wrong length!'\n\t  , WRONG_INDEX    = 'Wrong index!'\n\t  , $ArrayBuffer   = global[ARRAY_BUFFER]\n\t  , $DataView      = global[DATA_VIEW]\n\t  , Math           = global.Math\n\t  , parseInt       = global.parseInt\n\t  , RangeError     = global.RangeError\n\t  , Infinity       = global.Infinity\n\t  , BaseBuffer     = $ArrayBuffer\n\t  , abs            = Math.abs\n\t  , pow            = Math.pow\n\t  , min            = Math.min\n\t  , floor          = Math.floor\n\t  , log            = Math.log\n\t  , LN2            = Math.LN2\n\t  , BUFFER         = 'buffer'\n\t  , BYTE_LENGTH    = 'byteLength'\n\t  , BYTE_OFFSET    = 'byteOffset'\n\t  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER\n\t  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH\n\t  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\t\n\t// IEEE754 conversions based on https://github.com/feross/ieee754\n\tvar packIEEE754 = function(value, mLen, nBytes){\n\t  var buffer = Array(nBytes)\n\t    , eLen   = nBytes * 8 - mLen - 1\n\t    , eMax   = (1 << eLen) - 1\n\t    , eBias  = eMax >> 1\n\t    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0\n\t    , i      = 0\n\t    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0\n\t    , e, m, c;\n\t  value = abs(value)\n\t  if(value != value || value === Infinity){\n\t    m = value != value ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = floor(log(value) / LN2);\n\t    if(value * (c = pow(2, -e)) < 1){\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if(e + eBias >= 1){\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * pow(2, 1 - eBias);\n\t    }\n\t    if(value * c >= 2){\n\t      e++;\n\t      c /= 2;\n\t    }\n\t    if(e + eBias >= eMax){\n\t      m = 0;\n\t      e = eMax;\n\t    } else if(e + eBias >= 1){\n\t      m = (value * c - 1) * pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * pow(2, eBias - 1) * pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n\t  buffer[--i] |= s * 128;\n\t  return buffer;\n\t};\n\tvar unpackIEEE754 = function(buffer, mLen, nBytes){\n\t  var eLen  = nBytes * 8 - mLen - 1\n\t    , eMax  = (1 << eLen) - 1\n\t    , eBias = eMax >> 1\n\t    , nBits = eLen - 7\n\t    , i     = nBytes - 1\n\t    , s     = buffer[i--]\n\t    , e     = s & 127\n\t    , m;\n\t  s >>= 7;\n\t  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\t  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n\t  if(e === 0){\n\t    e = 1 - eBias;\n\t  } else if(e === eMax){\n\t    return m ? NaN : s ? -Infinity : Infinity;\n\t  } else {\n\t    m = m + pow(2, mLen);\n\t    e = e - eBias;\n\t  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n\t};\n\t\n\tvar unpackI32 = function(bytes){\n\t  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n\t};\n\tvar packI8 = function(it){\n\t  return [it & 0xff];\n\t};\n\tvar packI16 = function(it){\n\t  return [it & 0xff, it >> 8 & 0xff];\n\t};\n\tvar packI32 = function(it){\n\t  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n\t};\n\tvar packF64 = function(it){\n\t  return packIEEE754(it, 52, 8);\n\t};\n\tvar packF32 = function(it){\n\t  return packIEEE754(it, 23, 4);\n\t};\n\t\n\tvar addGetter = function(C, key, internal){\n\t  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});\n\t};\n\t\n\tvar get = function(view, bytes, index, isLittleEndian){\n\t  var numIndex = +index\n\t    , intIndex = toInteger(numIndex);\n\t  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b\n\t    , start = intIndex + view[$OFFSET]\n\t    , pack  = store.slice(start, start + bytes);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t};\n\tvar set = function(view, bytes, index, conversion, value, isLittleEndian){\n\t  var numIndex = +index\n\t    , intIndex = toInteger(numIndex);\n\t  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b\n\t    , start = intIndex + view[$OFFSET]\n\t    , pack  = conversion(+value);\n\t  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n\t};\n\t\n\tvar validateArrayBufferArguments = function(that, length){\n\t  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);\n\t  var numberLength = +length\n\t    , byteLength   = toLength(numberLength);\n\t  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);\n\t  return byteLength;\n\t};\n\t\n\tif(!$typed.ABV){\n\t  $ArrayBuffer = function ArrayBuffer(length){\n\t    var byteLength = validateArrayBufferArguments(this, length);\n\t    this._b       = arrayFill.call(Array(byteLength), 0);\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t\n\t  $DataView = function DataView(buffer, byteOffset, byteLength){\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = buffer[$LENGTH]\n\t      , offset       = toInteger(byteOffset);\n\t    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);\n\t    this[$BUFFER] = buffer;\n\t    this[$OFFSET] = offset;\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t\n\t  if(DESCRIPTORS){\n\t    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BUFFER, '_b');\n\t    addGetter($DataView, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BYTE_OFFSET, '_o');\n\t  }\n\t\n\t  redefineAll($DataView[PROTOTYPE], {\n\t    getInt8: function getInt8(byteOffset){\n\t      return get(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset){\n\t      return get(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset /*, littleEndian */){\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset /*, littleEndian */){\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset /*, littleEndian */){\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n\t    },\n\t    getUint32: function getUint32(byteOffset /*, littleEndian */){\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset /*, littleEndian */){\n\t      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset /*, littleEndian */){\n\t      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value){\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value){\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value /*, littleEndian */){\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value /*, littleEndian */){\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){\n\t      set(this, 4, byteOffset, packF32, value, arguments[2]);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){\n\t      set(this, 8, byteOffset, packF64, value, arguments[2]);\n\t    }\n\t  });\n\t} else {\n\t  if(!fails(function(){\n\t    new $ArrayBuffer;     // eslint-disable-line no-new\n\t  }) || !fails(function(){\n\t    new $ArrayBuffer(.5); // eslint-disable-line no-new\n\t  })){\n\t    $ArrayBuffer = function ArrayBuffer(length){\n\t      return new BaseBuffer(validateArrayBufferArguments(this, length));\n\t    };\n\t    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n\t    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){\n\t      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);\n\t    };\n\t    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;\n\t  }\n\t  // iOS Safari 7.x bug\n\t  var view = new $DataView(new $ArrayBuffer(2))\n\t    , $setInt8 = $DataView[PROTOTYPE].setInt8;\n\t  view.setInt8(0, 2147483648);\n\t  view.setInt8(1, 2147483649);\n\t  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {\n\t    setInt8: function setInt8(byteOffset, value){\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value){\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, true);\n\t}\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\thide($DataView[PROTOTYPE], $typed.VIEW, true);\n\texports[ARRAY_BUFFER] = $ArrayBuffer;\n\texports[DATA_VIEW] = $DataView;\n\n/***/ },\n/* 221 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8);\n\t$export($export.G + $export.W + $export.F * !__webpack_require__(219).ABV, {\n\t  DataView: __webpack_require__(220).DataView\n\t});\n\n/***/ },\n/* 222 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Int8', 1, function(init){\n\t  return function Int8Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 223 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tif(__webpack_require__(6)){\n\t  var LIBRARY             = __webpack_require__(28)\n\t    , global              = __webpack_require__(4)\n\t    , fails               = __webpack_require__(7)\n\t    , $export             = __webpack_require__(8)\n\t    , $typed              = __webpack_require__(219)\n\t    , $buffer             = __webpack_require__(220)\n\t    , ctx                 = __webpack_require__(20)\n\t    , anInstance          = __webpack_require__(90)\n\t    , propertyDesc        = __webpack_require__(17)\n\t    , hide                = __webpack_require__(10)\n\t    , redefineAll         = __webpack_require__(210)\n\t    , isInteger           = __webpack_require__(97)\n\t    , toInteger           = __webpack_require__(38)\n\t    , toLength            = __webpack_require__(37)\n\t    , toIndex             = __webpack_require__(39)\n\t    , toPrimitive         = __webpack_require__(16)\n\t    , has                 = __webpack_require__(5)\n\t    , same                = __webpack_require__(71)\n\t    , classof             = __webpack_require__(75)\n\t    , isObject            = __webpack_require__(13)\n\t    , toObject            = __webpack_require__(58)\n\t    , isArrayIter         = __webpack_require__(163)\n\t    , create              = __webpack_require__(46)\n\t    , getPrototypeOf      = __webpack_require__(59)\n\t    , gOPN                = __webpack_require__(50).f\n\t    , isIterable          = __webpack_require__(224)\n\t    , getIterFn           = __webpack_require__(165)\n\t    , uid                 = __webpack_require__(19)\n\t    , wks                 = __webpack_require__(25)\n\t    , createArrayMethod   = __webpack_require__(173)\n\t    , createArrayIncludes = __webpack_require__(36)\n\t    , speciesConstructor  = __webpack_require__(207)\n\t    , ArrayIterators      = __webpack_require__(194)\n\t    , Iterators           = __webpack_require__(130)\n\t    , $iterDetect         = __webpack_require__(166)\n\t    , setSpecies          = __webpack_require__(193)\n\t    , arrayFill           = __webpack_require__(189)\n\t    , arrayCopyWithin     = __webpack_require__(186)\n\t    , $DP                 = __webpack_require__(11)\n\t    , $GOPD               = __webpack_require__(51)\n\t    , dP                  = $DP.f\n\t    , gOPD                = $GOPD.f\n\t    , RangeError          = global.RangeError\n\t    , TypeError           = global.TypeError\n\t    , Uint8Array          = global.Uint8Array\n\t    , ARRAY_BUFFER        = 'ArrayBuffer'\n\t    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER\n\t    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'\n\t    , PROTOTYPE           = 'prototype'\n\t    , ArrayProto          = Array[PROTOTYPE]\n\t    , $ArrayBuffer        = $buffer.ArrayBuffer\n\t    , $DataView           = $buffer.DataView\n\t    , arrayForEach        = createArrayMethod(0)\n\t    , arrayFilter         = createArrayMethod(2)\n\t    , arraySome           = createArrayMethod(3)\n\t    , arrayEvery          = createArrayMethod(4)\n\t    , arrayFind           = createArrayMethod(5)\n\t    , arrayFindIndex      = createArrayMethod(6)\n\t    , arrayIncludes       = createArrayIncludes(true)\n\t    , arrayIndexOf        = createArrayIncludes(false)\n\t    , arrayValues         = ArrayIterators.values\n\t    , arrayKeys           = ArrayIterators.keys\n\t    , arrayEntries        = ArrayIterators.entries\n\t    , arrayLastIndexOf    = ArrayProto.lastIndexOf\n\t    , arrayReduce         = ArrayProto.reduce\n\t    , arrayReduceRight    = ArrayProto.reduceRight\n\t    , arrayJoin           = ArrayProto.join\n\t    , arraySort           = ArrayProto.sort\n\t    , arraySlice          = ArrayProto.slice\n\t    , arrayToString       = ArrayProto.toString\n\t    , arrayToLocaleString = ArrayProto.toLocaleString\n\t    , ITERATOR            = wks('iterator')\n\t    , TAG                 = wks('toStringTag')\n\t    , TYPED_CONSTRUCTOR   = uid('typed_constructor')\n\t    , DEF_CONSTRUCTOR     = uid('def_constructor')\n\t    , ALL_CONSTRUCTORS    = $typed.CONSTR\n\t    , TYPED_ARRAY         = $typed.TYPED\n\t    , VIEW                = $typed.VIEW\n\t    , WRONG_LENGTH        = 'Wrong length!';\n\t\n\t  var $map = createArrayMethod(1, function(O, length){\n\t    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n\t  });\n\t\n\t  var LITTLE_ENDIAN = fails(function(){\n\t    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n\t  });\n\t\n\t  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){\n\t    new Uint8Array(1).set({});\n\t  });\n\t\n\t  var strictToLength = function(it, SAME){\n\t    if(it === undefined)throw TypeError(WRONG_LENGTH);\n\t    var number = +it\n\t      , length = toLength(it);\n\t    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);\n\t    return length;\n\t  };\n\t\n\t  var toOffset = function(it, BYTES){\n\t    var offset = toInteger(it);\n\t    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');\n\t    return offset;\n\t  };\n\t\n\t  var validate = function(it){\n\t    if(isObject(it) && TYPED_ARRAY in it)return it;\n\t    throw TypeError(it + ' is not a typed array!');\n\t  };\n\t\n\t  var allocate = function(C, length){\n\t    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){\n\t      throw TypeError('It is not a typed array constructor!');\n\t    } return new C(length);\n\t  };\n\t\n\t  var speciesFromList = function(O, list){\n\t    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n\t  };\n\t\n\t  var fromList = function(C, list){\n\t    var index  = 0\n\t      , length = list.length\n\t      , result = allocate(C, length);\n\t    while(length > index)result[index] = list[index++];\n\t    return result;\n\t  };\n\t\n\t  var addGetter = function(it, key, internal){\n\t    dP(it, key, {get: function(){ return this._d[internal]; }});\n\t  };\n\t\n\t  var $from = function from(source /*, mapfn, thisArg */){\n\t    var O       = toObject(source)\n\t      , aLen    = arguments.length\n\t      , mapfn   = aLen > 1 ? arguments[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , iterFn  = getIterFn(O)\n\t      , i, length, values, result, step, iterator;\n\t    if(iterFn != undefined && !isArrayIter(iterFn)){\n\t      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){\n\t        values.push(step.value);\n\t      } O = values;\n\t    }\n\t    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);\n\t    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){\n\t      result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  var $of = function of(/*...items*/){\n\t    var index  = 0\n\t      , length = arguments.length\n\t      , result = allocate(this, length);\n\t    while(length > index)result[index] = arguments[index++];\n\t    return result;\n\t  };\n\t\n\t  // iOS Safari 6.x fails here\n\t  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });\n\t\n\t  var $toLocaleString = function toLocaleString(){\n\t    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n\t  };\n\t\n\t  var proto = {\n\t    copyWithin: function copyWithin(target, start /*, end */){\n\t      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    every: function every(callbackfn /*, thisArg */){\n\t      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars\n\t      return arrayFill.apply(validate(this), arguments);\n\t    },\n\t    filter: function filter(callbackfn /*, thisArg */){\n\t      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n\t        arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    find: function find(predicate /*, thisArg */){\n\t      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    findIndex: function findIndex(predicate /*, thisArg */){\n\t      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    forEach: function forEach(callbackfn /*, thisArg */){\n\t      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    indexOf: function indexOf(searchElement /*, fromIndex */){\n\t      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    includes: function includes(searchElement /*, fromIndex */){\n\t      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    join: function join(separator){ // eslint-disable-line no-unused-vars\n\t      return arrayJoin.apply(validate(this), arguments);\n\t    },\n\t    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars\n\t      return arrayLastIndexOf.apply(validate(this), arguments);\n\t    },\n\t    map: function map(mapfn /*, thisArg */){\n\t      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n\t      return arrayReduce.apply(validate(this), arguments);\n\t    },\n\t    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n\t      return arrayReduceRight.apply(validate(this), arguments);\n\t    },\n\t    reverse: function reverse(){\n\t      var that   = this\n\t        , length = validate(that).length\n\t        , middle = Math.floor(length / 2)\n\t        , index  = 0\n\t        , value;\n\t      while(index < middle){\n\t        value         = that[index];\n\t        that[index++] = that[--length];\n\t        that[length]  = value;\n\t      } return that;\n\t    },\n\t    some: function some(callbackfn /*, thisArg */){\n\t      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    sort: function sort(comparefn){\n\t      return arraySort.call(validate(this), comparefn);\n\t    },\n\t    subarray: function subarray(begin, end){\n\t      var O      = validate(this)\n\t        , length = O.length\n\t        , $begin = toIndex(begin, length);\n\t      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n\t        O.buffer,\n\t        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n\t        toLength((end === undefined ? length : toIndex(end, length)) - $begin)\n\t      );\n\t    }\n\t  };\n\t\n\t  var $slice = function slice(start, end){\n\t    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n\t  };\n\t\n\t  var $set = function set(arrayLike /*, offset */){\n\t    validate(this);\n\t    var offset = toOffset(arguments[1], 1)\n\t      , length = this.length\n\t      , src    = toObject(arrayLike)\n\t      , len    = toLength(src.length)\n\t      , index  = 0;\n\t    if(len + offset > length)throw RangeError(WRONG_LENGTH);\n\t    while(index < len)this[offset + index] = src[index++];\n\t  };\n\t\n\t  var $iterators = {\n\t    entries: function entries(){\n\t      return arrayEntries.call(validate(this));\n\t    },\n\t    keys: function keys(){\n\t      return arrayKeys.call(validate(this));\n\t    },\n\t    values: function values(){\n\t      return arrayValues.call(validate(this));\n\t    }\n\t  };\n\t\n\t  var isTAIndex = function(target, key){\n\t    return isObject(target)\n\t      && target[TYPED_ARRAY]\n\t      && typeof key != 'symbol'\n\t      && key in target\n\t      && String(+key) == String(key);\n\t  };\n\t  var $getDesc = function getOwnPropertyDescriptor(target, key){\n\t    return isTAIndex(target, key = toPrimitive(key, true))\n\t      ? propertyDesc(2, target[key])\n\t      : gOPD(target, key);\n\t  };\n\t  var $setDesc = function defineProperty(target, key, desc){\n\t    if(isTAIndex(target, key = toPrimitive(key, true))\n\t      && isObject(desc)\n\t      && has(desc, 'value')\n\t      && !has(desc, 'get')\n\t      && !has(desc, 'set')\n\t      // TODO: add validation descriptor w/o calling accessors\n\t      && !desc.configurable\n\t      && (!has(desc, 'writable') || desc.writable)\n\t      && (!has(desc, 'enumerable') || desc.enumerable)\n\t    ){\n\t      target[key] = desc.value;\n\t      return target;\n\t    } else return dP(target, key, desc);\n\t  };\n\t\n\t  if(!ALL_CONSTRUCTORS){\n\t    $GOPD.f = $getDesc;\n\t    $DP.f   = $setDesc;\n\t  }\n\t\n\t  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n\t    getOwnPropertyDescriptor: $getDesc,\n\t    defineProperty:           $setDesc\n\t  });\n\t\n\t  if(fails(function(){ arrayToString.call({}); })){\n\t    arrayToString = arrayToLocaleString = function toString(){\n\t      return arrayJoin.call(this);\n\t    }\n\t  }\n\t\n\t  var $TypedArrayPrototype$ = redefineAll({}, proto);\n\t  redefineAll($TypedArrayPrototype$, $iterators);\n\t  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n\t  redefineAll($TypedArrayPrototype$, {\n\t    slice:          $slice,\n\t    set:            $set,\n\t    constructor:    function(){ /* noop */ },\n\t    toString:       arrayToString,\n\t    toLocaleString: $toLocaleString\n\t  });\n\t  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n\t  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n\t  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n\t  addGetter($TypedArrayPrototype$, 'length', 'e');\n\t  dP($TypedArrayPrototype$, TAG, {\n\t    get: function(){ return this[TYPED_ARRAY]; }\n\t  });\n\t\n\t  module.exports = function(KEY, BYTES, wrapper, CLAMPED){\n\t    CLAMPED = !!CLAMPED;\n\t    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'\n\t      , ISNT_UINT8 = NAME != 'Uint8Array'\n\t      , GETTER     = 'get' + KEY\n\t      , SETTER     = 'set' + KEY\n\t      , TypedArray = global[NAME]\n\t      , Base       = TypedArray || {}\n\t      , TAC        = TypedArray && getPrototypeOf(TypedArray)\n\t      , FORCED     = !TypedArray || !$typed.ABV\n\t      , O          = {}\n\t      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n\t    var getter = function(that, index){\n\t      var data = that._d;\n\t      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n\t    };\n\t    var setter = function(that, index, value){\n\t      var data = that._d;\n\t      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n\t      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n\t    };\n\t    var addElement = function(that, index){\n\t      dP(that, index, {\n\t        get: function(){\n\t          return getter(this, index);\n\t        },\n\t        set: function(value){\n\t          return setter(this, index, value);\n\t        },\n\t        enumerable: true\n\t      });\n\t    };\n\t    if(FORCED){\n\t      TypedArray = wrapper(function(that, data, $offset, $length){\n\t        anInstance(that, TypedArray, NAME, '_d');\n\t        var index  = 0\n\t          , offset = 0\n\t          , buffer, byteLength, length, klass;\n\t        if(!isObject(data)){\n\t          length     = strictToLength(data, true)\n\t          byteLength = length * BYTES;\n\t          buffer     = new $ArrayBuffer(byteLength);\n\t        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n\t          buffer = data;\n\t          offset = toOffset($offset, BYTES);\n\t          var $len = data.byteLength;\n\t          if($length === undefined){\n\t            if($len % BYTES)throw RangeError(WRONG_LENGTH);\n\t            byteLength = $len - offset;\n\t            if(byteLength < 0)throw RangeError(WRONG_LENGTH);\n\t          } else {\n\t            byteLength = toLength($length) * BYTES;\n\t            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);\n\t          }\n\t          length = byteLength / BYTES;\n\t        } else if(TYPED_ARRAY in data){\n\t          return fromList(TypedArray, data);\n\t        } else {\n\t          return $from.call(TypedArray, data);\n\t        }\n\t        hide(that, '_d', {\n\t          b: buffer,\n\t          o: offset,\n\t          l: byteLength,\n\t          e: length,\n\t          v: new $DataView(buffer)\n\t        });\n\t        while(index < length)addElement(that, index++);\n\t      });\n\t      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n\t      hide(TypedArrayPrototype, 'constructor', TypedArray);\n\t    } else if(!$iterDetect(function(iter){\n\t      // V8 works with iterators, but fails in many other cases\n\t      // https://code.google.com/p/v8/issues/detail?id=4552\n\t      new TypedArray(null); // eslint-disable-line no-new\n\t      new TypedArray(iter); // eslint-disable-line no-new\n\t    }, true)){\n\t      TypedArray = wrapper(function(that, data, $offset, $length){\n\t        anInstance(that, TypedArray, NAME);\n\t        var klass;\n\t        // `ws` module bug, temporarily remove validation length for Uint8Array\n\t        // https://github.com/websockets/ws/pull/645\n\t        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));\n\t        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n\t          return $length !== undefined\n\t            ? new Base(data, toOffset($offset, BYTES), $length)\n\t            : $offset !== undefined\n\t              ? new Base(data, toOffset($offset, BYTES))\n\t              : new Base(data);\n\t        }\n\t        if(TYPED_ARRAY in data)return fromList(TypedArray, data);\n\t        return $from.call(TypedArray, data);\n\t      });\n\t      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){\n\t        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);\n\t      });\n\t      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n\t      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;\n\t    }\n\t    var $nativeIterator   = TypedArrayPrototype[ITERATOR]\n\t      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)\n\t      , $iterator         = $iterators.values;\n\t    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n\t    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n\t    hide(TypedArrayPrototype, VIEW, true);\n\t    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\t\n\t    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){\n\t      dP(TypedArrayPrototype, TAG, {\n\t        get: function(){ return NAME; }\n\t      });\n\t    }\n\t\n\t    O[NAME] = TypedArray;\n\t\n\t    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\t\n\t    $export($export.S, NAME, {\n\t      BYTES_PER_ELEMENT: BYTES,\n\t      from: $from,\n\t      of: $of\n\t    });\n\t\n\t    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\t\n\t    $export($export.P, NAME, proto);\n\t\n\t    setSpecies(NAME);\n\t\n\t    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});\n\t\n\t    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\t\n\t    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});\n\t\n\t    $export($export.P + $export.F * fails(function(){\n\t      new TypedArray(1).slice();\n\t    }), NAME, {slice: $slice});\n\t\n\t    $export($export.P + $export.F * (fails(function(){\n\t      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()\n\t    }) || !fails(function(){\n\t      TypedArrayPrototype.toLocaleString.call([1, 2]);\n\t    })), NAME, {toLocaleString: $toLocaleString});\n\t\n\t    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n\t    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);\n\t  };\n\t} else module.exports = function(){ /* empty */ };\n\n/***/ },\n/* 224 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(75)\n\t  , ITERATOR  = __webpack_require__(25)('iterator')\n\t  , Iterators = __webpack_require__(130);\n\tmodule.exports = __webpack_require__(9).isIterable = function(it){\n\t  var O = Object(it);\n\t  return O[ITERATOR] !== undefined\n\t    || '@@iterator' in O\n\t    || Iterators.hasOwnProperty(classof(O));\n\t};\n\n/***/ },\n/* 225 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Uint8', 1, function(init){\n\t  return function Uint8Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 226 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Uint8', 1, function(init){\n\t  return function Uint8ClampedArray(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t}, true);\n\n/***/ },\n/* 227 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Int16', 2, function(init){\n\t  return function Int16Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 228 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Uint16', 2, function(init){\n\t  return function Uint16Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 229 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Int32', 4, function(init){\n\t  return function Int32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 230 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Uint32', 4, function(init){\n\t  return function Uint32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 231 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Float32', 4, function(init){\n\t  return function Float32Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 232 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(223)('Float64', 8, function(init){\n\t  return function Float64Array(data, byteOffset, length){\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n/***/ },\n/* 233 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\n\tvar $export   = __webpack_require__(8)\n\t  , aFunction = __webpack_require__(21)\n\t  , anObject  = __webpack_require__(12)\n\t  , _apply    = Function.apply;\n\t\n\t$export($export.S, 'Reflect', {\n\t  apply: function apply(target, thisArgument, argumentsList){\n\t    return _apply.call(aFunction(target), thisArgument, anObject(argumentsList));\n\t  }\n\t});\n\n/***/ },\n/* 234 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\n\tvar $export   = __webpack_require__(8)\n\t  , create    = __webpack_require__(46)\n\t  , aFunction = __webpack_require__(21)\n\t  , anObject  = __webpack_require__(12)\n\t  , isObject  = __webpack_require__(13)\n\t  , bind      = __webpack_require__(77);\n\t\n\t// MS Edge supports only 2 arguments\n\t// FF Nightly sets third argument as `new.target`, but does not create `this` from it\n\t$export($export.S + $export.F * __webpack_require__(7)(function(){\n\t  function F(){}\n\t  return !(Reflect.construct(function(){}, [], F) instanceof F);\n\t}), 'Reflect', {\n\t  construct: function construct(Target, args /*, newTarget*/){\n\t    aFunction(Target);\n\t    anObject(args);\n\t    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n\t    if(Target == newTarget){\n\t      // w/o altered newTarget, optimization for 0-4 arguments\n\t      switch(args.length){\n\t        case 0: return new Target;\n\t        case 1: return new Target(args[0]);\n\t        case 2: return new Target(args[0], args[1]);\n\t        case 3: return new Target(args[0], args[1], args[2]);\n\t        case 4: return new Target(args[0], args[1], args[2], args[3]);\n\t      }\n\t      // w/o altered newTarget, lot of arguments case\n\t      var $args = [null];\n\t      $args.push.apply($args, args);\n\t      return new (bind.apply(Target, $args));\n\t    }\n\t    // with altered newTarget, not support built-in constructors\n\t    var proto    = newTarget.prototype\n\t      , instance = create(isObject(proto) ? proto : Object.prototype)\n\t      , result   = Function.apply.call(Target, instance, args);\n\t    return isObject(result) ? result : instance;\n\t  }\n\t});\n\n/***/ },\n/* 235 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\n\tvar dP          = __webpack_require__(11)\n\t  , $export     = __webpack_require__(8)\n\t  , anObject    = __webpack_require__(12)\n\t  , toPrimitive = __webpack_require__(16);\n\t\n\t// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n\t$export($export.S + $export.F * __webpack_require__(7)(function(){\n\t  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});\n\t}), 'Reflect', {\n\t  defineProperty: function defineProperty(target, propertyKey, attributes){\n\t    anObject(target);\n\t    propertyKey = toPrimitive(propertyKey, true);\n\t    anObject(attributes);\n\t    try {\n\t      dP.f(target, propertyKey, attributes);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 236 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.4 Reflect.deleteProperty(target, propertyKey)\n\tvar $export  = __webpack_require__(8)\n\t  , gOPD     = __webpack_require__(51).f\n\t  , anObject = __webpack_require__(12);\n\t\n\t$export($export.S, 'Reflect', {\n\t  deleteProperty: function deleteProperty(target, propertyKey){\n\t    var desc = gOPD(anObject(target), propertyKey);\n\t    return desc && !desc.configurable ? false : delete target[propertyKey];\n\t  }\n\t});\n\n/***/ },\n/* 237 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 26.1.5 Reflect.enumerate(target)\n\tvar $export  = __webpack_require__(8)\n\t  , anObject = __webpack_require__(12);\n\tvar Enumerate = function(iterated){\n\t  this._t = anObject(iterated); // target\n\t  this._i = 0;                  // next index\n\t  var keys = this._k = []       // keys\n\t    , key;\n\t  for(key in iterated)keys.push(key);\n\t};\n\t__webpack_require__(131)(Enumerate, 'Object', function(){\n\t  var that = this\n\t    , keys = that._k\n\t    , key;\n\t  do {\n\t    if(that._i >= keys.length)return {value: undefined, done: true};\n\t  } while(!((key = keys[that._i++]) in that._t));\n\t  return {value: key, done: false};\n\t});\n\t\n\t$export($export.S, 'Reflect', {\n\t  enumerate: function enumerate(target){\n\t    return new Enumerate(target);\n\t  }\n\t});\n\n/***/ },\n/* 238 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.6 Reflect.get(target, propertyKey [, receiver])\n\tvar gOPD           = __webpack_require__(51)\n\t  , getPrototypeOf = __webpack_require__(59)\n\t  , has            = __webpack_require__(5)\n\t  , $export        = __webpack_require__(8)\n\t  , isObject       = __webpack_require__(13)\n\t  , anObject       = __webpack_require__(12);\n\t\n\tfunction get(target, propertyKey/*, receiver*/){\n\t  var receiver = arguments.length < 3 ? target : arguments[2]\n\t    , desc, proto;\n\t  if(anObject(target) === receiver)return target[propertyKey];\n\t  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')\n\t    ? desc.value\n\t    : desc.get !== undefined\n\t      ? desc.get.call(receiver)\n\t      : undefined;\n\t  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);\n\t}\n\t\n\t$export($export.S, 'Reflect', {get: get});\n\n/***/ },\n/* 239 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\n\tvar gOPD     = __webpack_require__(51)\n\t  , $export  = __webpack_require__(8)\n\t  , anObject = __webpack_require__(12);\n\t\n\t$export($export.S, 'Reflect', {\n\t  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){\n\t    return gOPD.f(anObject(target), propertyKey);\n\t  }\n\t});\n\n/***/ },\n/* 240 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.8 Reflect.getPrototypeOf(target)\n\tvar $export  = __webpack_require__(8)\n\t  , getProto = __webpack_require__(59)\n\t  , anObject = __webpack_require__(12);\n\t\n\t$export($export.S, 'Reflect', {\n\t  getPrototypeOf: function getPrototypeOf(target){\n\t    return getProto(anObject(target));\n\t  }\n\t});\n\n/***/ },\n/* 241 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.9 Reflect.has(target, propertyKey)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Reflect', {\n\t  has: function has(target, propertyKey){\n\t    return propertyKey in target;\n\t  }\n\t});\n\n/***/ },\n/* 242 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.10 Reflect.isExtensible(target)\n\tvar $export       = __webpack_require__(8)\n\t  , anObject      = __webpack_require__(12)\n\t  , $isExtensible = Object.isExtensible;\n\t\n\t$export($export.S, 'Reflect', {\n\t  isExtensible: function isExtensible(target){\n\t    anObject(target);\n\t    return $isExtensible ? $isExtensible(target) : true;\n\t  }\n\t});\n\n/***/ },\n/* 243 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.11 Reflect.ownKeys(target)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Reflect', {ownKeys: __webpack_require__(244)});\n\n/***/ },\n/* 244 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// all object keys, includes non-enumerable and symbols\n\tvar gOPN     = __webpack_require__(50)\n\t  , gOPS     = __webpack_require__(43)\n\t  , anObject = __webpack_require__(12)\n\t  , Reflect  = __webpack_require__(4).Reflect;\n\tmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it){\n\t  var keys       = gOPN.f(anObject(it))\n\t    , getSymbols = gOPS.f;\n\t  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n\t};\n\n/***/ },\n/* 245 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.12 Reflect.preventExtensions(target)\n\tvar $export            = __webpack_require__(8)\n\t  , anObject           = __webpack_require__(12)\n\t  , $preventExtensions = Object.preventExtensions;\n\t\n\t$export($export.S, 'Reflect', {\n\t  preventExtensions: function preventExtensions(target){\n\t    anObject(target);\n\t    try {\n\t      if($preventExtensions)$preventExtensions(target);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 246 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\n\tvar dP             = __webpack_require__(11)\n\t  , gOPD           = __webpack_require__(51)\n\t  , getPrototypeOf = __webpack_require__(59)\n\t  , has            = __webpack_require__(5)\n\t  , $export        = __webpack_require__(8)\n\t  , createDesc     = __webpack_require__(17)\n\t  , anObject       = __webpack_require__(12)\n\t  , isObject       = __webpack_require__(13);\n\t\n\tfunction set(target, propertyKey, V/*, receiver*/){\n\t  var receiver = arguments.length < 4 ? target : arguments[3]\n\t    , ownDesc  = gOPD.f(anObject(target), propertyKey)\n\t    , existingDescriptor, proto;\n\t  if(!ownDesc){\n\t    if(isObject(proto = getPrototypeOf(target))){\n\t      return set(proto, propertyKey, V, receiver);\n\t    }\n\t    ownDesc = createDesc(0);\n\t  }\n\t  if(has(ownDesc, 'value')){\n\t    if(ownDesc.writable === false || !isObject(receiver))return false;\n\t    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);\n\t    existingDescriptor.value = V;\n\t    dP.f(receiver, propertyKey, existingDescriptor);\n\t    return true;\n\t  }\n\t  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n\t}\n\t\n\t$export($export.S, 'Reflect', {set: set});\n\n/***/ },\n/* 247 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 26.1.14 Reflect.setPrototypeOf(target, proto)\n\tvar $export  = __webpack_require__(8)\n\t  , setProto = __webpack_require__(73);\n\t\n\tif(setProto)$export($export.S, 'Reflect', {\n\t  setPrototypeOf: function setPrototypeOf(target, proto){\n\t    setProto.check(target, proto);\n\t    try {\n\t      setProto.set(target, proto);\n\t      return true;\n\t    } catch(e){\n\t      return false;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 248 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/Array.prototype.includes\n\tvar $export   = __webpack_require__(8)\n\t  , $includes = __webpack_require__(36)(true);\n\t\n\t$export($export.P, 'Array', {\n\t  includes: function includes(el /*, fromIndex = 0 */){\n\t    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\t\n\t__webpack_require__(187)('includes');\n\n/***/ },\n/* 249 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/mathiasbynens/String.prototype.at\n\tvar $export = __webpack_require__(8)\n\t  , $at     = __webpack_require__(128)(true);\n\t\n\t$export($export.P, 'String', {\n\t  at: function at(pos){\n\t    return $at(this, pos);\n\t  }\n\t});\n\n/***/ },\n/* 250 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar $export = __webpack_require__(8)\n\t  , $pad    = __webpack_require__(251);\n\t\n\t$export($export.P, 'String', {\n\t  padStart: function padStart(maxLength /*, fillString = ' ' */){\n\t    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n\t  }\n\t});\n\n/***/ },\n/* 251 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar toLength = __webpack_require__(37)\n\t  , repeat   = __webpack_require__(92)\n\t  , defined  = __webpack_require__(35);\n\t\n\tmodule.exports = function(that, maxLength, fillString, left){\n\t  var S            = String(defined(that))\n\t    , stringLength = S.length\n\t    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n\t    , intMaxLength = toLength(maxLength);\n\t  if(intMaxLength <= stringLength || fillStr == '')return S;\n\t  var fillLen = intMaxLength - stringLength\n\t    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n\t  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n\t  return left ? stringFiller + S : S + stringFiller;\n\t};\n\n\n/***/ },\n/* 252 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/tc39/proposal-string-pad-start-end\n\tvar $export = __webpack_require__(8)\n\t  , $pad    = __webpack_require__(251);\n\t\n\t$export($export.P, 'String', {\n\t  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n\t    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n\t  }\n\t});\n\n/***/ },\n/* 253 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n\t__webpack_require__(83)('trimLeft', function($trim){\n\t  return function trimLeft(){\n\t    return $trim(this, 1);\n\t  };\n\t}, 'trimStart');\n\n/***/ },\n/* 254 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\n\t__webpack_require__(83)('trimRight', function($trim){\n\t  return function trimRight(){\n\t    return $trim(this, 2);\n\t  };\n\t}, 'trimEnd');\n\n/***/ },\n/* 255 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t// https://tc39.github.io/String.prototype.matchAll/\r\n\tvar $export     = __webpack_require__(8)\r\n\t  , defined     = __webpack_require__(35)\r\n\t  , toLength    = __webpack_require__(37)\r\n\t  , isRegExp    = __webpack_require__(135)\r\n\t  , getFlags    = __webpack_require__(197)\r\n\t  , RegExpProto = RegExp.prototype;\r\n\t\r\n\tvar $RegExpStringIterator = function(regexp, string){\r\n\t  this._r = regexp;\r\n\t  this._s = string;\r\n\t};\r\n\t\r\n\t__webpack_require__(131)($RegExpStringIterator, 'RegExp String', function next(){\r\n\t  var match = this._r.exec(this._s);\r\n\t  return {value: match, done: match === null};\r\n\t});\r\n\t\r\n\t$export($export.P, 'String', {\r\n\t  matchAll: function matchAll(regexp){\r\n\t    defined(this);\r\n\t    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\r\n\t    var S     = String(this)\r\n\t      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\r\n\t      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\r\n\t    rx.lastIndex = toLength(regexp.lastIndex);\r\n\t    return new $RegExpStringIterator(rx, S);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 256 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(27)('asyncIterator');\n\n/***/ },\n/* 257 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(27)('observable');\n\n/***/ },\n/* 258 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-getownpropertydescriptors\n\tvar $export        = __webpack_require__(8)\n\t  , ownKeys        = __webpack_require__(244)\n\t  , toIObject      = __webpack_require__(32)\n\t  , gOPD           = __webpack_require__(51)\n\t  , createProperty = __webpack_require__(164);\n\t\n\t$export($export.S, 'Object', {\n\t  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){\n\t    var O       = toIObject(object)\n\t      , getDesc = gOPD.f\n\t      , keys    = ownKeys(O)\n\t      , result  = {}\n\t      , i       = 0\n\t      , key, D;\n\t    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));\n\t    return result;\n\t  }\n\t});\n\n/***/ },\n/* 259 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-values-entries\n\tvar $export = __webpack_require__(8)\n\t  , $values = __webpack_require__(260)(false);\n\t\n\t$export($export.S, 'Object', {\n\t  values: function values(it){\n\t    return $values(it);\n\t  }\n\t});\n\n/***/ },\n/* 260 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getKeys   = __webpack_require__(30)\n\t  , toIObject = __webpack_require__(32)\n\t  , isEnum    = __webpack_require__(44).f;\n\tmodule.exports = function(isEntries){\n\t  return function(it){\n\t    var O      = toIObject(it)\n\t      , keys   = getKeys(O)\n\t      , length = keys.length\n\t      , i      = 0\n\t      , result = []\n\t      , key;\n\t    while(length > i)if(isEnum.call(O, key = keys[i++])){\n\t      result.push(isEntries ? [key, O[key]] : O[key]);\n\t    } return result;\n\t  };\n\t};\n\n/***/ },\n/* 261 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/tc39/proposal-object-values-entries\n\tvar $export  = __webpack_require__(8)\n\t  , $entries = __webpack_require__(260)(true);\n\t\n\t$export($export.S, 'Object', {\n\t  entries: function entries(it){\n\t    return $entries(it);\n\t  }\n\t});\n\n/***/ },\n/* 262 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export         = __webpack_require__(8)\r\n\t  , toObject        = __webpack_require__(58)\r\n\t  , aFunction       = __webpack_require__(21)\r\n\t  , $defineProperty = __webpack_require__(11);\r\n\t\r\n\t// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\r\n\t__webpack_require__(6) && $export($export.P + __webpack_require__(263), 'Object', {\r\n\t  __defineGetter__: function __defineGetter__(P, getter){\r\n\t    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});\r\n\t  }\r\n\t});\n\n/***/ },\n/* 263 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Forced replacement prototype accessors methods\r\n\tmodule.exports = __webpack_require__(28)|| !__webpack_require__(7)(function(){\r\n\t  var K = Math.random();\r\n\t  // In FF throws only define methods\r\n\t  __defineSetter__.call(null, K, function(){ /* empty */});\r\n\t  delete __webpack_require__(4)[K];\r\n\t});\n\n/***/ },\n/* 264 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export         = __webpack_require__(8)\r\n\t  , toObject        = __webpack_require__(58)\r\n\t  , aFunction       = __webpack_require__(21)\r\n\t  , $defineProperty = __webpack_require__(11);\r\n\t\r\n\t// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\r\n\t__webpack_require__(6) && $export($export.P + __webpack_require__(263), 'Object', {\r\n\t  __defineSetter__: function __defineSetter__(P, setter){\r\n\t    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});\r\n\t  }\r\n\t});\n\n/***/ },\n/* 265 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export                  = __webpack_require__(8)\r\n\t  , toObject                 = __webpack_require__(58)\r\n\t  , toPrimitive              = __webpack_require__(16)\r\n\t  , getPrototypeOf           = __webpack_require__(59)\r\n\t  , getOwnPropertyDescriptor = __webpack_require__(51).f;\r\n\t\r\n\t// B.2.2.4 Object.prototype.__lookupGetter__(P)\r\n\t__webpack_require__(6) && $export($export.P + __webpack_require__(263), 'Object', {\r\n\t  __lookupGetter__: function __lookupGetter__(P){\r\n\t    var O = toObject(this)\r\n\t      , K = toPrimitive(P, true)\r\n\t      , D;\r\n\t    do {\r\n\t      if(D = getOwnPropertyDescriptor(O, K))return D.get;\r\n\t    } while(O = getPrototypeOf(O));\r\n\t  }\r\n\t});\n\n/***/ },\n/* 266 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\tvar $export                  = __webpack_require__(8)\r\n\t  , toObject                 = __webpack_require__(58)\r\n\t  , toPrimitive              = __webpack_require__(16)\r\n\t  , getPrototypeOf           = __webpack_require__(59)\r\n\t  , getOwnPropertyDescriptor = __webpack_require__(51).f;\r\n\t\r\n\t// B.2.2.5 Object.prototype.__lookupSetter__(P)\r\n\t__webpack_require__(6) && $export($export.P + __webpack_require__(263), 'Object', {\r\n\t  __lookupSetter__: function __lookupSetter__(P){\r\n\t    var O = toObject(this)\r\n\t      , K = toPrimitive(P, true)\r\n\t      , D;\r\n\t    do {\r\n\t      if(D = getOwnPropertyDescriptor(O, K))return D.set;\r\n\t    } while(O = getPrototypeOf(O));\r\n\t  }\r\n\t});\n\n/***/ },\n/* 267 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar $export  = __webpack_require__(8);\n\t\n\t$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(268)('Map')});\n\n/***/ },\n/* 268 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar classof = __webpack_require__(75)\n\t  , from    = __webpack_require__(269);\n\tmodule.exports = function(NAME){\n\t  return function toJSON(){\n\t    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n\t    return from(this);\n\t  };\n\t};\n\n/***/ },\n/* 269 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar forOf = __webpack_require__(206);\n\t\n\tmodule.exports = function(iter, ITERATOR){\n\t  var result = [];\n\t  forOf(iter, false, result.push, result, ITERATOR);\n\t  return result;\n\t};\n\n\n/***/ },\n/* 270 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\tvar $export  = __webpack_require__(8);\n\t\n\t$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(268)('Set')});\n\n/***/ },\n/* 271 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/ljharb/proposal-global\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'System', {global: __webpack_require__(4)});\n\n/***/ },\n/* 272 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/ljharb/proposal-is-error\n\tvar $export = __webpack_require__(8)\n\t  , cof     = __webpack_require__(34);\n\t\n\t$export($export.S, 'Error', {\n\t  isError: function isError(it){\n\t    return cof(it) === 'Error';\n\t  }\n\t});\n\n/***/ },\n/* 273 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  iaddh: function iaddh(x0, x1, y0, y1){\n\t    var $x0 = x0 >>> 0\n\t      , $x1 = x1 >>> 0\n\t      , $y0 = y0 >>> 0;\n\t    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;\n\t  }\n\t});\n\n/***/ },\n/* 274 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  isubh: function isubh(x0, x1, y0, y1){\n\t    var $x0 = x0 >>> 0\n\t      , $x1 = x1 >>> 0\n\t      , $y0 = y0 >>> 0;\n\t    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;\n\t  }\n\t});\n\n/***/ },\n/* 275 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  imulh: function imulh(u, v){\n\t    var UINT16 = 0xffff\n\t      , $u = +u\n\t      , $v = +v\n\t      , u0 = $u & UINT16\n\t      , v0 = $v & UINT16\n\t      , u1 = $u >> 16\n\t      , v1 = $v >> 16\n\t      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n\t    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);\n\t  }\n\t});\n\n/***/ },\n/* 276 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S, 'Math', {\n\t  umulh: function umulh(u, v){\n\t    var UINT16 = 0xffff\n\t      , $u = +u\n\t      , $v = +v\n\t      , u0 = $u & UINT16\n\t      , v0 = $v & UINT16\n\t      , u1 = $u >>> 16\n\t      , v1 = $v >>> 16\n\t      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n\t    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);\n\t  }\n\t});\n\n/***/ },\n/* 277 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                  = __webpack_require__(278)\n\t  , anObject                  = __webpack_require__(12)\n\t  , toMetaKey                 = metadata.key\n\t  , ordinaryDefineOwnMetadata = metadata.set;\n\t\n\tmetadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){\n\t  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\n\t}});\n\n/***/ },\n/* 278 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Map     = __webpack_require__(211)\n\t  , $export = __webpack_require__(8)\n\t  , shared  = __webpack_require__(23)('metadata')\n\t  , store   = shared.store || (shared.store = new (__webpack_require__(215)));\n\t\n\tvar getOrCreateMetadataMap = function(target, targetKey, create){\n\t  var targetMetadata = store.get(target);\n\t  if(!targetMetadata){\n\t    if(!create)return undefined;\n\t    store.set(target, targetMetadata = new Map);\n\t  }\n\t  var keyMetadata = targetMetadata.get(targetKey);\n\t  if(!keyMetadata){\n\t    if(!create)return undefined;\n\t    targetMetadata.set(targetKey, keyMetadata = new Map);\n\t  } return keyMetadata;\n\t};\n\tvar ordinaryHasOwnMetadata = function(MetadataKey, O, P){\n\t  var metadataMap = getOrCreateMetadataMap(O, P, false);\n\t  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n\t};\n\tvar ordinaryGetOwnMetadata = function(MetadataKey, O, P){\n\t  var metadataMap = getOrCreateMetadataMap(O, P, false);\n\t  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n\t};\n\tvar ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){\n\t  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n\t};\n\tvar ordinaryOwnMetadataKeys = function(target, targetKey){\n\t  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)\n\t    , keys        = [];\n\t  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });\n\t  return keys;\n\t};\n\tvar toMetaKey = function(it){\n\t  return it === undefined || typeof it == 'symbol' ? it : String(it);\n\t};\n\tvar exp = function(O){\n\t  $export($export.S, 'Reflect', O);\n\t};\n\t\n\tmodule.exports = {\n\t  store: store,\n\t  map: getOrCreateMetadataMap,\n\t  has: ordinaryHasOwnMetadata,\n\t  get: ordinaryGetOwnMetadata,\n\t  set: ordinaryDefineOwnMetadata,\n\t  keys: ordinaryOwnMetadataKeys,\n\t  key: toMetaKey,\n\t  exp: exp\n\t};\n\n/***/ },\n/* 279 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(278)\n\t  , anObject               = __webpack_require__(12)\n\t  , toMetaKey              = metadata.key\n\t  , getOrCreateMetadataMap = metadata.map\n\t  , store                  = metadata.store;\n\t\n\tmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\n\t  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\n\t    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n\t  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\n\t  if(metadataMap.size)return true;\n\t  var targetMetadata = store.get(target);\n\t  targetMetadata['delete'](targetKey);\n\t  return !!targetMetadata.size || store['delete'](target);\n\t}});\n\n/***/ },\n/* 280 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(278)\n\t  , anObject               = __webpack_require__(12)\n\t  , getPrototypeOf         = __webpack_require__(59)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , ordinaryGetOwnMetadata = metadata.get\n\t  , toMetaKey              = metadata.key;\n\t\n\tvar ordinaryGetMetadata = function(MetadataKey, O, P){\n\t  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n\t  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);\n\t  var parent = getPrototypeOf(O);\n\t  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\n\t};\n\t\n\tmetadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 281 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Set                     = __webpack_require__(214)\n\t  , from                    = __webpack_require__(269)\n\t  , metadata                = __webpack_require__(278)\n\t  , anObject                = __webpack_require__(12)\n\t  , getPrototypeOf          = __webpack_require__(59)\n\t  , ordinaryOwnMetadataKeys = metadata.keys\n\t  , toMetaKey               = metadata.key;\n\t\n\tvar ordinaryMetadataKeys = function(O, P){\n\t  var oKeys  = ordinaryOwnMetadataKeys(O, P)\n\t    , parent = getPrototypeOf(O);\n\t  if(parent === null)return oKeys;\n\t  var pKeys  = ordinaryMetadataKeys(parent, P);\n\t  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n\t};\n\t\n\tmetadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){\n\t  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n\t}});\n\n/***/ },\n/* 282 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(278)\n\t  , anObject               = __webpack_require__(12)\n\t  , ordinaryGetOwnMetadata = metadata.get\n\t  , toMetaKey              = metadata.key;\n\t\n\tmetadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\n\t    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 283 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                = __webpack_require__(278)\n\t  , anObject                = __webpack_require__(12)\n\t  , ordinaryOwnMetadataKeys = metadata.keys\n\t  , toMetaKey               = metadata.key;\n\t\n\tmetadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){\n\t  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n\t}});\n\n/***/ },\n/* 284 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(278)\n\t  , anObject               = __webpack_require__(12)\n\t  , getPrototypeOf         = __webpack_require__(59)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , toMetaKey              = metadata.key;\n\t\n\tvar ordinaryHasMetadata = function(MetadataKey, O, P){\n\t  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n\t  if(hasOwn)return true;\n\t  var parent = getPrototypeOf(O);\n\t  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\n\t};\n\t\n\tmetadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 285 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata               = __webpack_require__(278)\n\t  , anObject               = __webpack_require__(12)\n\t  , ordinaryHasOwnMetadata = metadata.has\n\t  , toMetaKey              = metadata.key;\n\t\n\tmetadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){\n\t  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\n\t    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n\t}});\n\n/***/ },\n/* 286 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata                  = __webpack_require__(278)\n\t  , anObject                  = __webpack_require__(12)\n\t  , aFunction                 = __webpack_require__(21)\n\t  , toMetaKey                 = metadata.key\n\t  , ordinaryDefineOwnMetadata = metadata.set;\n\t\n\tmetadata.exp({metadata: function metadata(metadataKey, metadataValue){\n\t  return function decorator(target, targetKey){\n\t    ordinaryDefineOwnMetadata(\n\t      metadataKey, metadataValue,\n\t      (targetKey !== undefined ? anObject : aFunction)(target),\n\t      toMetaKey(targetKey)\n\t    );\n\t  };\n\t}});\n\n/***/ },\n/* 287 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask\r\n\tvar $export   = __webpack_require__(8)\r\n\t  , microtask = __webpack_require__(209)()\r\n\t  , process   = __webpack_require__(4).process\r\n\t  , isNode    = __webpack_require__(34)(process) == 'process';\r\n\t\r\n\t$export($export.G, {\r\n\t  asap: function asap(fn){\r\n\t    var domain = isNode && process.domain;\r\n\t    microtask(domain ? domain.bind(fn) : fn);\r\n\t  }\r\n\t});\n\n/***/ },\n/* 288 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t// https://github.com/zenparsing/es-observable\r\n\tvar $export     = __webpack_require__(8)\r\n\t  , global      = __webpack_require__(4)\r\n\t  , core        = __webpack_require__(9)\r\n\t  , microtask   = __webpack_require__(209)()\r\n\t  , OBSERVABLE  = __webpack_require__(25)('observable')\r\n\t  , aFunction   = __webpack_require__(21)\r\n\t  , anObject    = __webpack_require__(12)\r\n\t  , anInstance  = __webpack_require__(90)\r\n\t  , redefineAll = __webpack_require__(210)\r\n\t  , hide        = __webpack_require__(10)\r\n\t  , forOf       = __webpack_require__(206)\r\n\t  , RETURN      = forOf.RETURN;\r\n\t\r\n\tvar getMethod = function(fn){\r\n\t  return fn == null ? undefined : aFunction(fn);\r\n\t};\r\n\t\r\n\tvar cleanupSubscription = function(subscription){\r\n\t  var cleanup = subscription._c;\r\n\t  if(cleanup){\r\n\t    subscription._c = undefined;\r\n\t    cleanup();\r\n\t  }\r\n\t};\r\n\t\r\n\tvar subscriptionClosed = function(subscription){\r\n\t  return subscription._o === undefined;\r\n\t};\r\n\t\r\n\tvar closeSubscription = function(subscription){\r\n\t  if(!subscriptionClosed(subscription)){\r\n\t    subscription._o = undefined;\r\n\t    cleanupSubscription(subscription);\r\n\t  }\r\n\t};\r\n\t\r\n\tvar Subscription = function(observer, subscriber){\r\n\t  anObject(observer);\r\n\t  this._c = undefined;\r\n\t  this._o = observer;\r\n\t  observer = new SubscriptionObserver(this);\r\n\t  try {\r\n\t    var cleanup      = subscriber(observer)\r\n\t      , subscription = cleanup;\r\n\t    if(cleanup != null){\r\n\t      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };\r\n\t      else aFunction(cleanup);\r\n\t      this._c = cleanup;\r\n\t    }\r\n\t  } catch(e){\r\n\t    observer.error(e);\r\n\t    return;\r\n\t  } if(subscriptionClosed(this))cleanupSubscription(this);\r\n\t};\r\n\t\r\n\tSubscription.prototype = redefineAll({}, {\r\n\t  unsubscribe: function unsubscribe(){ closeSubscription(this); }\r\n\t});\r\n\t\r\n\tvar SubscriptionObserver = function(subscription){\r\n\t  this._s = subscription;\r\n\t};\r\n\t\r\n\tSubscriptionObserver.prototype = redefineAll({}, {\r\n\t  next: function next(value){\r\n\t    var subscription = this._s;\r\n\t    if(!subscriptionClosed(subscription)){\r\n\t      var observer = subscription._o;\r\n\t      try {\r\n\t        var m = getMethod(observer.next);\r\n\t        if(m)return m.call(observer, value);\r\n\t      } catch(e){\r\n\t        try {\r\n\t          closeSubscription(subscription);\r\n\t        } finally {\r\n\t          throw e;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  },\r\n\t  error: function error(value){\r\n\t    var subscription = this._s;\r\n\t    if(subscriptionClosed(subscription))throw value;\r\n\t    var observer = subscription._o;\r\n\t    subscription._o = undefined;\r\n\t    try {\r\n\t      var m = getMethod(observer.error);\r\n\t      if(!m)throw value;\r\n\t      value = m.call(observer, value);\r\n\t    } catch(e){\r\n\t      try {\r\n\t        cleanupSubscription(subscription);\r\n\t      } finally {\r\n\t        throw e;\r\n\t      }\r\n\t    } cleanupSubscription(subscription);\r\n\t    return value;\r\n\t  },\r\n\t  complete: function complete(value){\r\n\t    var subscription = this._s;\r\n\t    if(!subscriptionClosed(subscription)){\r\n\t      var observer = subscription._o;\r\n\t      subscription._o = undefined;\r\n\t      try {\r\n\t        var m = getMethod(observer.complete);\r\n\t        value = m ? m.call(observer, value) : undefined;\r\n\t      } catch(e){\r\n\t        try {\r\n\t          cleanupSubscription(subscription);\r\n\t        } finally {\r\n\t          throw e;\r\n\t        }\r\n\t      } cleanupSubscription(subscription);\r\n\t      return value;\r\n\t    }\r\n\t  }\r\n\t});\r\n\t\r\n\tvar $Observable = function Observable(subscriber){\r\n\t  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\r\n\t};\r\n\t\r\n\tredefineAll($Observable.prototype, {\r\n\t  subscribe: function subscribe(observer){\r\n\t    return new Subscription(observer, this._f);\r\n\t  },\r\n\t  forEach: function forEach(fn){\r\n\t    var that = this;\r\n\t    return new (core.Promise || global.Promise)(function(resolve, reject){\r\n\t      aFunction(fn);\r\n\t      var subscription = that.subscribe({\r\n\t        next : function(value){\r\n\t          try {\r\n\t            return fn(value);\r\n\t          } catch(e){\r\n\t            reject(e);\r\n\t            subscription.unsubscribe();\r\n\t          }\r\n\t        },\r\n\t        error: reject,\r\n\t        complete: resolve\r\n\t      });\r\n\t    });\r\n\t  }\r\n\t});\r\n\t\r\n\tredefineAll($Observable, {\r\n\t  from: function from(x){\r\n\t    var C = typeof this === 'function' ? this : $Observable;\r\n\t    var method = getMethod(anObject(x)[OBSERVABLE]);\r\n\t    if(method){\r\n\t      var observable = anObject(method.call(x));\r\n\t      return observable.constructor === C ? observable : new C(function(observer){\r\n\t        return observable.subscribe(observer);\r\n\t      });\r\n\t    }\r\n\t    return new C(function(observer){\r\n\t      var done = false;\r\n\t      microtask(function(){\r\n\t        if(!done){\r\n\t          try {\r\n\t            if(forOf(x, false, function(it){\r\n\t              observer.next(it);\r\n\t              if(done)return RETURN;\r\n\t            }) === RETURN)return;\r\n\t          } catch(e){\r\n\t            if(done)throw e;\r\n\t            observer.error(e);\r\n\t            return;\r\n\t          } observer.complete();\r\n\t        }\r\n\t      });\r\n\t      return function(){ done = true; };\r\n\t    });\r\n\t  },\r\n\t  of: function of(){\r\n\t    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];\r\n\t    return new (typeof this === 'function' ? this : $Observable)(function(observer){\r\n\t      var done = false;\r\n\t      microtask(function(){\r\n\t        if(!done){\r\n\t          for(var i = 0; i < items.length; ++i){\r\n\t            observer.next(items[i]);\r\n\t            if(done)return;\r\n\t          } observer.complete();\r\n\t        }\r\n\t      });\r\n\t      return function(){ done = true; };\r\n\t    });\r\n\t  }\r\n\t});\r\n\t\r\n\thide($Observable.prototype, OBSERVABLE, function(){ return this; });\r\n\t\r\n\t$export($export.G, {Observable: $Observable});\r\n\t\r\n\t__webpack_require__(193)('Observable');\n\n/***/ },\n/* 289 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// ie9- setTimeout & setInterval additional parameters fix\n\tvar global     = __webpack_require__(4)\n\t  , $export    = __webpack_require__(8)\n\t  , invoke     = __webpack_require__(78)\n\t  , partial    = __webpack_require__(290)\n\t  , navigator  = global.navigator\n\t  , MSIE       = !!navigator && /MSIE .\\./.test(navigator.userAgent); // <- dirty ie9- check\n\tvar wrap = function(set){\n\t  return MSIE ? function(fn, time /*, ...args */){\n\t    return set(invoke(\n\t      partial,\n\t      [].slice.call(arguments, 2),\n\t      typeof fn == 'function' ? fn : Function(fn)\n\t    ), time);\n\t  } : set;\n\t};\n\t$export($export.G + $export.B + $export.F * MSIE, {\n\t  setTimeout:  wrap(global.setTimeout),\n\t  setInterval: wrap(global.setInterval)\n\t});\n\n/***/ },\n/* 290 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar path      = __webpack_require__(291)\n\t  , invoke    = __webpack_require__(78)\n\t  , aFunction = __webpack_require__(21);\n\tmodule.exports = function(/* ...pargs */){\n\t  var fn     = aFunction(this)\n\t    , length = arguments.length\n\t    , pargs  = Array(length)\n\t    , i      = 0\n\t    , _      = path._\n\t    , holder = false;\n\t  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;\n\t  return function(/* ...args */){\n\t    var that = this\n\t      , aLen = arguments.length\n\t      , j = 0, k = 0, args;\n\t    if(!holder && !aLen)return invoke(fn, pargs, that);\n\t    args = pargs.slice();\n\t    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];\n\t    while(aLen > k)args.push(arguments[k++]);\n\t    return invoke(fn, args, that);\n\t  };\n\t};\n\n/***/ },\n/* 291 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4);\n\n/***/ },\n/* 292 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8)\n\t  , $task   = __webpack_require__(208);\n\t$export($export.G + $export.B, {\n\t  setImmediate:   $task.set,\n\t  clearImmediate: $task.clear\n\t});\n\n/***/ },\n/* 293 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $iterators    = __webpack_require__(194)\n\t  , redefine      = __webpack_require__(18)\n\t  , global        = __webpack_require__(4)\n\t  , hide          = __webpack_require__(10)\n\t  , Iterators     = __webpack_require__(130)\n\t  , wks           = __webpack_require__(25)\n\t  , ITERATOR      = wks('iterator')\n\t  , TO_STRING_TAG = wks('toStringTag')\n\t  , ArrayValues   = Iterators.Array;\n\t\n\tfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n\t  var NAME       = collections[i]\n\t    , Collection = global[NAME]\n\t    , proto      = Collection && Collection.prototype\n\t    , key;\n\t  if(proto){\n\t    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);\n\t    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n\t    Iterators[NAME] = ArrayValues;\n\t    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);\n\t  }\n\t}\n\n/***/ },\n/* 294 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var iteratorSymbol =\n\t    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided, then outerFn.prototype instanceof Generator.\n\t    var generator = Object.create((outerFn || Generator).prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `value instanceof AwaitArgument` to determine if the yielded value is\n\t  // meant to be awaited. Some may consider the name of this method too\n\t  // cutesy, but they are curmudgeons.\n\t  runtime.awrap = function(arg) {\n\t    return new AwaitArgument(arg);\n\t  };\n\t\n\t  function AwaitArgument(arg) {\n\t    this.arg = arg;\n\t  }\n\t\n\t  function AsyncIterator(generator) {\n\t    // This invoke function is written in a style that assumes some\n\t    // calling function (or Promise) will handle exceptions.\n\t    function invoke(method, arg) {\n\t      var result = generator[method](arg);\n\t      var value = result.value;\n\t      return value instanceof AwaitArgument\n\t        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n\t        : Promise.resolve(value).then(function(unwrapped) {\n\t            // When a yielded Promise is resolved, its final value becomes\n\t            // the .value of the Promise<{value,done}> result for the\n\t            // current iteration. If the Promise is rejected, however, the\n\t            // result for this iteration will be rejected with the same\n\t            // reason. Note that rejections of yielded Promises are not\n\t            // thrown back into the generator function, as is the case\n\t            // when an awaited Promise is rejected. This difference in\n\t            // behavior between yield and await is important, because it\n\t            // allows the consumer to decide what to do with the yielded\n\t            // rejection (swallow it and continue, manually .throw it back\n\t            // into the generator, abandon iteration, whatever). With\n\t            // await, by contrast, there is no opportunity to examine the\n\t            // rejection reason outside the generator function, so the\n\t            // only option is to throw it from the await expression, and\n\t            // let the generator function handle the exception.\n\t            result.value = unwrapped;\n\t            return result;\n\t          });\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var invokeNext = invoke.bind(generator, \"next\");\n\t    var invokeThrow = invoke.bind(generator, \"throw\");\n\t    var invokeReturn = invoke.bind(generator, \"return\");\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return invoke(method, arg);\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : new Promise(function (resolve) {\n\t          resolve(callInvokeWithMethodAndArg());\n\t        });\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          if (method === \"return\" ||\n\t              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n\t            // A return or throw (when the delegate iterator has no throw\n\t            // method) always terminates the yield* loop.\n\t            context.delegate = null;\n\t\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            var returnMethod = delegate.iterator[\"return\"];\n\t            if (returnMethod) {\n\t              var record = tryCatch(returnMethod, delegate.iterator, arg);\n\t              if (record.type === \"throw\") {\n\t                // If the return method threw an exception, let that\n\t                // exception prevail over the original return or throw.\n\t                method = \"throw\";\n\t                arg = record.arg;\n\t                continue;\n\t              }\n\t            }\n\t\n\t            if (method === \"return\") {\n\t              // Continue with the outer return, now that the delegate\n\t              // iterator has been terminated.\n\t              continue;\n\t            }\n\t          }\n\t\n\t          var record = tryCatch(\n\t            delegate.iterator[method],\n\t            delegate.iterator,\n\t            arg\n\t          );\n\t\n\t          if (record.type === \"throw\") {\n\t            context.delegate = null;\n\t\n\t            // Like returning generator.throw(uncaught), but without the\n\t            // overhead of an extra function call.\n\t            method = \"throw\";\n\t            arg = record.arg;\n\t            continue;\n\t          }\n\t\n\t          // Delegate generator ran and handled its own exceptions so\n\t          // regardless of what the method was, we continue as if it is\n\t          // \"next\" with an undefined arg.\n\t          method = \"next\";\n\t          arg = undefined;\n\t\n\t          var info = record.arg;\n\t          if (info.done) {\n\t            context[delegate.resultName] = info.value;\n\t            context.next = delegate.nextLoc;\n\t          } else {\n\t            state = GenStateSuspendedYield;\n\t            return info;\n\t          }\n\t\n\t          context.delegate = null;\n\t        }\n\t\n\t        if (method === \"next\") {\n\t          context._sent = arg;\n\t\n\t          if (state === GenStateSuspendedYield) {\n\t            context.sent = arg;\n\t          } else {\n\t            context.sent = undefined;\n\t          }\n\t        } else if (method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw arg;\n\t          }\n\t\n\t          if (context.dispatchException(arg)) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            method = \"next\";\n\t            arg = undefined;\n\t          }\n\t\n\t        } else if (method === \"return\") {\n\t          context.abrupt(\"return\", arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          var info = {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            if (context.delegate && method === \"next\") {\n\t              // Deliberately forget the last sent value so that we don't\n\t              // accidentally pass it on to the delegate.\n\t              arg = undefined;\n\t            }\n\t          } else {\n\t            return info;\n\t          }\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(arg) call above.\n\t          method = \"throw\";\n\t          arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      this.sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t        return !!caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.next = finallyEntry.finallyLoc;\n\t      } else {\n\t        this.complete(record);\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = record.arg;\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(295)))\n\n/***/ },\n/* 295 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 296 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(297);\n\tmodule.exports = __webpack_require__(9).RegExp.escape;\n\n/***/ },\n/* 297 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://github.com/benjamingr/RexExp.escape\n\tvar $export = __webpack_require__(8)\n\t  , $re     = __webpack_require__(298)(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\n\t$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});\n\n\n/***/ },\n/* 298 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(regExp, replace){\n\t  var replacer = replace === Object(replace) ? function(part){\n\t    return replace[part];\n\t  } : replace;\n\t  return function(it){\n\t    return String(it).replace(regExp, replacer);\n\t  };\n\t};\n\n/***/ },\n/* 299 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '75' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t//\r\n\t\r\n\tif ( Number.EPSILON === undefined ) {\r\n\t\r\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\t\r\n\t}\r\n\t\r\n\t//\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Object.assign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\t\r\n\t\tObject.defineProperty( Object, 'assign', {\r\n\t\r\n\t\t\twritable: true,\r\n\t\t\tconfigurable: true,\r\n\t\r\n\t\t\tvalue: function ( target ) {\r\n\t\r\n\t\t\t\t'use strict';\r\n\t\r\n\t\t\t\tif ( target === undefined || target === null ) {\r\n\t\r\n\t\t\t\t\tthrow new TypeError( \"Cannot convert first argument to object\" );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar to = Object( target );\r\n\t\r\n\t\t\t\tfor ( var i = 1, n = arguments.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar nextSource = arguments[ i ];\r\n\t\r\n\t\t\t\t\tif ( nextSource === undefined || nextSource === null ) continue;\r\n\t\r\n\t\t\t\t\tnextSource = Object( nextSource );\r\n\t\r\n\t\t\t\t\tvar keysArray = Object.keys( nextSource );\r\n\t\r\n\t\t\t\t\tfor ( var nextIndex = 0, len = keysArray.length; nextIndex !== len; ++ nextIndex ) {\r\n\t\r\n\t\t\t\t\t\tvar nextKey = keysArray[ nextIndex ];\r\n\t\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor( nextSource, nextKey );\r\n\t\r\n\t\t\t\t\t\tif ( desc !== undefined && desc.enumerable ) {\r\n\t\r\n\t\t\t\t\t\t\tto[ nextKey ] = nextSource[ nextKey ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn to;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Tone Mapping modes\r\n\t\r\n\tTHREE.NoToneMapping = 0; // do not do any tone mapping, not even exposure (required for special purpose passes.)\r\n\tTHREE.LinearToneMapping = 1; // only apply exposure.\r\n\tTHREE.ReinhardToneMapping = 2;\r\n\tTHREE.Uncharted2ToneMapping = 3; // John Hable\r\n\tTHREE.CineonToneMapping = 4;  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\tTHREE.CubeUVReflectionMapping = 306;\r\n\tTHREE.CubeUVRefractionMapping = 307;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t// ETC compressed texture formats\r\n\t\r\n\tTHREE.RGB_ETC1_Format = 2151;\r\n\t\r\n\t// Loop styles for AnimationAction\r\n\t\r\n\tTHREE.LoopOnce = 2200;\r\n\tTHREE.LoopRepeat = 2201;\r\n\tTHREE.LoopPingPong = 2202;\r\n\t\r\n\t// Interpolation\r\n\t\r\n\tTHREE.InterpolateDiscrete = 2300;\r\n\tTHREE.InterpolateLinear = 2301;\r\n\tTHREE.InterpolateSmooth = 2302;\r\n\t\r\n\t// Interpolant ending modes\r\n\t\r\n\tTHREE.ZeroCurvatureEnding = 2400;\r\n\tTHREE.ZeroSlopeEnding = 2401;\r\n\tTHREE.WrapAroundEnding = 2402;\r\n\t\r\n\t// Triangle Draw modes\r\n\t\r\n\tTHREE.TrianglesDrawMode = 0;\r\n\tTHREE.TriangleStripDrawMode = 1;\r\n\tTHREE.TriangleFanDrawMode = 2;\r\n\t\r\n\t// Texture Encodings\r\n\t\r\n\tTHREE.LinearEncoding = 3000; // No encoding at all.\r\n\tTHREE.sRGBEncoding = 3001;\r\n\tTHREE.GammaEncoding = 3007; // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\r\n\t\r\n\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\r\n\t// These encodings should not specified as output encodings except in rare situations.\r\n\tTHREE.RGBEEncoding = 3002; // AKA Radiance.\r\n\tTHREE.LogLuvEncoding = 3003;\r\n\tTHREE.RGBM7Encoding = 3004;\r\n\tTHREE.RGBM16Encoding = 3005;\r\n\tTHREE.RGBDEncoding = 3006; // MaxRange is 256.\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.fromArray( arguments );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tfunction handleAlpha( string ) {\r\n\t\r\n\t\t\t\tif ( string === undefined ) return;\r\n\t\r\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.r = array[ offset ];\r\n\t\t\tthis.g = array[ offset + 1 ];\r\n\t\t\tthis.b = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tObject.assign( THREE.Quaternion, {\r\n\t\r\n\t\tslerp: function( qa, qb, qm, t ) {\r\n\t\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerpFlat: function(\r\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\t\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\t\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\t\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\t\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\t\r\n\t\t\t\tvar s = 1 - t,\r\n\t\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\t\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\t\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar tDir = t * dir;\r\n\t\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\t\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\t\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\t\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tget width() {\r\n\t\r\n\t\t\treturn this.x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset width( value ) {\r\n\t\r\n\t\t\tthis.x = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget height() {\r\n\t\r\n\t\t\treturn this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset height( value ) {\r\n\t\r\n\t\t\tthis.y = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclampLength: function ( min, max ) {\r\n\t\r\n\t\t\tvar length = this.length();\r\n\t\r\n\t\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tangle: function () {\r\n\t\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\t\r\n\t\t\tvar angle = Math.atan2( this.y, this.x );\r\n\t\r\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\t\r\n\t\t\treturn angle;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateAround: function ( center, angle ) {\r\n\t\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\t\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\t\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclampLength: function ( min, max ) {\r\n\t\r\n\t\t\tvar length = this.length();\r\n\t\r\n\t\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromSpherical: function( s ) {\r\n\t\r\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\t\r\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( m, index ) {\r\n\t\r\n\t\t\tif ( typeof m === 'number' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\r\n\t\r\n\t\t\t\tm = arguments[ 1 ];\r\n\t\t\t\tindex = arguments[ 0 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.fromArray( m.elements, index * 4 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\t\t\tthis.z *= scalar;\r\n\t\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\t\tthis.w = Math.min( this.w, v.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\t\tthis.w = Math.max( this.w, v.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisEmpty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\t\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tvar x = array[ i ];\r\n\t\t\t\tvar y = array[ i + 1 ];\r\n\t\t\t\tvar z = array[ i + 2 ];\r\n\t\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\t\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar box;\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tif ( box === undefined ) box = new THREE.Box3();\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\t\t\tgeometry.computeBoundingBox();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( geometry.boundingBox.isEmpty() === false ) {\r\n\t\r\n\t\t\t\t\t\t\tbox.copy( geometry.boundingBox );\r\n\t\t\t\t\t\t\tbox.applyMatrix4( node.matrixWorld );\r\n\t\t\t\t\t\t\tscope.union( box );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisEmpty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: ( function () {\r\n\t\r\n\t\t\tvar closestPoint;\r\n\t\r\n\t\t\treturn function intersectsSphere( sphere ) {\r\n\t\r\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\t\r\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tintersectsPlane: function ( plane ) {\r\n\t\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\tif ( plane.normal.x > 0 ) {\r\n\t\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( plane.normal.y > 0 ) {\r\n\t\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( plane.normal.z > 0 ) {\r\n\t\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix4: function( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\r\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\r\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\t\r\n\t\t\tif ( matrix instanceof THREE.Matrix4 ) {\r\n\t\r\n\t\t\t\tconsole.warn( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar me = matrix.elements,\r\n\t\t\t\tte = this.elements,\r\n\t\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\t\r\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\t\r\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnDegenerate || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this.identity();\r\n\t\t\t}\r\n\t\r\n\t\t\tte[ 0 ] = t11;\r\n\t\t\tte[ 1 ] = n31 * n23 - n33 * n21;\r\n\t\t\tte[ 2 ] = n32 * n21 - n31 * n22;\r\n\t\r\n\t\t\tte[ 3 ] = t12;\r\n\t\t\tte[ 4 ] = n33 * n11 - n31 * n13;\r\n\t\t\tte[ 5 ] = n31 * n12 - n32 * n11;\r\n\t\r\n\t\t\tte[ 6 ] = t13;\r\n\t\t\tte[ 7 ] = n21 * n13 - n23 * n11;\r\n\t\t\tte[ 8 ] = n22 * n11 - n21 * n12;\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / det );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( matrix4 ) {\r\n\t\r\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.lengthSq() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.lengthSq() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements,\r\n\t\t\t\tme = m.elements,\r\n\t\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\t\r\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\r\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnDegenerate || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this.identity();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tte[ 0 ] = t11;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\r\n\t\t\tte[ 4 ] = t12;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\r\n\t\t\tte[ 8 ] = t13;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\r\n\t\t\tte[ 12 ] = t14;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / det );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = 1.0 / ( right - left );\r\n\t\t\tvar h = 1.0 / ( top - bottom );\r\n\t\t\tvar p = 1.0 / ( far - near );\r\n\t\r\n\t\t\tvar x = ( right + left ) * w;\r\n\t\t\tvar y = ( top + bottom ) * h;\r\n\t\t\tvar z = ( far + near ) * p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function ( v ) {\r\n\t\r\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\tintersectsPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: ( function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function ( box ) {\r\n\t\r\n\t\t\treturn box.intersectsSphere( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsPlane: function ( plane ) {\r\n\t\r\n\t\t\t// We use the following equation to compute the signed distance from\r\n\t\t\t// the center of the sphere to the plane.\r\n\t\t\t//\r\n\t\t\t// distance = q * n - d\r\n\t\t\t//\r\n\t\t\t// If this distance is greater than the radius of the sphere,\r\n\t\t\t// then there is no intersection.\r\n\t\r\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function ( box ) {\r\n\t\r\n\t\t\treturn box.intersectsPlane( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.intersectsPlane( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spherical.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The poles (phi) are at the positive and negative y axis.\r\n\t * The equator starts at positive z.\r\n\t */\r\n\t\r\n\tTHREE.Spherical = function ( radius, phi, theta ) {\r\n\t\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Spherical.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Spherical,\r\n\t\r\n\t\tset: function ( radius, phi, theta ) {\r\n\t\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( other ) {\r\n\t\r\n\t\t\tthis.radius.copy( other.radius );\r\n\t\t\tthis.phi.copy( other.phi );\r\n\t\t\tthis.theta.copy( other.theta );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// restrict phi to be betwee EPS and PI-EPS\r\n\t\tmakeSafe: function() {\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromVector3: function( vec3 ) {\r\n\t\r\n\t\t\tthis.radius = vec3.length();\r\n\t\r\n\t\t\tif ( this.radius === 0 ) {\r\n\t\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\r\n\t\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclamp: function ( value, min, max ) {\r\n\t\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\r\n\t\t\treturn Math.random();\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnearestPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Interpolant.js\r\n\t\r\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.Interpolant = function(\r\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\t\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\t\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Interpolant.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Interpolant,\r\n\t\r\n\t\tevaluate: function( t ) {\r\n\t\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\ti1 = this._cachedIndex,\r\n\t\r\n\t\t\t\tt1 = pp[   i1   ],\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\t\r\n\t\t\tvalidate_interval: {\r\n\t\r\n\t\t\t\tseek: {\r\n\t\r\n\t\t\t\t\tvar right;\r\n\t\r\n\t\t\t\t\tlinear_scan: {\r\n\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t//- slower code:\r\n\t//-\r\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\t\r\n\t\t\t\t\t\t\t\t\t// after end\r\n\t\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\t\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t//- slower code:\r\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// looping?\r\n\t\r\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\t\r\n\t\t\t\t\t\t\tif ( t < t1global ) {\r\n\t\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// linear reverse scan\r\n\t\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\t\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\t\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// the interval is valid\r\n\t\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\t\r\n\t\t\t\t\t} // linear scan\r\n\t\r\n\t\t\t\t\t// binary search\r\n\t\r\n\t\t\t\t\twhile ( i1 < right ) {\r\n\t\r\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\t\r\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\t\r\n\t\t\t\t\t\t\tright = mid;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tt1 = pp[   i1   ];\r\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\t\r\n\t\t\t\t\t// check boundary cases, again\r\n\t\r\n\t\t\t\t\tif ( t0 === undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( t1 === undefined ) {\r\n\t\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} // seek\r\n\t\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\t\r\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\t\r\n\t\t\t} // validate_interval\r\n\t\r\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsettings: null, // optional, subclass-specific settings structure\r\n\t\t// Note: The indirection allows central control of many interpolants.\r\n\t\r\n\t\t// --- Protected interface\r\n\t\r\n\t\tDefaultSettings_: {},\r\n\t\r\n\t\tgetSettings_: function() {\r\n\t\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopySampleValue_: function( index ) {\r\n\t\r\n\t\t\t// copies a sample value to the result buffer\r\n\t\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = index * stride;\r\n\t\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\tresult[ i ] = values[ offset + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Template methods for derived classes:\r\n\t\r\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\t\r\n\t\t\tthrow new Error( \"call to abstract method\" );\r\n\t\t\t// implementations shall return this.resultBuffer\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintervalChanged_: function( i1, t0, t1 ) {\r\n\t\r\n\t\t\t// empty\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tObject.assign( THREE.Interpolant.prototype, {\r\n\t\r\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\r\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_,\r\n\t\r\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/math/interpolants/CubicInterpolant.js\r\n\t\r\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.CubicInterpolant = function(\r\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\t\r\n\t\tTHREE.Interpolant.call(\r\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\t\r\n\t\tthis._weightPrev = -0;\r\n\t\tthis._offsetPrev = -0;\r\n\t\tthis._weightNext = -0;\r\n\t\tthis._offsetNext = -0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicInterpolant.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.CubicInterpolant,\r\n\t\r\n\t\tDefaultSettings_: {\r\n\t\r\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintervalChanged_: function( i1, t0, t1 ) {\r\n\t\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\tiPrev = i1 - 2,\r\n\t\t\t\tiNext = i1 + 1,\r\n\t\r\n\t\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\t\ttNext = pp[ iNext ];\r\n\t\r\n\t\t\tif ( tPrev === undefined ) {\r\n\t\r\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\t\r\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\t\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.WrapAroundEnding:\r\n\t\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\t\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tNext === undefined ) {\r\n\t\r\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\t\r\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\t\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.WrapAroundEnding:\r\n\t\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\t\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\t\tstride = this.valueSize;\r\n\t\r\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\t\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\r\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\t\r\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tpp = p * p,\r\n\t\t\t\tppp = pp * p;\r\n\t\r\n\t\t\t// evaluate polynomials\r\n\t\r\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\r\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\r\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\r\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\r\n\t\r\n\t\t\t// combine data linearly\r\n\t\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\t\tsN * values[ oN + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/math/interpolants/DiscreteInterpolant.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.DiscreteInterpolant = function(\r\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\t\r\n\t\tTHREE.Interpolant.call(\r\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DiscreteInterpolant.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.DiscreteInterpolant,\r\n\t\r\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\t\r\n\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/math/interpolants/LinearInterpolant.js\r\n\t\r\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.LinearInterpolant = function(\r\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\t\r\n\t\tTHREE.Interpolant.call(\r\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LinearInterpolant.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.LinearInterpolant,\r\n\t\r\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\t\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\r\n\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\toffset0 = offset1 - stride,\r\n\t\r\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tweight0 = 1 - weight1;\r\n\t\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/math/interpolants/QuaternionLinearInterpolant.js\r\n\t\r\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.QuaternionLinearInterpolant = function(\r\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\t\r\n\t\tTHREE.Interpolant.call(\r\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionLinearInterpolant.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.QuaternionLinearInterpolant,\r\n\t\r\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\t\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\r\n\t\t\t\toffset = i1 * stride,\r\n\t\r\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\t\r\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\t\r\n\t\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\r\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = performance.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = performance.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Layers.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Layers = function () {\r\n\t\r\n\t\tthis.mask = 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Layers.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Layers,\r\n\t\r\n\t\tset: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask = 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tenable: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask |= 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoggle: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask ^= 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisable: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask &= ~ ( 1 << channel );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttest: function ( layers ) {\r\n\t\r\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://clara.io/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction ascSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( ascSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( ascSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tfunction onRotationChange() {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onQuaternionChange() {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t}\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.layers = new THREE.Layers();\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tvar object = {};\r\n\t\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t\tif ( this.visible === false ) object.visible = false;\r\n\t\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( this.geometry !== undefined ) {\r\n\t\r\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.geometry = this.geometry.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.material !== undefined ) {\r\n\t\r\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.material = this.material.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tobject.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = object;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar positions = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\t\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsortFacesByMaterialIndex: function () {\r\n\t\r\n\t\t\tvar faces = this.faces;\r\n\t\t\tvar length = faces.length;\r\n\t\r\n\t\t\t// tag faces\r\n\t\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tfaces[ i ]._id = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// sort faces\r\n\t\r\n\t\t\tfunction materialIndexSort( a, b ) {\r\n\t\r\n\t\t\t\treturn a.materialIndex - b.materialIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfaces.sort( materialIndexSort );\r\n\t\r\n\t\t\t// sort uvs\r\n\t\r\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\t\r\n\t\t\tvar newUvs1, newUvs2;\r\n\t\r\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar id = faces[ i ]._id;\r\n\t\r\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = true;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\t/*\r\n\t\t\t// Handle primitives\r\n\t\r\n\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tvalues.push( parameters[ key ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\t\treturn geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\t\t*/\r\n\t\r\n\t\t\treturn new THREE.Geometry().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tvar morphTargetsPosition;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tmorphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tvar morphTargetsNormal;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tmorphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvsNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.uv;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.setFromArray( positions );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tbox.setFromArray( positions );\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar array = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tarray[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoNonIndexed: function () {\r\n\t\r\n\t\t\tif ( this.index === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar geometry2 = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar indices = this.index.array;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\r\n\t\t\t\tvar array = attribute.array;\r\n\t\t\t\tvar itemSize = attribute.itemSize;\r\n\t\r\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\t\r\n\t\t\t\tvar index = 0, index2 = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\t/*\r\n\t\t\t// Handle primitives\r\n\t\r\n\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tvalues.push( parameters[ key ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\t\treturn geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\t\t*/\r\n\t\r\n\t\t\treturn new THREE.BufferGeometry().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/core/Uniform.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Uniform = function ( type, value ) {\r\n\t\r\n\t\tthis.type = type;\r\n\t\tthis.value = value;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uniform.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Uniform,\r\n\t\r\n\t\tonUpdate: function ( callback ) {\r\n\t\r\n\t\t\tthis.dynamic = true;\r\n\t\t\tthis.onUpdateCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/AnimationClip.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Reusable set of Tracks that represent an animation.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\t\r\n\t\tthis.name = name || THREE.Math.generateUUID();\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\t\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\t\r\n\t\t\tthis.resetDuration();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\t\tthis.trim();\r\n\t\tthis.optimize();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationClip.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationClip,\r\n\t\r\n\t\tresetDuration: function() {\r\n\t\r\n\t\t\tvar tracks = this.tracks,\r\n\t\t\t\tduration = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar track = this.tracks[ i ];\r\n\t\r\n\t\t\t\tduration = Math.max(\r\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.duration = duration;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttrim: function() {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\toptimize: function() {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.tracks[ i ].optimize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// Static methods:\r\n\t\r\n\tObject.assign( THREE.AnimationClip, {\r\n\t\r\n\t\tparse: function( json ) {\r\n\t\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\t\r\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\ttoJSON: function( clip ) {\r\n\t\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tclipTracks = clip.tracks;\r\n\t\r\n\t\t\tvar json = {\r\n\t\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn json;\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps ) {\r\n\t\r\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\t\tvar tracks = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\ttimes.push(\r\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\t\r\n\t\t\t\tvalues.push( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\r\n\t\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\r\n\t\r\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\t\t\t\tif ( times[ 0 ] === 0 ) {\r\n\t\r\n\t\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\t\tvalues.push( values[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttracks.push(\r\n\t\t\t\t\t\tnew THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\t\t\t}\r\n\t\r\n\t\t\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfindByName: function( clipArray, name ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( clipArray[ i ].name === name ) {\r\n\t\r\n\t\t\t\t\treturn clipArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps ) {\r\n\t\r\n\t\t\tvar animationToMorphTargets = {};\r\n\t\r\n\t\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\t\r\n\t\t\t// sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\t\r\n\t\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\t\tvar name = parts[ 1 ];\r\n\t\r\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\t\tif ( ! animationMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar clips = [];\r\n\t\r\n\t\t\tfor ( var name in animationToMorphTargets ) {\r\n\t\r\n\t\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn clips;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// parse the animation.hierarchy format\r\n\t\tparseAnimation: function( animation, bones, nodeName ) {\r\n\t\r\n\t\t\tif ( ! animation ) {\r\n\t\r\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addNonemptyTrack = function(\r\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\t\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif ( animationKeys.length !== 0 ) {\r\n\t\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\t\tTHREE.AnimationUtils.flattenJSON(\r\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\r\n\t\r\n\t\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\t\tif ( times.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar tracks = [];\r\n\t\r\n\t\t\tvar clipName = animation.name || 'default';\r\n\t\t\t// automatic length determination in AnimationClip.\r\n\t\t\tvar duration = animation.length || -1;\r\n\t\t\tvar fps = animation.fps || 30;\r\n\t\r\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\t\r\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\t\r\n\t\t\t\t// skip empty tracks\r\n\t\t\t\tif ( ! animationKeys || animationKeys.length == 0 ) continue;\r\n\t\r\n\t\t\t\t// process morph targets in a way exactly compatible\r\n\t\t\t\t// with AnimationHandler.init( animation )\r\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\r\n\t\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tvar morphTargetNames = {};\r\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\t\r\n\t\t\t\t\t\tvar times = [];\r\n\t\t\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0;\r\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\r\n\t\r\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\t\r\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 )\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\t\r\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\t\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\t\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\t\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tracks.length === 0 ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\t\r\n\t\t\treturn clip;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t\r\n\t// File:src/animation/AnimationMixer.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Player for AnimationClips.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.AnimationMixer = function( root ) {\r\n\t\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\t\r\n\t\tthis.time = 0;\r\n\t\r\n\t\tthis.timeScale = 1.0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationMixer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationMixer,\r\n\t\r\n\t\t// return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\t\tclipAction: function( clip, optionalRoot ) {\r\n\t\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tclipName = ( typeof clip === 'string' ) ? clip : clip.name,\r\n\t\t\t\tclipObject = ( clip !== clipName ) ? clip : null,\r\n\t\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipName ],\r\n\t\t\t\tprototypeAction;\r\n\t\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\t\r\n\t\t\t\tvar existingAction =\r\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\t\r\n\t\t\t\tif ( existingAction !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn existingAction;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\t\r\n\t\t\t\t// also, take the clip from the prototype action\r\n\t\t\t\tclipObject = prototypeAction._clip;\r\n\t\r\n\t\t\t\tif ( clip !== clipName && clip !== clipObject ) {\r\n\t\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t\"Different clips with the same name detected!\" );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clip must be known when specified via string\r\n\t\t\tif ( clipObject === null ) return null;\r\n\t\r\n\t\t\t// allocate all resources required to run it\r\n\t\t\tvar newAction = new THREE.\r\n\t\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\r\n\t\r\n\t\t\tthis._bindAction( newAction, prototypeAction );\r\n\t\r\n\t\t\t// and make the action known to the memory manager\r\n\t\t\tthis._addInactiveAction( newAction, clipName, rootUuid );\r\n\t\r\n\t\t\treturn newAction;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// get an existing action\r\n\t\texistingAction: function( clip, optionalRoot ) {\r\n\t\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tclipName = ( typeof clip === 'string' ) ? clip : clip.name,\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipName ];\r\n\t\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\t\r\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// deactivates all previously scheduled actions\r\n\t\tstopAllAction: function() {\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\t\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._nActiveBindings = 0;\r\n\t\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\t\r\n\t\t\t\tactions[ i ].reset();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\t\r\n\t\t\t\tbindings[ i ].useCount = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// advance the time and update apply the animation\r\n\t\tupdate: function( deltaTime ) {\r\n\t\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\t\r\n\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\t\r\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\t\r\n\t\t\t// run active actions\r\n\t\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\t\r\n\t\t\t\tvar action = actions[ i ];\r\n\t\r\n\t\t\t\tif ( action.enabled ) {\r\n\t\r\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\t\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\t\r\n\t\t\t\tbindings[ i ].apply( accuIndex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// return this mixer's root target object\r\n\t\tgetRoot: function() {\r\n\t\r\n\t\t\treturn this._root;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// free all resources specific to a particular clip\r\n\t\tuncacheClip: function( clip ) {\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tclipName = clip.name,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipName ];\r\n\t\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\t\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\t\r\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar action = actionsToRemove[ i ];\r\n\t\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\t\r\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\t\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\t\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\t\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdelete actionsByClip[ clipName ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// free all resources specific to a particular root target object\r\n\t\tuncacheRoot: function( root ) {\r\n\t\r\n\t\t\tvar rootUuid = root.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip;\r\n\t\r\n\t\t\tfor ( var clipName in actionsByClip ) {\r\n\t\r\n\t\t\t\tvar actionByRoot = actionsByClip[ clipName ].actionByRoot,\r\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\t\r\n\t\t\t\tif ( action !== undefined ) {\r\n\t\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\t\tthis._removeInactiveAction( action );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\t\r\n\t\t\tif ( bindingByName !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var trackName in bindingByName ) {\r\n\t\r\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// remove a targeted clip from the cache\r\n\t\tuncacheAction: function( clip, optionalRoot ) {\r\n\t\r\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\t\r\n\t\t\tif ( action !== null ) {\r\n\t\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.AnimationMixer.prototype );\r\n\t\r\n\tTHREE.AnimationMixer._Action =\r\n\t\t\tfunction( mixer, clip, localRoot ) {\r\n\t\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot || null;\r\n\t\r\n\t\tvar tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\t\r\n\t\tvar interpolantSettings = {\r\n\t\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\t\t};\r\n\t\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\t\r\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\t\r\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\t\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\t\r\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\t\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\t\r\n\t\tthis.loop = THREE.LoopRepeat;\r\n\t\tthis._loopCount = -1;\r\n\t\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\t\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\t\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\t\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\t\r\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\t\r\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\r\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\r\n\t\r\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\t\r\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationMixer._Action.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationMixer._Action,\r\n\t\r\n\t\t// State & Scheduling\r\n\t\r\n\t\tplay: function() {\r\n\t\r\n\t\t\tthis._mixer._activateAction( this );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis._mixer._deactivateAction( this );\r\n\t\r\n\t\t\treturn this.reset();\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function() {\r\n\t\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\t\r\n\t\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\t\tthis._loopCount = -1;\t// forget previous loops\r\n\t\t\tthis._startTime = null;\t// forget scheduling\r\n\t\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisRunning: function() {\r\n\t\r\n\t\t\tvar start = this._startTime;\r\n\t\r\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// return true when play has been called\r\n\t\tisScheduled: function() {\r\n\t\r\n\t\t\treturn this._mixer._isActiveAction( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstartAt: function( time ) {\r\n\t\r\n\t\t\tthis._startTime = time;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLoop: function( mode, repetitions ) {\r\n\t\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Weight\r\n\t\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\t\tsetEffectiveWeight: function( weight ) {\r\n\t\r\n\t\t\tthis.weight = weight;\r\n\t\r\n\t\t\t// note: same logic as when updated at runtime\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\t\r\n\t\t\treturn this.stopFading();\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// return the weight considering fading and .enabled\r\n\t\tgetEffectiveWeight: function() {\r\n\t\r\n\t\t\treturn this._effectiveWeight;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfadeIn: function( duration ) {\r\n\t\r\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfadeOut: function( duration ) {\r\n\t\r\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\r\n\t\r\n\t\t\tvar mixer = this._mixer;\r\n\t\r\n\t\t\tfadeOutAction.fadeOut( duration );\r\n\t\t\tthis.fadeIn( duration );\r\n\t\r\n\t\t\tif( warp ) {\r\n\t\r\n\t\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\t\r\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\t\r\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\r\n\t\r\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstopFading: function() {\r\n\t\r\n\t\t\tvar weightInterpolant = this._weightInterpolant;\r\n\t\r\n\t\t\tif ( weightInterpolant !== null ) {\r\n\t\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Time Scale Control\r\n\t\r\n\t\t// set the weight stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\t\tsetEffectiveTimeScale: function( timeScale ) {\r\n\t\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\r\n\t\r\n\t\t\treturn this.stopWarping();\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// return the time scale considering warping and .paused\r\n\t\tgetEffectiveTimeScale: function() {\r\n\t\r\n\t\t\treturn this._effectiveTimeScale;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDuration: function( duration ) {\r\n\t\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\t\r\n\t\t\treturn this.stopWarping();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsyncWith: function( action ) {\r\n\t\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\t\r\n\t\t\treturn this.stopWarping();\r\n\t\r\n\t\t},\r\n\t\r\n\t\thalt: function( duration ) {\r\n\t\r\n\t\t\treturn this.warp( this._currentTimeScale, 0, duration );\r\n\t\r\n\t\t},\r\n\t\r\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\r\n\t\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\t\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\t\r\n\t\t\tif ( interpolant === null ) {\r\n\t\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\r\n\t\t\ttimes[ 0 ] = now;\r\n\t\t\ttimes[ 1 ] = now + duration;\r\n\t\r\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstopWarping: function() {\r\n\t\r\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\t\r\n\t\t\tif ( timeScaleInterpolant !== null ) {\r\n\t\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Object Accessors\r\n\t\r\n\t\tgetMixer: function() {\r\n\t\r\n\t\t\treturn this._mixer;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetClip: function() {\r\n\t\r\n\t\t\treturn this._clip;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetRoot: function() {\r\n\t\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Interna\r\n\t\r\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\r\n\t\t\t// called by the mixer\r\n\t\r\n\t\t\tvar startTime = this._startTime;\r\n\t\r\n\t\t\tif ( startTime !== null ) {\r\n\t\r\n\t\t\t\t// check for scheduled start of action\r\n\t\r\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\t\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// start\r\n\t\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// apply time scale and advance time\r\n\t\r\n\t\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\t\tvar clipTime = this._updateTime( deltaTime );\r\n\t\r\n\t\t\t// note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\t\r\n\t\t\tvar weight = this._updateWeight( time );\r\n\t\r\n\t\t\tif ( weight > 0 ) {\r\n\t\r\n\t\t\t\tvar interpolants = this._interpolants;\r\n\t\t\t\tvar propertyMixers = this._propertyBindings;\r\n\t\r\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_updateWeight: function( time ) {\r\n\t\r\n\t\t\tvar weight = 0;\r\n\t\r\n\t\t\tif ( this.enabled ) {\r\n\t\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tvar interpolant = this._weightInterpolant;\r\n\t\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\t\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\t\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\t\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\t\r\n\t\t\t\t\t\tthis.stopFading();\r\n\t\r\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_updateTimeScale: function( time ) {\r\n\t\r\n\t\t\tvar timeScale = 0;\r\n\t\r\n\t\t\tif ( ! this.paused ) {\r\n\t\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\t\r\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\t\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\t\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\t\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\t\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\t\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\t\r\n\t\t\t\t\t\tif ( timeScale === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.pause = true;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_updateTime: function( deltaTime ) {\r\n\t\r\n\t\t\tvar time = this.time + deltaTime;\r\n\t\r\n\t\t\tif ( deltaTime === 0 ) return time;\r\n\t\r\n\t\t\tvar duration = this._clip.duration,\r\n\t\r\n\t\t\t\tloop = this.loop,\r\n\t\t\t\tloopCount = this._loopCount,\r\n\t\r\n\t\t\t\tpingPong = false;\r\n\t\r\n\t\t\tswitch ( loop ) {\r\n\t\r\n\t\t\t\tcase THREE.LoopOnce:\r\n\t\r\n\t\t\t\t\tif ( loopCount === -1 ) {\r\n\t\r\n\t\t\t\t\t\t// just started\r\n\t\r\n\t\t\t\t\t\tthis.loopCount = 0;\r\n\t\t\t\t\t\tthis._setEndings( true, true, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( time >= duration ) {\r\n\t\r\n\t\t\t\t\t\ttime = duration;\r\n\t\r\n\t\t\t\t\t} else if ( time < 0 ) {\r\n\t\r\n\t\t\t\t\t\ttime = 0;\r\n\t\r\n\t\t\t\t\t} else break;\r\n\t\r\n\t\t\t\t\t// reached the end\r\n\t\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.pause = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\t\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.LoopPingPong:\r\n\t\r\n\t\t\t\t\tpingPong = true;\r\n\t\r\n\t\t\t\tcase THREE.LoopRepeat:\r\n\t\r\n\t\t\t\t\tif ( loopCount === -1 ) {\r\n\t\r\n\t\t\t\t\t\t// just started\r\n\t\r\n\t\t\t\t\t\tif ( deltaTime > 0 ) {\r\n\t\r\n\t\t\t\t\t\t\tloopCount = 0;\r\n\t\r\n\t\t\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t\t// so leave loopCount at -1\r\n\t\r\n\t\t\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( time >= duration || time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t// wrap around\r\n\t\r\n\t\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t\t\ttime -= duration * loopDelta;\r\n\t\r\n\t\t\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\t\r\n\t\t\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\t\r\n\t\t\t\t\t\tif ( pending < 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t// stop (switch state, clamp time, fire event)\r\n\t\r\n\t\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t\t\telse this.enabled = false;\r\n\t\r\n\t\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\t\r\n\t\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t} else if ( pending === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t// transition to last round\r\n\t\r\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\t\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( loop === THREE.LoopPingPong && ( loopCount & 1 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t// invert time for the \"pong round\"\r\n\t\r\n\t\t\t\t\t\tthis.time = time;\r\n\t\r\n\t\t\t\t\t\treturn duration - time;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.time = time;\r\n\t\r\n\t\t\treturn time;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\r\n\t\r\n\t\t\tvar settings = this._interpolantSettings;\r\n\t\r\n\t\t\tif ( pingPong ) {\r\n\t\r\n\t\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\t\r\n\t\t\t\tif ( atStart ) {\r\n\t\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\r\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( atEnd ) {\r\n\t\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\r\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\r\n\t\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._weightInterpolant;\r\n\t\r\n\t\t\tif ( interpolant === null ) {\r\n\t\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\r\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// Implementation details:\r\n\t\r\n\tObject.assign( THREE.AnimationMixer.prototype, {\r\n\t\r\n\t\t_bindAction: function( action, prototypeAction ) {\r\n\t\r\n\t\t\tvar root = action._localRoot || this._root,\r\n\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\t\r\n\t\t\tif ( bindingsByName === undefined ) {\r\n\t\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\t\r\n\t\t\t\tvar track = tracks[ i ],\r\n\t\t\t\t\ttrackName = track.name,\r\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\t\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\t\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbinding = bindings[ i ];\r\n\t\r\n\t\t\t\t\tif ( binding !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\t\r\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\t\r\n\t\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\t\r\n\t\t\t\t\tbinding = new THREE.PropertyMixer(\r\n\t\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\t\r\n\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\t\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_activateAction: function( action ) {\r\n\t\r\n\t\t\tif ( ! this._isActiveAction( action ) ) {\r\n\t\r\n\t\t\t\tif ( action._cacheIndex === null ) {\r\n\t\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\t\r\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\t\tclipName = action._clip.name,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipName ];\r\n\t\r\n\t\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\t\r\n\t\t\t\t\tthis._addInactiveAction( action, clipName, rootUuid );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\t\r\n\t\t\t\t// increment reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\t\r\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._lendAction( action );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_deactivateAction: function( action ) {\r\n\t\r\n\t\t\tif ( this._isActiveAction( action ) ) {\r\n\t\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\t\r\n\t\t\t\t// decrement reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\t\r\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\t\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\t\tthis._takeBackBinding( binding );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._takeBackAction( action );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Memory manager\r\n\t\r\n\t\t_initMemoryManager: function() {\r\n\t\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\r\n\t\t\tthis._actionsByClip = {};\r\n\t\t\t// inside:\r\n\t\t\t// {\r\n\t\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\r\n\t\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\r\n\t\t\t// }\r\n\t\r\n\t\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\t\tthis._nActiveBindings = 0;\r\n\t\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\t\r\n\t\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tthis.stats = {\r\n\t\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() { return scope._actions.length; },\r\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() { return scope._bindings.length; },\r\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\r\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Memory management for _Action objects\r\n\t\r\n\t\t_isActiveAction: function( action ) {\r\n\t\r\n\t\t\tvar index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_addInactiveAction: function( action, clipName, rootUuid ) {\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipName ];\r\n\t\r\n\t\t\tif ( actionsForClip === undefined ) {\r\n\t\r\n\t\t\t\tactionsForClip = {\r\n\t\r\n\t\t\t\t\tknownActions: [ action ],\r\n\t\t\t\t\tactionByRoot: {}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\t\r\n\t\t\t\tactionsByClip[ clipName ] = actionsForClip;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\t\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push( action );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push( action );\r\n\t\r\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_removeInactiveAction: function( action ) {\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\t\tcacheIndex = action._cacheIndex;\r\n\t\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\t\r\n\t\t\taction._cacheIndex = null;\r\n\t\r\n\t\r\n\t\t\tvar clipName = action._clip.name,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipName ],\r\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\t\r\n\t\t\t\tlastKnownAction =\r\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\t\r\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\t\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\t\r\n\t\t\taction._byClipCacheIndex = null;\r\n\t\r\n\t\r\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\r\n\t\r\n\t\t\tdelete actionByRoot[ rootUuid ];\r\n\t\r\n\t\t\tif ( knownActionsForClip.length === 0 ) {\r\n\t\r\n\t\t\t\tdelete actionsByClip[ clipName ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_removeInactiveBindingsForAction: function( action ) {\r\n\t\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\t\r\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\t\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_lendAction: function( action ) {\r\n\t\r\n\t\t\t// [ active actions |  inactive actions  ]\r\n\t\t\t// [  active actions >| inactive actions ]\r\n\t\t\t//                 s        a\r\n\t\t\t//                  <-swap->\r\n\t\t\t//                 a        s\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\r\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\t\r\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\t\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[ lastActiveIndex ] = action;\r\n\t\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_takeBackAction: function( action ) {\r\n\t\r\n\t\t\t// [  active actions  | inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions  ]\r\n\t\t\t//        a        s\r\n\t\t\t//         <-swap->\r\n\t\t\t//        s        a\r\n\t\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\t\r\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\t\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[ firstInactiveIndex ] = action;\r\n\t\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = lastActiveAction;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Memory management for PropertyMixer objects\r\n\t\r\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\r\n\t\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\t\r\n\t\t\t\tbindings = this._bindings;\r\n\t\r\n\t\t\tif ( bindingByName === undefined ) {\r\n\t\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbindingByName[ trackName ] = binding;\r\n\t\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push( binding );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_removeInactiveBinding: function( binding ) {\r\n\t\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\t\r\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\t\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\t\r\n\t\t\tdelete bindingByName[ trackName ];\r\n\t\r\n\t\t\tremove_empty_map: {\r\n\t\r\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\r\n\t\r\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_lendBinding: function( binding ) {\r\n\t\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\r\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\t\r\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\t\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[ lastActiveIndex ] = binding;\r\n\t\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_takeBackBinding: function( binding ) {\r\n\t\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\t\r\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\t\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[ firstInactiveIndex ] = binding;\r\n\t\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\t// Memory management of Interpolants for weight and time scale\r\n\t\r\n\t\t_lendControlInterpolant: function() {\r\n\t\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\t\r\n\t\t\tif ( interpolant === undefined ) {\r\n\t\r\n\t\t\t\tinterpolant = new THREE.LinearInterpolant(\r\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\t\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn interpolant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_takeBackControlInterpolant: function( interpolant ) {\r\n\t\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\t\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\t\r\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\t\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\t\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\r\n\t\r\n\t} );\r\n\t\r\n\t\r\n\t// File:src/animation/AnimationObjectGroup.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t * \t-\tInstead pass this object as 'root'.\r\n\t *\r\n\t * \t-\tYou can also add and remove objects later when the mixer\r\n\t * \t\tis running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *  \tObjects of this class appear as one object to the mixer,\r\n\t *  \tso cache control of the individual objects must be done\r\n\t *  \ton the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t * \t- \tThe animated properties must be compatible among the\r\n\t * \t\tall objects in the group.\r\n\t *\r\n\t *  -\tA single property can either be controlled through a\r\n\t *  \ttarget group or directly, but not both.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.AnimationObjectGroup = function( var_args ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\t\r\n\t\tvar indices = {};\r\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\t\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.stats = {\r\n\t\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() { return scope._objects.length; },\r\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\r\n\t\t\t},\r\n\t\r\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationObjectGroup.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationObjectGroup,\r\n\t\r\n\t\tadd: function( var_args ) {\r\n\t\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tpaths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\t\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\t\r\n\t\t\t\tif ( index === undefined ) {\r\n\t\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\t\r\n\t\t\t\t\tindex = nObjects ++;\r\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\t\tobjects.push( object );\r\n\t\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tbindings[ j ].push(\r\n\t\t\t\t\t\t\t\tnew THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( index < nCachedObjects ) {\r\n\t\r\n\t\t\t\t\tvar knownObject = objects[ index ];\r\n\t\r\n\t\t\t\t\t// move existing object to the ACTIVE region\r\n\t\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\t\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\t\r\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\t\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\t\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\r\n\t\t\t\t\t\tif ( binding === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\t\r\n\t\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\r\n\t\r\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\r\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\r\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\r\n\t\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\t\r\n\t\t\t} // for arguments\r\n\t\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function( var_args ) {\r\n\t\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\t\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\t\r\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\t\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\t\r\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\t\r\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\t\r\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\t\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\t\r\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} // for arguments\r\n\t\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// remove & forget\r\n\t\tuncache: function( var_args ) {\r\n\t\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\t\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\t\r\n\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\t\r\n\t\t\t\t\tif ( index < nCachedObjects ) {\r\n\t\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\t\r\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\t\r\n\t\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\t\r\n\t\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\t\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\t\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\t\r\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\t\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\t\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\t\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\t\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} // cached or active\r\n\t\r\n\t\t\t\t} // if object is known\r\n\t\r\n\t\t\t} // for arguments\r\n\t\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\t\r\n\t\tsubscribe_: function( path, parsedPath ) {\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\t\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ],\r\n\t\t\t\tbindings = this._bindings;\r\n\t\r\n\t\t\tif ( index !== undefined ) return bindings[ index ];\r\n\t\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tobjects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tbindingsForPath = new Array( nObjects );\r\n\t\r\n\t\t\tindex = bindings.length;\r\n\t\r\n\t\t\tindicesByPath[ path ] = index;\r\n\t\r\n\t\t\tpaths.push( path );\r\n\t\t\tparsedPaths.push( parsedPath );\r\n\t\t\tbindings.push( bindingsForPath );\r\n\t\r\n\t\t\tfor ( var i = nCachedObjects,\r\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tvar object = objects[ i ];\r\n\t\r\n\t\t\t\tbindingsForPath[ i ] =\r\n\t\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn bindingsForPath;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunsubscribe_: function( path ) {\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\t\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ];\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar paths = this._paths,\r\n\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\t\r\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\t\r\n\t\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\t\r\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\t\tparsedPaths.pop();\r\n\t\r\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\t\tpaths.pop();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// File:src/animation/AnimationUtils.js\r\n\t\r\n\t/**\r\n\t * @author tschw\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationUtils = {\r\n\t\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function( array, from, to ) {\r\n\t\r\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\r\n\t\r\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array.slice( from, to );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function( array, type, forceClone ) {\r\n\t\r\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\t\r\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\t\r\n\t\t\t\treturn new type( array ); // create typed array\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisTypedArray: function( object ) {\r\n\t\r\n\t\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t\t! ( object instanceof DataView );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function( times ) {\r\n\t\r\n\t\t\tfunction compareTime( i, j ) {\r\n\t\r\n\t\t\t\treturn times[ i ] - times[ j ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar n = times.length;\r\n\t\t\tvar result = new Array( n );\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\t\r\n\t\t\tresult.sort( compareTime );\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function( values, stride, order ) {\r\n\t\r\n\t\t\tvar nValues = values.length;\r\n\t\t\tvar result = new values.constructor( nValues );\r\n\t\r\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\t\r\n\t\t\t\tvar srcOffset = order[ i ] * stride;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\t\r\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\r\n\t\r\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\t\r\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\t\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( key === undefined ) return; // no data\r\n\t\r\n\t\t\tvar value = key[ valuePropertyName ];\r\n\t\t\tif ( value === undefined ) return; // no data\r\n\t\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\t\r\n\t\t\t\tdo {\r\n\t\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\t\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\t\r\n\t\t\t\t} while ( key !== undefined );\r\n\t\r\n\t\t\t} else if ( value.toArray !== undefined ) {\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\t\r\n\t\t\t\tdo {\r\n\t\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\t\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalue.toArray( values, values.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\t\r\n\t\t\t\t} while ( key !== undefined );\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise push as-is\r\n\t\r\n\t\t\t\tdo {\r\n\t\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\t\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\t\r\n\t\t\t\t} while ( key !== undefined );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/KeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A timed sequence of keyframes for a specific property.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\r\n\t\r\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\t\r\n\t\tif( times === undefined || times.length === 0 ) {\r\n\t\r\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.name = name;\r\n\t\r\n\t\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\t\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\t\r\n\t\tthis.validate();\r\n\t\tthis.optimize();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyframeTrack.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyframeTrack,\r\n\t\r\n\t\tTimeBufferType: Float32Array,\r\n\t\tValueBufferType: Float32Array,\r\n\t\r\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\t\r\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\r\n\t\r\n\t\t\treturn new THREE.DiscreteInterpolant(\r\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tInterpolantFactoryMethodLinear: function( result ) {\r\n\t\r\n\t\t\treturn new THREE.LinearInterpolant(\r\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\r\n\t\r\n\t\t\treturn new THREE.CubicInterpolant(\r\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetInterpolation: function( interpolation ) {\r\n\t\r\n\t\t\tvar factoryMethod = undefined;\r\n\t\r\n\t\t\tswitch ( interpolation ) {\r\n\t\r\n\t\t\t\tcase THREE.InterpolateDiscrete:\r\n\t\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.InterpolateLinear:\r\n\t\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.InterpolateSmooth:\r\n\t\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( factoryMethod === undefined ) {\r\n\t\r\n\t\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\t\r\n\t\t\t\tif ( this.createInterpolant === undefined ) {\r\n\t\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\t\r\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tconsole.warn( message );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInterpolation: function() {\r\n\t\r\n\t\t\tswitch ( this.createInterpolant ) {\r\n\t\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\t\r\n\t\t\t\t\treturn THREE.InterpolateDiscrete;\r\n\t\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\t\r\n\t\t\t\t\treturn THREE.InterpolateLinear;\r\n\t\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\t\r\n\t\t\t\t\treturn THREE.InterpolateSmooth;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetValueSize: function() {\r\n\t\r\n\t\t\treturn this.values.length / this.times.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// move all keyframes either forwards or backwards in time\r\n\t\tshift: function( timeOffset ) {\r\n\t\r\n\t\t\tif( timeOffset !== 0.0 ) {\r\n\t\r\n\t\t\t\tvar times = this.times;\r\n\t\r\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\ttimes[ i ] += timeOffset;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t\tscale: function( timeScale ) {\r\n\t\r\n\t\t\tif( timeScale !== 1.0 ) {\r\n\t\r\n\t\t\t\tvar times = this.times;\r\n\t\r\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\ttimes[ i ] *= timeScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t\ttrim: function( startTime, endTime ) {\r\n\t\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tnKeys = times.length,\r\n\t\t\t\tfrom = 0,\r\n\t\t\t\tto = nKeys - 1;\r\n\t\r\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\r\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\r\n\t\r\n\t\t\t++ to; // inclusive -> exclusive bound\r\n\t\r\n\t\t\tif( from !== 0 || to !== nKeys ) {\r\n\t\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\r\n\t\r\n\t\t\t\tvar stride = this.getValueSize();\r\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\r\n\t\t\t\tthis.values = THREE.AnimationUtils.\r\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t\tvalidate: function() {\r\n\t\r\n\t\t\tvar valid = true;\r\n\t\r\n\t\t\tvar valueSize = this.getValueSize();\r\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\r\n\t\t\t\tvalid = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\t\r\n\t\t\t\tnKeys = times.length;\r\n\t\r\n\t\t\tif( nKeys === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( \"track is empty\", this );\r\n\t\t\t\tvalid = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar prevTime = null;\r\n\t\r\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\r\n\t\r\n\t\t\t\tvar currTime = times[ i ];\r\n\t\r\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\r\n\t\r\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprevTime = currTime;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( values !== undefined ) {\r\n\t\r\n\t\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\t\tvar value = values[ i ];\r\n\t\r\n\t\t\t\t\t\tif ( isNaN( value ) ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn valid;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\t\toptimize: function() {\r\n\t\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\t\t\t\tstride = this.getValueSize(),\r\n\t\r\n\t\t\t\twriteIndex = 1;\r\n\t\r\n\t\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\r\n\t\r\n\t\t\t\tvar keep = false;\r\n\t\r\n\t\t\t\tvar time = times[ i ];\r\n\t\t\t\tvar timeNext = times[ i + 1 ];\r\n\t\r\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\t\r\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\t\r\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\toffsetN = offset + stride;\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar value = values[ offset + j ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\t\r\n\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// in-place compaction\r\n\t\r\n\t\t\t\tif ( keep ) {\r\n\t\r\n\t\t\t\t\tif ( i !== writeIndex ) {\r\n\t\r\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\t\r\n\t\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\t\r\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t++ writeIndex;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( writeIndex !== times.length ) {\r\n\t\r\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// Static methods:\r\n\t\r\n\tObject.assign( THREE.KeyframeTrack, {\r\n\t\r\n\t\t// Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\t\r\n\t\tparse: function( json ) {\r\n\t\r\n\t\t\tif( json.type === undefined ) {\r\n\t\r\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\r\n\t\r\n\t\t\tif ( json.times === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( \"legacy JSON format detected, converting\" );\r\n\t\r\n\t\t\t\tvar times = [], values = [];\r\n\t\r\n\t\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\t\r\n\t\t\t\tjson.times = times;\r\n\t\t\t\tjson.values = values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// derived classes can define a static parse method\r\n\t\t\tif ( trackType.parse !== undefined ) {\r\n\t\r\n\t\t\t\treturn trackType.parse( json );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// by default, we asssume a constructor compatible with the base\r\n\t\t\t\treturn new trackType(\r\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function( track ) {\r\n\t\r\n\t\t\tvar trackType = track.constructor;\r\n\t\r\n\t\t\tvar json;\r\n\t\r\n\t\t\t// derived classes can define a static toJSON method\r\n\t\t\tif ( trackType.toJSON !== undefined ) {\r\n\t\r\n\t\t\t\tjson = trackType.toJSON( track );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\t\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar interpolation = track.getInterpolation();\r\n\t\r\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\t\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\t\r\n\t\t\treturn json;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\r\n\t\r\n\t\t\tswitch( typeName.toLowerCase() ) {\r\n\t\r\n\t\t\t\tcase \"scalar\":\r\n\t\t\t\tcase \"double\":\r\n\t\t\t\tcase \"float\":\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\tcase \"integer\":\r\n\t\r\n\t\t\t\t\treturn THREE.NumberKeyframeTrack;\r\n\t\r\n\t\t\t\tcase \"vector\":\r\n\t\t\t\tcase \"vector2\":\r\n\t\t\t\tcase \"vector3\":\r\n\t\t\t\tcase \"vector4\":\r\n\t\r\n\t\t\t\t\treturn THREE.VectorKeyframeTrack;\r\n\t\r\n\t\t\t\tcase \"color\":\r\n\t\r\n\t\t\t\t\treturn THREE.ColorKeyframeTrack;\r\n\t\r\n\t\t\t\tcase \"quaternion\":\r\n\t\r\n\t\t\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\t\r\n\t\t\t\tcase \"bool\":\r\n\t\t\t\tcase \"boolean\":\r\n\t\r\n\t\t\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\t\r\n\t\t\t\tcase \"string\":\r\n\t\r\n\t\t\t\t\treturn THREE.StringKeyframeTrack;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/animation/PropertyBinding.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A reference to a real property in the scene graph.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\r\n\t\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath ||\r\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\t\r\n\t\tthis.node = THREE.PropertyBinding.findNode(\r\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\r\n\t\r\n\t\tthis.rootNode = rootNode;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.prototype = {\r\n\t\r\n\t\tconstructor: THREE.PropertyBinding,\r\n\t\r\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\t\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue( targetArray, offset );\r\n\t\r\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t\t// prototype version of these methods with one that represents\r\n\t\t\t// the bound state. When the property is not found, the methods\r\n\t\t\t// become no-ops.\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\t\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue( sourceArray, offset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// create getter / setter pair for a property in the scene graph\r\n\t\tbind: function() {\r\n\t\r\n\t\t\tvar targetObject = this.node,\r\n\t\t\t\tparsedPath = this.parsedPath,\r\n\t\r\n\t\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\t\r\n\t\t\tif ( ! targetObject ) {\r\n\t\r\n\t\t\t\ttargetObject = THREE.PropertyBinding.findNode(\r\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\t\r\n\t\t\t\tthis.node = targetObject;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// set fail state so we can just 'return' on error\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable;\r\n\t\r\n\t \t\t// ensure there is a value node\r\n\t\t\tif ( ! targetObject ) {\r\n\t\r\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif( objectName ) {\r\n\t\r\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\t\r\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t\tswitch ( objectName ) {\r\n\t\r\n\t\t\t\t\tcase 'materials':\r\n\t\r\n\t\t\t\t\t\tif( ! targetObject.material ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif( ! targetObject.material.materials ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'bones':\r\n\t\r\n\t\t\t\t\t\tif( ! targetObject.skeleton ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\t\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\t\r\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( targetObject[i].name === objectIndex ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( objectIndex !== undefined ) {\r\n\t\r\n\t\t\t\t\tif( targetObject[ objectIndex ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// resolve property\r\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\t\r\n\t\t\tif ( ! nodeProperty ) {\r\n\t\r\n\t\t\t\tvar nodeName = parsedPath.nodeName;\r\n\t\r\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\r\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// determine versioning scheme\r\n\t\t\tvar versioning = this.Versioning.None;\r\n\t\r\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\t\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\t\r\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\t\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\t\tthis.targetObject = targetObject;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// determine how the property gets bound\r\n\t\t\tvar bindingType = this.BindingType.Direct;\r\n\t\r\n\t\t\tif ( propertyIndex !== undefined ) {\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\t\r\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\t\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif ( ! targetObject.geometry ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === propertyIndex ) {\r\n\t\r\n\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\t\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\t\r\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\t\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\t\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\r\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\r\n\t\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\t\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// select getter / setter\r\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunbind: function() {\r\n\t\r\n\t\t\tthis.node = null;\r\n\t\r\n\t\t\t// back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\r\n\t\r\n\t\t// these are used to \"bind\" a nonexistent property\r\n\t\t_getValue_unavailable: function() {},\r\n\t\t_setValue_unavailable: function() {},\r\n\t\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\r\n\t\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\r\n\t\r\n\t\tBindingType: {\r\n\t\t\tDirect: 0,\r\n\t\t\tEntireArray: 1,\r\n\t\t\tArrayElement: 2,\r\n\t\t\tHasFromToArray: 3\r\n\t\t},\r\n\t\r\n\t\tVersioning: {\r\n\t\t\tNone: 0,\r\n\t\t\tNeedsUpdate: 1,\r\n\t\t\tMatrixWorldNeedsUpdate: 2\r\n\t\t},\r\n\t\r\n\t\tGetterByBindingType: [\r\n\t\r\n\t\t\tfunction getValue_direct( buffer, offset ) {\r\n\t\r\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction getValue_array( buffer, offset ) {\r\n\t\r\n\t\t\t\tvar source = this.resolvedProperty;\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\t\r\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction getValue_toArray( buffer, offset ) {\r\n\t\r\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t],\r\n\t\r\n\t\tSetterByBindingTypeAndVersioning: [\r\n\t\r\n\t\t\t[\r\n\t\t\t\t// Direct\r\n\t\r\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t], [\r\n\t\r\n\t\t\t\t// EntireArray\r\n\t\r\n\t\t\t\tfunction setValue_array( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t], [\r\n\t\r\n\t\t\t\t// ArrayElement\r\n\t\r\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t], [\r\n\t\r\n\t\t\t\t// HasToFromArray\r\n\t\r\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\t\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t]\r\n\t\r\n\t\t]\r\n\t\r\n\t} );\r\n\t\r\n\tTHREE.PropertyBinding.Composite =\r\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\r\n\t\r\n\t\tvar parsedPath = optionalParsedPath ||\r\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\t\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.Composite.prototype = {\r\n\t\r\n\t\tconstructor: THREE.PropertyBinding.Composite,\r\n\t\r\n\t\tgetValue: function( array, offset ) {\r\n\t\r\n\t\t\tthis.bind(); // bind all binding\r\n\t\r\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\t\r\n\t\t\t// and only call .getValue on the first\r\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValue: function( array, offset ) {\r\n\t\r\n\t\t\tvar bindings = this._bindings;\r\n\t\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tbindings[ i ].setValue( array, offset );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbind: function() {\r\n\t\r\n\t\t\tvar bindings = this._bindings;\r\n\t\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tbindings[ i ].bind();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunbind: function() {\r\n\t\r\n\t\t\tvar bindings = this._bindings;\r\n\t\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\tbindings[ i ].unbind();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\r\n\t\r\n\t\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\r\n\t\r\n\t\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\t\r\n\t\t// matches strings in the form of:\r\n\t\t//    nodeName.property\r\n\t\t//    nodeName.property[accessor]\r\n\t\t//    nodeName.material.property[accessor]\r\n\t\t//    uuid.property[accessor]\r\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t\t//    parentName/nodeName.property\r\n\t\t//    parentName/parentName/nodeName.property[index]\r\n\t\t//\t  .bone[Armature.DEF_cog].position\r\n\t\t// created and tested via https://regex101.com/#javascript\r\n\t\r\n\t\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\t\tvar matches = re.exec(trackName);\r\n\t\r\n\t\tif( ! matches ) {\r\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t\t}\r\n\t\r\n\t    if (matches.index === re.lastIndex) {\r\n\t        re.lastIndex++;\r\n\t    }\r\n\t\r\n\t\tvar results = {\r\n\t\t\t// directoryName: matches[1], // (tschw) currently unused\r\n\t\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\t\tobjectName: matches[5],\r\n\t\t\tobjectIndex: matches[7],\r\n\t\t\tpropertyName: matches[9],\r\n\t\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t\t};\r\n\t\r\n\t\tif( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t\t}\r\n\t\r\n\t\treturn results;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\t\r\n\t\tif( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\t\r\n\t\t\treturn root;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// search into skeleton bones.\r\n\t\tif( root.skeleton ) {\r\n\t\r\n\t\t\tvar searchSkeleton = function( skeleton ) {\r\n\t\r\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar bone = skeleton.bones[i];\r\n\t\r\n\t\t\t\t\tif( bone.name === nodeName ) {\r\n\t\r\n\t\t\t\t\t\treturn bone;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar bone = searchSkeleton( root.skeleton );\r\n\t\r\n\t\t\tif( bone ) {\r\n\t\r\n\t\t\t\treturn bone;\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// search into node subtree.\r\n\t\tif( root.children ) {\r\n\t\r\n\t\t\tvar searchNodeSubtree = function( children ) {\r\n\t\r\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar childNode = children[i];\r\n\t\r\n\t\t\t\t\tif( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\t\r\n\t\t\t\t\t\treturn childNode;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\t\r\n\t\t\t\t\tif( result ) return result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\t\r\n\t\t\tif( subTreeNode ) {\r\n\t\r\n\t\t\t\treturn subTreeNode;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t}\r\n\t\r\n\t// File:src/animation/PropertyMixer.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Buffered scene graph property that allows weighted accumulation.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\r\n\t\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\t\r\n\t\tvar bufferType = Float64Array,\r\n\t\t\tmixFunction;\r\n\t\r\n\t\tswitch ( typeName ) {\r\n\t\r\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\r\n\t\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\r\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\r\n\t\r\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\t\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\t\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyMixer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.PropertyMixer,\r\n\t\r\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\t\taccumulate: function( accuIndex, weight ) {\r\n\t\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\t\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\t\r\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\t\r\n\t\t\tif ( currentWeight === 0 ) {\r\n\t\r\n\t\t\t\t// accuN := incoming * weight\r\n\t\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentWeight = weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\t\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tvar mix = weight / currentWeight;\r\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\t\tapply: function( accuIndex ) {\r\n\t\r\n\t\t\tvar stride = this.valueSize,\r\n\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\t\r\n\t\t\t\tweight = this.cumulativeWeight,\r\n\t\r\n\t\t\t\tbinding = this.binding;\r\n\t\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\r\n\t\t\tif ( weight < 1 ) {\r\n\t\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\t\r\n\t\t\t\tvar originalValueOffset = stride * 3;\r\n\t\r\n\t\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\t\r\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\t\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\t\r\n\t\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// remember the state of the bound property and copy it to both accus\r\n\t\tsaveOriginalState: function() {\r\n\t\r\n\t\t\tvar binding = this.binding;\r\n\t\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\r\n\t\t\t\toriginalValueOffset = stride * 3;\r\n\t\r\n\t\t\tbinding.getValue( buffer, originalValueOffset );\r\n\t\r\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\t\r\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\t\trestoreOriginalState: function() {\r\n\t\r\n\t\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\t// mix functions\r\n\t\r\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\t\r\n\t\t\tif ( t >= 0.5 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\t\r\n\t\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\r\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\t\r\n\t\t\tvar s = 1 - t;\r\n\t\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\t\r\n\t\t\t\tvar j = dstOffset + i;\r\n\t\r\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track of Boolean keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, times, values );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.BooleanKeyframeTrack,\r\n\t\r\n\t\tValueTypeName: 'bool',\r\n\t\tValueBufferType: Array,\r\n\t\r\n\t\tDefaultInterpolation: THREE.IntepolateDiscrete,\r\n\t\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\t\r\n\t\t// Note: Actually this track could have a optimized / compressed\r\n\t\t// representation of a single value and a custom interpolant that\r\n\t\t// computes \"firstValue ^ isOdd( index )\".\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track of numeric keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.NumberKeyframeTrack,\r\n\t\r\n\t\tValueTypeName: 'number',\r\n\t\r\n\t\t// ValueBufferType is inherited\r\n\t\r\n\t\t// DefaultInterpolation is inherited\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track of quaternion keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.QuaternionKeyframeTrack,\r\n\t\r\n\t\tValueTypeName: 'quaternion',\r\n\t\r\n\t\t// ValueBufferType is inherited\r\n\t\r\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\t\r\n\t\tInterpolantFactoryMethodLinear: function( result ) {\r\n\t\r\n\t\t\treturn new THREE.QuaternionLinearInterpolant(\r\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/animation/tracks/StringKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Strings\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.StringKeyframeTrack,\r\n\t\r\n\t\tValueTypeName: 'string',\r\n\t\tValueBufferType: Array,\r\n\t\r\n\t\tDefaultInterpolation: THREE.IntepolateDiscrete,\r\n\t\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\t\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track of vectored keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\t\r\n\tTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype =\r\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\t\r\n\t\tconstructor: THREE.VectorKeyframeTrack,\r\n\t\r\n\t\tValueTypeName: 'vector'\r\n\t\r\n\t\t// ValueBufferType is inherited\r\n\t\r\n\t\t// DefaultInterpolation is inherited\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.sourceType = 'empty';\r\n\t\r\n\t\tthis.filter = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.getOutput = function () {\r\n\t\r\n\t\treturn this.gain;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar buffer = new THREE.AudioBuffer( this.context );\r\n\t\tbuffer.load( file );\r\n\t\r\n\t\tthis.setBuffer( buffer );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setNodeSource = function ( audioNode ) {\r\n\t\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'audioNode';\r\n\t\tthis.source = audioNode;\r\n\t\tthis.connect();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setBuffer = function ( audioBuffer ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\taudioBuffer.onReady( function( buffer ) {\r\n\t\r\n\t\t\tscope.source.buffer = buffer;\r\n\t\t\tscope.sourceType = 'buffer';\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t} );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== null ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.getOutput() );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.getOutput() );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== null ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.getOutput() );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.getOutput() );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( value === undefined ) value = null;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/audio/AudioAnalyser.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioAnalyser = function ( audio, fftSize ) {\r\n\t\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\t\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\t\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioAnalyser.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AudioAnalyser,\r\n\t\r\n\t\tgetData: function () {\r\n\t\r\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\t\t\treturn this.data;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/audio/AudioBuffer.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioBuffer = function ( context ) {\r\n\t\r\n\t\tthis.context = context;\r\n\t\tthis.ready = false;\r\n\t\tthis.readyCallbacks = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioBuffer.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.buffer = buffer;\r\n\t\t\t\tscope.ready = true;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < scope.readyCallbacks.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tscope.readyCallbacks[ i ]( scope.buffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tscope.readyCallbacks = [];\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioBuffer.prototype.onReady = function ( callback ) {\r\n\t\r\n\t\tif ( this.ready ) {\r\n\t\r\n\t\t\tcallback( this.buffer );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.readyCallbacks.push( callback );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/audio/PositionalAudio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PositionalAudio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Audio.call( this, listener );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype = Object.create( THREE.Audio.prototype );\r\n\tTHREE.PositionalAudio.prototype.constructor = THREE.PositionalAudio;\r\n\t\r\n\tTHREE.PositionalAudio.prototype.getOutput = function () {\r\n\t\r\n\t\treturn this.panner;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.setDistanceModel = function ( value ) {\r\n\t\r\n\t\tthis.panner.distanceModel = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.getDistanceModel = function () {\r\n\t\r\n\t\treturn this.panner.distanceModel;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.setMaxDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.maxDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.getMaxDistance = function () {\r\n\t\r\n\t\treturn this.panner.maxDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PositionalAudio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.filter = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.getInput = function () {\r\n\t\r\n\t\treturn this.gain;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype.removeFilter = function ( ) {\r\n\t\r\n\t\tif ( this.filter !== null ) {\r\n\t\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\tthis.filter = null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.filter !== null ) {\r\n\t\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.gain.disconnect( this.context.destination );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.filter = value;\r\n\t\tthis.gain.connect( this.filter );\r\n\t\tthis.filter.connect( this.context.destination );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype.setMasterVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype.getMasterVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.focalLength = 10;\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.focalLength = source.focalLength;\r\n\t\tthis.zoom = source.zoom;\r\n\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.focalLength = this.focalLength;\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/StereoCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.StereoCamera = function () {\r\n\t\r\n\t\tthis.type = 'StereoCamera';\r\n\t\r\n\t\tthis.aspect = 1;\r\n\t\r\n\t\tthis.cameraL = new THREE.PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.cameraR = new THREE.PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StereoCamera.prototype = {\r\n\t\r\n\t\tconstructor: THREE.StereoCamera,\r\n\t\r\n\t\tupdate: ( function () {\r\n\t\r\n\t\t\tvar focalLength, fov, aspect, near, far;\r\n\t\r\n\t\t\tvar eyeRight = new THREE.Matrix4();\r\n\t\t\tvar eyeLeft = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function update ( camera ) {\r\n\t\r\n\t\t\t\tvar needsUpdate = focalLength !== camera.focalLength || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\r\n\t\r\n\t\t\t\tif ( needsUpdate ) {\r\n\t\r\n\t\t\t\t\tfocalLength = camera.focalLength;\r\n\t\t\t\t\tfov = camera.fov;\r\n\t\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\t\tnear = camera.near;\r\n\t\t\t\t\tfar = camera.far;\r\n\t\r\n\t\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\t\r\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\t\tvar eyeSep = 0.064 / 2;\r\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focalLength;\r\n\t\t\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\t\t\tvar xmin, xmax;\r\n\t\r\n\t\t\t\t\t// translate xOffset\r\n\t\r\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\t\r\n\t\t\t\t\t// for left eye\r\n\t\r\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\t\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\t\r\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\t\r\n\t\t\t\t\t// for right eye\r\n\t\r\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\t\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\t\r\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\t\r\n\t\tthis.receiveShadow = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\t\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/LightShadow.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LightShadow = function ( camera ) {\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\r\n\t\tthis.bias = 0;\r\n\t\tthis.radius = 1;\r\n\t\r\n\t\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LightShadow.prototype = {\r\n\t\r\n\t\tconstructor: THREE.LightShadow,\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.camera = source.camera.clone();\r\n\t\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\t\r\n\t\t\tthis.mapSize.copy( source.mapSize );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color, intensity );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t\tthis.castShadow = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color, intensity );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor, intensity );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.castShadow = undefined;\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color, intensity );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tObject.defineProperty( THREE.PointLight.prototype, \"power\", {\r\n\t\r\n\t\tget: function () {\r\n\t\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * 4 * Math.PI;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( power ) {\r\n\t\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color, intensity );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tObject.defineProperty( THREE.SpotLight.prototype, \"power\", {\r\n\t\r\n\t\tget: function () {\r\n\t\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * Math.PI;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( power ) {\r\n\t\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / Math.PI;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.penumbra = source.penumbra;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar color, textureLoader, materialLoader;\r\n\t\r\n\t\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\t\r\n\t\t\t\t// convert from old material format\r\n\t\r\n\t\t\t\tvar textures = {};\r\n\t\r\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( repeat !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\t\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\t\t\t\ttextures[ uuid ] = texture;\r\n\t\r\n\t\t\t\t\treturn uuid;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar json = {\r\n\t\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var name in m ) {\r\n\t\r\n\t\t\t\t\tvar value = m[ name ];\r\n\t\r\n\t\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\t\r\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\t\r\n\t\t\t\tmaterialLoader.setTextures( textures );\r\n\t\r\n\t\t\t\treturn materialLoader.parse( json );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tvar handlers = this.handlers;\r\n\t\r\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = handlers[ i ];\r\n\t\t\t\tvar loader  = handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.overrideMimeType( 'text/plain' );\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tvar response = event.target.response;\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, response );\r\n\t\r\n\t\t\t\tif ( this.status === 200 ) {\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( response );\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} else if ( this.status === 0 ) {\r\n\t\r\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( response );\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetPath: function ( value ) {\r\n\t\r\n\t\t\tthis.path = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/FontLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.FontLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FontLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.FontLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( new THREE.Font( JSON.parse( text.substring( 65, text.length - 2 ) ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetPath: function ( value ) {\r\n\t\r\n\t\t\tthis.path = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar type = metadata.type;\r\n\t\r\n\t\t\t\t\tif ( type !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\t\tparseAnimations();\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\t\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction parseAnimations() {\r\n\t\r\n\t\t\t\tvar outputAnimations = [];\r\n\t\r\n\t\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\t\tvar animations = [];\r\n\t\r\n\t\t\t\tif ( json.animation !== undefined ) {\r\n\t\r\n\t\t\t\t\tanimations.push( json.animation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.animations !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( json.animations.length ) {\r\n\t\r\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tanimations.push( json.animations );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// parse implicit morph animations\r\n\t\t\t\tif ( geometry.morphTargets ) {\r\n\t\r\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tvar TYPED_ARRAYS = {\r\n\t\t\t\t'Int8Array': Int8Array,\r\n\t\t\t\t'Uint8Array': Uint8Array,\r\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\r\n\t\t\t\t'Int16Array': Int16Array,\r\n\t\t\t\t'Uint16Array': Uint16Array,\r\n\t\t\t\t'Int32Array': Int32Array,\r\n\t\t\t\t'Uint32Array': Uint32Array,\r\n\t\t\t\t'Float32Array': Float32Array,\r\n\t\t\t\t'Float64Array': Float64Array\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\r\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalScale = json.normalScale;\r\n\t\r\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\t\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\t\r\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\r\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\r\n\t\r\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\r\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MultiMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.animations ) {\r\n\t\r\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\t\tcase 'RingBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'LatheGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.LatheGeometry(\r\n\t\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseAnimations: function ( json ) {\r\n\t\r\n\t\t\tvar animations = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\r\n\t\r\n\t\t\t\tanimations.push( clip );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn animations;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tfunction getGeometry( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction getMaterial( name ) {\r\n\t\r\n\t\t\t\t\tif ( name === undefined ) return undefined;\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\t\tvar material = getMaterial( data.material );\r\n\t\r\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\t\r\n\t\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar texture = new THREE.Texture();\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetPath: function ( value ) {\r\n\t\r\n\t\t\tthis.path = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CubeTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CubeTextureLoader,\r\n\t\r\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tfunction loadTexture( i ) {\r\n\t\r\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded ++;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetPath: function ( value ) {\r\n\t\r\n\t\t\tthis.path = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tfunction loadTexture( i ) {\r\n\t\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetPath: function ( value ) {\r\n\t\r\n\t\t\tthis.path = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\tthis.premultipliedAlpha = false;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRoot = meta === undefined;\r\n\t\r\n\t\t\tif ( isRoot ) {\r\n\t\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\r\n\t\t\tif ( this.roughness !== 0.5 ) data.roughness = this.roughness;\r\n\t\t\tif ( this.metalness !== 0.5 ) data.metalness = this.metalness;\r\n\t\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\t\r\n\t\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\t// TODO: Copied from Object3D.toJSON\r\n\t\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( isRoot ) {\r\n\t\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) data.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshStandardMaterial.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  roughness: <float>,\r\n\t *  metalness: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  roughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  metalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  envMapIntensity: <float>\r\n\t *\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshStandardMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 0.5;\r\n\t\tthis.metalness = 0.5;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.roughnessMap = null;\r\n\t\r\n\t\tthis.metalnessMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapIntensity = 1.0;\r\n\t\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\r\n\t\r\n\tTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\t\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\t\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tvar materials = this.materials;\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\r\n\t\t\t\tdelete material.metadata;\r\n\t\r\n\t\t\t\toutput.materials.push( material );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.extensions = {\r\n\t\t\tderivatives: false, // set to use derivatives\r\n\t\t\tfragDepth: false, // set to use fragment depth values\r\n\t\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t\t};\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.extensions = source.extensions;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\r\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t//\r\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\t\tthis.encoding = THREE.LinearEncoding;\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\r\n\t\r\n\t\tget: function () {\r\n\t\r\n\t\t\treturn this.image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tthis.image = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t} );\r\n\t\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tfunction update() {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.drawMode = THREE.TrianglesDrawMode;\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.setDrawMode = function ( value ) {\r\n\t\r\n\t\tthis.drawMode = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\r\n\t\r\n\t\t\tvar intersect;\r\n\t\t\tvar material = object.material;\r\n\t\r\n\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( intersect === null ) return null;\r\n\t\r\n\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\tobject: object\r\n\t\t\t};\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\t\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\t\r\n\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\tif ( uvs ) {\r\n\t\r\n\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\r\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\t\tintersection.faceIndex = a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn intersection;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar uvs, intersection;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\tuvs = attributes.uv.array;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\t\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\t\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\tfvC = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\tvC.add( fvC );\r\n\t\r\n\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\tfvC = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\t\r\n\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\tif ( uvs ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\t\r\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.skin = source.skin;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tvar vec = new THREE.Vector4();\r\n\t\r\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\t\r\n\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\r\n\t\r\n\t\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\t\tvec.w = skinWeight.getW( i );\r\n\t\r\n\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tvec.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source, recursive ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\nconst float cubeUV_textureSize = 1024.0;\\nint getFaceFromDirection(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    int face = -1;\\n    if( absDirection.x > absDirection.z ) {\\n        if(absDirection.x > absDirection.y )\\n            face = direction.x > 0.0 ? 0 : 3;\\n        else\\n            face = direction.y > 0.0 ? 1 : 4;\\n    }\\n    else {\\n        if(absDirection.z > absDirection.y )\\n            face = direction.z > 0.0 ? 2 : 5;\\n        else\\n            face = direction.y > 0.0 ? 1 : 4;\\n    }\\n    return face;\\n}\\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n    float dxRoughness = dFdx(roughness);\\n    float dyRoughness = dFdy(roughness);\\n    vec3 dx = dFdx( vec * scale * dxRoughness );\\n    vec3 dy = dFdy( vec * scale * dyRoughness );\\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\\n    float mipLevel = 0.5 * log2(d);\\n    return vec2(floor(mipLevel), fract(mipLevel));\\n}\\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n    float a = 16.0 * cubeUV_rcpTextureSize;\\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n    float powScale = exp2_packed.x * exp2_packed.y;\\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n    bool bRes = mipLevel == 0.0;\\n    scale =  bRes && (scale < a) ? a : scale;\\n    vec3 r;\\n    vec2 offset;\\n    int face = getFaceFromDirection(direction);\\n    float rcpPowScale = 1.0 / powScale;\\n    if( face == 0) {\\n        r = vec3(direction.x, -direction.z, direction.y);\\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 1) {\\n        r = vec3(direction.y, direction.x, direction.z);\\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 2) {\\n        r = vec3(direction.z, direction.x, direction.y);\\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 3) {\\n        r = vec3(direction.x, direction.z, direction.y);\\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    else if( face == 4) {\\n        r = vec3(direction.y, direction.x, -direction.z);\\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    else {\\n        r = vec3(direction.z, -direction.x, direction.y);\\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    r = normalize(r);\\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n    vec2 base = offset + vec2( texelOffset );\\n    return base + s * ( scale - 2.0 * texelOffset );\\n}\\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n    float roughnessVal = roughness* cubeUV_maxLods3;\\n    float r1 = floor(roughnessVal);\\n    float r2 = r1 + 1.0;\\n    float t = fract(roughnessVal);\\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n    float s = mipInfo.y;\\n    float level0 = mipInfo.x;\\n    float level1 = level0 + 1.0;\\n    level1 = level1 > 5.0 ? 5.0 : level1;\\n    level0 += min( floor( s + 0.5 ), 5.0 );\\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n    vec4 result = mix(color10, color20, t);\\n    return vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvarying vec3 vReflect;\\n\tuniform float refractionRatio;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t#else\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getPointDirectLightIrradiance( pointLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tIncidentLight getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tIncidentLight getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tIncidentLight getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#endif\\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex' ] = \"#ifdef USE_ENVMAP\\n\tvWorldPosition = worldPosition.xyz;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_standard_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_standard_fragment' ] = \"StandardMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_standard_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_standard_pars_fragment' ] = \"struct StandardMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n};\\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Standard\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tdirectLight = getPointDirectLightIrradiance( pointLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\treturn dot( rgba_depth, bit_shift );\\n\t}\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\": { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\": { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\": { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\": { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\": { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\": { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\": { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\": { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\": { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\": { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\": { type: \"t\", value: null }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\": { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\": { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\": { type: \"t\", value: null },\r\n\t\t\t\"normalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\": { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\": { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\": { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\troughnessmap: {\r\n\t\r\n\t\t\t\"roughnessMap\": { type: \"t\", value: null }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmetalnessmap: {\r\n\t\r\n\t\t\t\"metalnessMap\": { type: \"t\", value: null }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog: {\r\n\t\r\n\t\t\t\"fogDensity\": { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\": { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\": { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\": { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\t\"color\": { type: \"c\" },\r\n\t\r\n\t\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t\t} },\r\n\t\r\n\t\t\t\"directionalShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"directionalShadowMatrix\": { type: \"m4v\", value: [] },\r\n\t\r\n\t\t\t\"spotLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\t\"distance\": { type: \"f\" },\r\n\t\t\t\t\"coneCos\": { type: \"f\" },\r\n\t\t\t\t\"penumbraCos\": { type: \"f\" },\r\n\t\t\t\t\"decay\": { type: \"f\" },\r\n\t\r\n\t\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t\t} },\r\n\t\r\n\t\t\t\"spotShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"spotShadowMatrix\": { type: \"m4v\", value: [] },\r\n\t\r\n\t\t\t\"pointLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\t\"decay\": { type: \"f\" },\r\n\t\t\t\t\"distance\": { type: \"f\" },\r\n\t\r\n\t\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t\t} },\r\n\t\r\n\t\t\t\"pointShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"pointShadowMatrix\": { type: \"m4v\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\t\"skyColor\": { type: \"c\" },\r\n\t\t\t\t\"groundColor\": { type: \"c\" }\r\n\t\t\t} }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'depth_frag' ] = \"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\t#include <logdepthbuf_fragment>\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/depthRGBA_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'depthRGBA_frag' ] = \"#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvec4 pack_depth( const in float depth ) {\\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\tres -= res.xxyz * bit_mask;\\n\treturn res;\\n}\\nvoid main() {\\n\t#include <logdepthbuf_fragment>\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\t#else\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/depthRGBA_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'depthRGBA_vert' ] = \"#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\nvec4 pack1K ( float depth ) {\\n\tdepth /= 1000.0;\\n\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\tres -= res.xxyz * bitMsk;\\n\treturn res;\\n}\\nfloat unpack1K ( vec4 color ) {\\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\treturn dot( color, bitSh ) * 1000.0;\\n}\\nvoid main () {\\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <lights_phong_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_phong_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshstandard_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshstandard_frag' ] = \"#define STANDARD\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_standard_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_standard_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/meshstandard_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'meshstandard_vert' ] = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/points_frag.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib/points_vert.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['meshbasic_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['meshbasic_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['meshlambert_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['meshlambert_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['meshphong_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['meshphong_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'standard': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"roughnessmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"metalnessmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"roughness\": { type: \"f\", value: 0.5 },\r\n\t\t\t\t\t\"metalness\": { type: \"f\", value: 0 },\r\n\t\t\t\t\t\"envMapIntensity\" : { type: \"f\", value: 1 } // temporary\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['meshstandard_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['meshstandard_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['points_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['points_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['linedashed_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['linedashed_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['depth_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['depth_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['normal_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['normal_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 }\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['cube_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['cube_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 }\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['equirect_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['equirect_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['depthRGBA_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['depthRGBA_frag']\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\t'distanceRGBA': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\r\n\t\t\tfragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = - 1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = - 1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// physical lights\r\n\t\r\n\t\tthis.physicallyCorrectLights = false;\r\n\t\r\n\t\t// tone mapping\r\n\t\r\n\t\tthis.toneMapping = THREE.LinearToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\t\tthis.toneMappingWhitePoint = 1.0;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentRenderTarget = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_currentScissor = new THREE.Vector4(),\r\n\t\t_currentScissorTest = null,\r\n\t\r\n\t\t_currentViewport = new THREE.Vector4(),\r\n\t\r\n\t\t//\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t//\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\t_pixelRatio = 1,\r\n\t\r\n\t\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\r\n\t\t_scissorTest = false,\r\n\t\r\n\t\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t// camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\thash: '',\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: [],\r\n\t\r\n\t\t\tshadows: [],\r\n\t\t\tshadowsPointLight: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\t\r\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\t\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\t\r\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\tvar lightCache = new THREE.WebGLLights();\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction getTargetPixelRatio() {\r\n\t\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.properties = properties;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn _pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value === undefined ) return;\r\n\t\r\n\t\t\t_pixelRatio = value;\r\n\t\r\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * _pixelRatio;\r\n\t\t\t_canvas.height = height * _pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\tthis.clear( true, false, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\tthis.clear( false, true, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\tthis.clear( false, false, true );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\r\n\t\t\tif ( ! renderTarget || textureProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget.texture );\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar dataStart = 0;\r\n\t\t\tvar dataCount = Infinity;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tdataCount = index.count;\r\n\t\r\n\t\t\t} else if ( position !== undefined ) {\r\n\t\r\n\t\t\t\tdataCount = position.count;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\t\tvar rangeCount = geometry.drawRange.count;\r\n\t\r\n\t\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\t\r\n\t\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\t\r\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tswitch ( object.drawMode ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.TrianglesDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.TriangleStripDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.TriangleFanDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction absNumericalSort( a, b ) {\r\n\t\r\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = - 1;\r\n\t\t\ttransparentObjectsLastIndex = - 1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene, camera );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsetupLights( lights, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tif ( renderTarget === undefined ) {\r\n\t\r\n\t\t\t\trenderTarget = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\t\trenderObjects( opaqueObjects, camera, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\t\r\n\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\r\n\t\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\r\n\t\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object.layers.test( camera.layers ) ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\t\r\n\t\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, _lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms,\r\n\t\t\t\tuniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\tmaterial instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\tmaterial instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.lights ) {\r\n\t\r\n\t\t\t\t// store the light setup it was created for\r\n\t\r\n\t\t\t\tmaterialProperties.lightsHash = _lights.hash;\r\n\t\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\t\r\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\r\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\r\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\r\n\t\t\t\tuniforms.pointLights.value = _lights.point;\r\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\r\n\t\r\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// detect dynamic uniforms\r\n\t\r\n\t\t\tmaterialProperties.hasDynamicUniforms = false;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = materialProperties.uniformsList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = materialProperties.uniformsList[ j ][ 0 ];\r\n\t\r\n\t\t\t\tif ( uniform.dynamic === true ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.hasDynamicUniforms = true;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( materialProperties.program === undefined ) {\r\n\t\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( materialProperties.lightsHash !== undefined &&\r\n\t\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\r\n\t\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.needsUpdate ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t\t_currentCamera = camera;\r\n\t\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\t\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( p_uniforms.toneMappingExposure !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.toneMappingExposure, _this.toneMappingExposure );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( p_uniforms.toneMappingWhitePoint !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.toneMappingWhitePoint, _this.toneMappingWhitePoint );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\t// the current material requires lighting info\r\n\t\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\t\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( materialProperties.hasDynamicUniforms === true ) {\r\n\t\r\n\t\t\t\tupdateDynamicUniforms( materialProperties.uniformsList, object, camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateDynamicUniforms ( uniforms, object, camera ) {\r\n\t\r\n\t\t\tvar dynamicUniforms = [];\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\t\t\tvar onUpdateCallback = uniform.onUpdateCallback;\r\n\t\r\n\t\t\t\tif ( onUpdateCallback !== undefined ) {\r\n\t\r\n\t\t\t\t\tonUpdateCallback.bind( uniform )( object, camera );\r\n\t\t\t\t\tdynamicUniforms.push( uniforms[ j ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsGeneric( dynamicUniforms );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.roughnessMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\t\r\n\t\t\t} else if ( material.metalnessMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPoints ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\t\tuniforms.scale.value = _canvas.clientHeight / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsStandard ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\t\r\n\t\t\tif ( material.roughnessMap ) {\r\n\t\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.metalnessMap ) {\r\n\t\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.envMap ) {\r\n\t\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniform( uniform, type, location, value ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tif ( type === '1i' ) {\r\n\t\r\n\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t} else if ( type === '1f' ) {\r\n\t\r\n\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t} else if ( type === '2f' ) {\r\n\t\r\n\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\r\n\t\t\t} else if ( type === '3f' ) {\r\n\t\r\n\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\r\n\t\t\t} else if ( type === '4f' ) {\r\n\t\r\n\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\r\n\t\t\t} else if ( type === '1iv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t} else if ( type === '3iv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t} else if ( type === '1fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === '2fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === '3fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === '4fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'Matrix2fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix2fv( location, false, value );\r\n\t\r\n\t\t\t} else if ( type === 'Matrix3fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\r\n\t\t\t} else if ( type === 'Matrix4fv' ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t} else if ( type === 'i' ) {\r\n\t\r\n\t\t\t\t// single integer\r\n\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'f' ) {\r\n\t\r\n\t\t\t\t// single float\r\n\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'v2' ) {\r\n\t\r\n\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t} else if ( type === 'v3' ) {\r\n\t\r\n\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t} else if ( type === 'v4' ) {\r\n\t\r\n\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t} else if ( type === 'c' ) {\r\n\t\r\n\t\t\t\t// single THREE.Color\r\n\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t} else if ( type === 's' ) {\r\n\t\r\n\t\t\t\t// TODO: Optimize this\r\n\t\r\n\t\t\t\tvar properties = uniform.properties;\r\n\t\r\n\t\t\t\tfor ( var name in properties ) {\r\n\t\r\n\t\t\t\t\tvar property = properties[ name ];\r\n\t\t\t\t\tvar locationProperty = location[ name ];\r\n\t\t\t\t\tvar valueProperty = value[ name ];\r\n\t\r\n\t\t\t\t\tloadUniform( property, property.type, locationProperty, valueProperty );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( type === 'sa' ) {\r\n\t\r\n\t\t\t\t// TODO: Optimize this\r\n\t\r\n\t\t\t\tvar properties = uniform.properties;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = value.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var name in properties ) {\r\n\t\r\n\t\t\t\t\t\tvar property = properties[ name ];\r\n\t\t\t\t\t\tvar locationProperty =  location[ i ][ name ];\r\n\t\t\t\t\t\tvar valueProperty = value[ i ][ name ];\r\n\t\r\n\t\t\t\t\t\tloadUniform( property, property.type, locationProperty, valueProperty );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( type === 'iv1' ) {\r\n\t\r\n\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'iv' ) {\r\n\t\r\n\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'fv1' ) {\r\n\t\r\n\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'fv' ) {\r\n\t\r\n\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t} else if ( type === 'v2v' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t} else if ( type === 'v3v' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t} else if ( type === 'v4v' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t} else if ( type === 'm2' ) {\r\n\t\r\n\t\t\t\t// single THREE.Matrix2\r\n\t\t\t\t_gl.uniformMatrix2fv( location, false, value.elements );\r\n\t\r\n\t\t\t} else if ( type === 'm3' ) {\r\n\t\r\n\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t} else if ( type === 'm3v' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t} else if ( type === 'm4' ) {\r\n\t\r\n\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t} else if ( type === 'm4v' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t} else if ( type === 't' ) {\r\n\t\r\n\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\ttexture = value;\r\n\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\tif ( ! texture ) return;\r\n\t\r\n\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( type === 'tv' ) {\r\n\t\r\n\t\t\t\t// array of THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( texture.image instanceof Array && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric( uniforms ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = uniforms.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ i ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar location = uniforms[ i ][ 1 ];\r\n\t\t\t\tvar value = uniform.value;\r\n\t\r\n\t\t\t\tloadUniform( uniform, type, location, value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirectionalLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tshadowsLength = 0;\r\n\t\r\n\t\t\t_lights.shadowsPointLight = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tr += color.r * intensity;\r\n\t\t\t\t\tg += color.g * intensity;\r\n\t\t\t\t\tb += color.b * intensity;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tvar uniforms = lightCache.get( light );\r\n\t\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\t\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\t\r\n\t\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = light.shadow.map;\r\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tvar uniforms = lightCache.get( light );\r\n\t\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\t\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\t\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\t\r\n\t\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = light.shadow.map;\r\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tvar uniforms = lightCache.get( light );\r\n\t\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\t\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\t\r\n\t\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = light.shadow.map;\r\n\t\r\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\r\n\t\r\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\tvar uniforms = lightCache.get( light );\r\n\t\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\t\r\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\t\r\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_lights.ambient[ 0 ] = r;\r\n\t\t\t_lights.ambient[ 1 ] = g;\r\n\t\t\t_lights.ambient[ 2 ] = b;\r\n\t\r\n\t\t\t_lights.directional.length = directionalLength;\r\n\t\t\t_lights.spot.length = spotLength;\r\n\t\t\t_lights.point.length = pointLength;\r\n\t\t\t_lights.hemi.length = hemiLength;\r\n\t\r\n\t\t\t_lights.shadows.length = shadowsLength;\r\n\t\r\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + shadowsLength;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isPowerOfTwoImage ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\t\r\n\t\t\t\timage = makePowerOfTwo( image );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPowerOfTwo( image ) {\r\n\t\r\n\t\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\t\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction makePowerOfTwo( image ) {\r\n\t\r\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\t\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\t\r\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\r\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\r\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\t\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Setup GL resources for a non-texture depth buffer\r\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Set up GL resources for the render target\r\n\t\tfunction setupRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height );\r\n\t\r\n\t\t\t// Setup framebuffer\r\n\t\r\n\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Setup color buffer\r\n\t\r\n\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Setup depth and stencil buffers\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer ) {\r\n\t\r\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getCurrentRenderTarget = function() {\r\n\t\r\n\t\t\treturn _currentRenderTarget;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tsetupRenderTarget( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\t\tvar framebuffer;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\t\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\t\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\t\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\r\n\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\t\r\n\t\t\tif ( framebuffer ) {\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttry {\r\n\t\r\n\t\t\t\t\tvar texture = renderTarget.texture;\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat\r\n\t\t\t\t\t\t&& paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.type !== THREE.UnsignedByteType\r\n\t\t\t\t\t\t&& paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE )\r\n\t\t\t\t\t\t&& ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) )\r\n\t\t\t\t\t\t&& ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} finally {\r\n\t\r\n\t\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\t\r\n\t\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\t\r\n\t\t\tstate.bindTexture( target, texture );\r\n\t\t\t_gl.generateMipmap( target );\r\n\t\t\tstate.bindTexture( target, null );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Marius Kintel / https://github.com/kintel\r\n\t */\r\n\t\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\t\r\n\t\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy );\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\t\tthis.scissor.set( 0, 0, width, height );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.viewport.copy( source.viewport );\r\n\t\r\n\t\t\tthis.texture = source.texture.clone();\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\tthis.activeMipMapLevel = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tvar count = 0;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tcount = position.data.count;\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tif ( buffergeometry.index !== null ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( buffergeometry.index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\t// TODO\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( property.wireframe );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( geometry );\r\n\t\r\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\r\n\t\r\n\t\t\tif ( bufferproperty.wireframe ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( buffergeometry );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLLights.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLLights = function () {\r\n\t\r\n\t\tvar lights = {};\r\n\t\r\n\t\tthis.get = function ( light ) {\r\n\t\r\n\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn lights[ light.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar uniforms;\r\n\t\r\n\t\t\tswitch ( light.type ) {\r\n\t\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\r\n\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\tdecay: 0,\r\n\t\r\n\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tdecay: 0,\r\n\t\r\n\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\t\tskyColor: new THREE.Color(),\r\n\t\t\t\t\t\tgroundColor: new THREE.Color()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tlights[ light.id ] = uniforms;\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\t// TODO: Combine the regex\r\n\t\tvar structRe = /^([\\w\\d_]+)\\.([\\w\\d_]+)$/;\r\n\t\tvar arrayStructRe = /^([\\w\\d_]+)\\[(\\d+)\\]\\.([\\w\\d_]+)$/;\r\n\t\tvar arrayRe = /^([\\w\\d_]+)\\[0\\]$/;\r\n\t\r\n\t\tfunction getEncodingComponents( encoding ) {\r\n\t\r\n\t\t\tswitch ( encoding ) {\r\n\t\r\n\t\t\t\tcase THREE.LinearEncoding:\r\n\t\t\t\t\treturn [ 'Linear','( value )' ];\r\n\t\t\t\tcase THREE.sRGBEncoding:\r\n\t\t\t\t\treturn [ 'sRGB','( value )' ];\r\n\t\t\t\tcase THREE.RGBEEncoding:\r\n\t\t\t\t\treturn [ 'RGBE','( value )' ];\r\n\t\t\t\tcase THREE.RGBM7Encoding:\r\n\t\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\r\n\t\t\t\tcase THREE.RGBM16Encoding:\r\n\t\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\r\n\t\t\t\tcase THREE.RGBDEncoding:\r\n\t\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\r\n\t\t\t\tcase THREE.GammaEncoding:\r\n\t\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\t\r\n\t\t\tvar components = getEncodingComponents( encoding );\r\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\t\r\n\t\t\tvar components = getEncodingComponents( encoding );\r\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\t\r\n\t\t\tvar toneMappingName;\r\n\t\r\n\t\t\tswitch ( toneMapping ) {\r\n\t\r\n\t\t\t\tcase THREE.LinearToneMapping:\r\n\t\t\t\t\ttoneMappingName = \"Linear\";\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.ReinhardToneMapping:\r\n\t\t\t\t\ttoneMappingName = \"Reinhard\";\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.Uncharted2ToneMapping:\r\n\t\t\t\t\ttoneMappingName = \"Uncharted2\";\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase THREE.CineonToneMapping:\r\n\t\t\t\t\ttoneMappingName = \"OptimizedCineon\";\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\t\r\n\t\t\textensions = extensions || {};\r\n\t\r\n\t\t\tvar chunks = [\r\n\t\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\r\n\t\t\t];\r\n\t\r\n\t\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t//console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar matches = structRe.exec( name );\r\n\t\t\t\tif ( matches ) {\r\n\t\r\n\t\t\t\t\tvar structName = matches[ 1 ];\r\n\t\t\t\t\tvar structProperty = matches[ 2 ];\r\n\t\r\n\t\t\t\t\tvar uniformsStruct = uniforms[ structName ];\r\n\t\r\n\t\t\t\t\tif ( ! uniformsStruct ) {\r\n\t\r\n\t\t\t\t\t\tuniformsStruct = uniforms[ structName ] = {};\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tuniformsStruct[ structProperty ] = location;\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmatches = arrayStructRe.exec( name );\r\n\t\r\n\t\t\t\tif ( matches ) {\r\n\t\r\n\t\t\t\t\tvar arrayName = matches[ 1 ];\r\n\t\t\t\t\tvar arrayIndex = matches[ 2 ];\r\n\t\t\t\t\tvar arrayProperty = matches[ 3 ];\r\n\t\r\n\t\t\t\t\tvar uniformsArray = uniforms[ arrayName ];\r\n\t\r\n\t\t\t\t\tif ( ! uniformsArray ) {\r\n\t\r\n\t\t\t\t\t\tuniformsArray = uniforms[ arrayName ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar uniformsArrayIndex = uniformsArray[ arrayIndex ];\r\n\t\r\n\t\t\t\t\tif ( ! uniformsArrayIndex ) {\r\n\t\r\n\t\t\t\t\t\tuniformsArrayIndex = uniformsArray[ arrayIndex ] = {};\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tuniformsArrayIndex[ arrayProperty ] = location;\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmatches = arrayRe.exec( name );\r\n\t\r\n\t\t\t\tif ( matches ) {\r\n\t\r\n\t\t\t\t\tvar arrayName = matches[ 1 ];\r\n\t\r\n\t\t\t\t\tuniforms[ arrayName ] = location;\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction replaceLightNums( string, parameters ) {\r\n\t\r\n\t\t\treturn string\r\n\t\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction parseIncludes( string ) {\r\n\t\r\n\t\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\r\n\t\r\n\t\t\tfunction replace( match, include ) {\r\n\t\r\n\t\t\t\tvar replace = THREE.ShaderChunk[ include ];\r\n\t\r\n\t\t\t\tif ( replace === undefined ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn parseIncludes( replace );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn string.replace( pattern, replace );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction unrollLoops( string ) {\r\n\t\r\n\t\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\t\r\n\t\t\tfunction replace( match, start, end, snippet ) {\r\n\t\r\n\t\t\t\tvar unroll = '';\r\n\t\r\n\t\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\t\r\n\t\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn unroll;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn string.replace( pattern, replace );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar extensions = material.extensions;\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.CubeUVReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeUVRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tcustomExtensions,\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\t\r\n\t\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\r\n\t\r\n\t\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\r\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\r\n\t\r\n\t\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertexShader = parseIncludes( vertexShader, parameters );\r\n\t\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\t\r\n\t\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\r\n\t\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\t\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\r\n\t\r\n\t\t\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\t\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshStandardMaterial: 'standard',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\t\"roughnessMap\", \"metalnessMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\r\n\t\t\t\"shadowMapEnabled\", \"pointLightShadows\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\t\"shadowMapType\",\r\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\t\r\n\t\t\tvar encoding;\r\n\t\r\n\t\t\tif ( ! map ) {\r\n\t\r\n\t\t\t\tencoding = THREE.LinearEncoding;\r\n\t\r\n\t\t\t} else if ( map instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tencoding = map.encoding;\r\n\t\r\n\t\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\r\n\t\r\n\t\t\t\tencoding = THREE.GammaEncoding;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn encoding;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( renderer.getCurrentRenderTarget(), renderer.gammaOutput ),\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\t\r\n\t\t\t\tpointLightShadows: lights.shadowsPointLight,\r\n\t\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\r\n\t\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\t\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tfunction addLineNumbers( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_shadowMapSize = new THREE.Vector2(),\r\n\t\r\n\t\t_lookTarget = new THREE.Vector3(),\r\n\t\t_lightPositionWorld = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [],\r\n\t\r\n\t\t_MorphingFlag = 1,\r\n\t\t_SkinningFlag = 2,\r\n\t\r\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\t\r\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants );\r\n\t\r\n\t\tvar cubeDirections = [\r\n\t\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\t\r\n\t\tvar cubeUps = [\r\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\t\r\n\t\tvar cube2DViewPorts = [\r\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t\t];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\t\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\t\r\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\t\r\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\t\r\n\t\t\tvar depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\t\tuniforms: depthUniforms,\r\n\t\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\t\t\t} );\r\n\t\r\n\t\t\t_depthMaterials[ i ] = depthMaterial;\r\n\t\r\n\t\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\t\tdefines: {\r\n\t\t\t\t\t'USE_SHADOWMAP': ''\r\n\t\t\t\t},\r\n\t\t\t\tuniforms: distanceUniforms,\r\n\t\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\t\t\t} );\r\n\t\r\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tvar faceCount, isPointLight;\r\n\t\t\tvar shadows = _lights.shadows;\r\n\t\r\n\t\t\tif ( shadows.length === 0 ) return;\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// Set GL state for depth map.\r\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\t\t_gl.cullFace( scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK );\r\n\t\t\t_state.setDepthTest( true );\r\n\t\t\t_state.setScissorTest( false );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = shadows.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = shadows[ i ];\r\n\t\r\n\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\tvar shadowCamera = shadow.camera;\r\n\t\r\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tfaceCount = 6;\r\n\t\t\t\t\tisPointLight = true;\r\n\t\r\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\t\r\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t//   y Y\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t// z - Negative z direction\r\n\t\r\n\t\t\t\t\t// positive X\r\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative X\r\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Z\r\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Z\r\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Y\r\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Y\r\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\t\r\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfaceCount = 1;\r\n\t\t\t\t\tisPointLight = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( shadow.map === null ) {\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tshadowCamera.aspect = _shadowMapSize.x / _shadowMapSize.y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\t\r\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t// run a single pass if not\r\n\t\r\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\t\r\n\t\t\t\t\tif ( isPointLight ) {\r\n\t\r\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\r\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t_state.viewport( vpDimensions );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\r\n\t\r\n\t\t\t\t\t// render shadow map\r\n\t\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Restore GL state.\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar newMaterial = null;\r\n\t\r\n\t\t\tvar materialVariants = _depthMaterials;\r\n\t\t\tvar customMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\tif ( isPointLight ) {\r\n\t\r\n\t\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ! customMaterial ) {\r\n\t\r\n\t\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\r\n\t\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\t\tvar variantIndex = 0;\r\n\t\r\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\t\r\n\t\t\t\tnewMaterial = materialVariants[ variantIndex ];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewMaterial = customMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tnewMaterial.visible = material.visible;\r\n\t\t\tnewMaterial.wireframe = material.wireframe;\r\n\t\t\tnewMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\tif ( isPointLight && newMaterial.uniforms.lightPos !== undefined ) {\r\n\t\r\n\t\t\t\tnewMaterial.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn newMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera, shadowCamera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar color = new THREE.Vector4();\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\tvar attributeDivisors = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\tvar currentPremultipledAlpha = false;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentStencilWrite = null;\r\n\t\tvar currentStencilFunc = null;\r\n\t\tvar currentStencilRef = null;\r\n\t\tvar currentStencilMask = null;\r\n\t\tvar currentStencilFail  = null;\r\n\t\tvar currentStencilZFail = null;\r\n\t\tvar currentStencilZPass = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar currentScissorTest = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tvar currentClearColor = new THREE.Vector4();\r\n\t\tvar currentClearDepth = null;\r\n\t\tvar currentClearStencil = null;\r\n\t\r\n\t\tvar currentScissor = new THREE.Vector4();\r\n\t\tvar currentViewport = new THREE.Vector4();\r\n\t\r\n\t\tvar emptyTexture = gl.createTexture();\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, emptyTexture );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array( 3 ) );\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tthis.clearColor( 0, 0, 0, 1 );\r\n\t\t\tthis.clearDepth( 1 );\r\n\t\t\tthis.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\t\tattributeDivisors[ attribute ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\t\r\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\t\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.SRC_COLOR, gl.SRC_ALPHA );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\t// TODO: Rename to setDepthMask\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\t// TODO: Rename to setColorMask\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\t\r\n\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t\t currentStencilRef \t!== stencilRef \t||\r\n\t\t\t\t\t currentStencilMask !== stencilMask ) {\r\n\t\r\n\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\r\n\t\r\n\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\tcurrentStencilRef  = stencilRef;\r\n\t\t\t\tcurrentStencilMask = stencilMask;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\t\r\n\t\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t\t\t\t currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t\t currentStencilZPass !== stencilZPass ) {\r\n\t\r\n\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\r\n\t\r\n\t\t\t\tcurrentStencilFail  = stencilFail;\r\n\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setStencilTest = function ( stencilTest ) {\r\n\t\r\n\t\t\tif ( stencilTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.STENCIL_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.STENCIL_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setStencilWrite = function ( stencilWrite ) {\r\n\t\r\n\t\t\t// TODO: Rename to setStencilMask\r\n\t\r\n\t\t\tif ( currentStencilWrite !== stencilWrite ) {\r\n\t\r\n\t\t\t\tgl.stencilMask( stencilWrite );\r\n\t\t\t\tcurrentStencilWrite = stencilWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getScissorTest = function () {\r\n\t\r\n\t\t\treturn currentScissorTest;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tcurrentScissorTest = scissorTest;\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// clear values\r\n\t\r\n\t\tthis.clearColor = function ( r, g, b, a ) {\r\n\t\r\n\t\t\tcolor.set( r, g, b, a );\r\n\t\r\n\t\t\tif ( currentClearColor.equals( color ) === false ) {\r\n\t\r\n\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\tcurrentClearColor.copy( color );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function ( depth ) {\r\n\t\r\n\t\t\tif ( currentClearDepth !== depth ) {\r\n\t\r\n\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\tcurrentClearDepth = depth;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function ( stencil ) {\r\n\t\r\n\t\t\tif ( currentClearStencil !== stencil ) {\r\n\t\r\n\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\tcurrentClearStencil = stencil;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.scissor = function ( scissor ) {\r\n\t\r\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\t\r\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\t\tcurrentScissor.copy( scissor );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.viewport = function ( viewport ) {\r\n\t\r\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\t\r\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\t\tcurrentViewport.copy( viewport );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentTextureSlot = undefined;\r\n\t\t\tcurrentBoundTextures = {};\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentColorWrite = null;\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentStencilWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tfunction init() {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewport ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewport.w / viewport.z,\r\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\r\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewport.w,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.setDepthWrite( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewport.w;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewport.z &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewport.w ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tfunction init() {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\t\t\r\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.renderOrder - b.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/Three.Legacy.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tObject.defineProperties( THREE.Box2.prototype, {\r\n\t\tempty: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\t\t\treturn this.isEmpty();\r\n\t\t\t}\r\n\t\t},\r\n\t\tisIntersectionBox: {\r\n\t\t\tvalue: function ( box ) {\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\t\treturn this.intersectsBox( box );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Box3.prototype, {\r\n\t\tempty: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\t\t\treturn this.isEmpty();\r\n\t\t\t}\r\n\t\t},\r\n\t\tisIntersectionBox: {\r\n\t\t\tvalue: function ( box ) {\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\t\treturn this.intersectsBox( box );\r\n\t\t\t}\r\n\t\t},\r\n\t\tisIntersectionSphere: {\r\n\t\t\tvalue: function ( sphere ) {\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Matrix3.prototype, {\r\n\t\tmultiplyVector3: {\r\n\t\t\tvalue: function ( vector ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\t\treturn vector.applyMatrix3( this );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmultiplyVector3Array: {\r\n\t\t\tvalue: function ( a ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\t\treturn this.applyToVector3Array( a );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Matrix4.prototype, {\r\n\t\textractPosition: {\r\n\t\t\tvalue: function ( m ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\t\treturn this.copyPosition( m );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetRotationFromQuaternion: {\r\n\t\t\tvalue: function ( q ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmultiplyVector3: {\r\n\t\t\tvalue: function ( vector ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\t\treturn vector.applyProjection( this );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmultiplyVector4: {\r\n\t\t\tvalue: function ( vector ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\t\treturn vector.applyMatrix4( this );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmultiplyVector3Array: {\r\n\t\t\tvalue: function ( a ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\t\treturn this.applyToVector3Array( a );\r\n\t\t\t}\r\n\t\t},\r\n\t\trotateAxis: {\r\n\t\t\tvalue: function ( v ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\t\t\tv.transformDirection( this );\r\n\t\t\t}\r\n\t\t},\r\n\t\tcrossVector: {\r\n\t\t\tvalue: function ( vector ) {\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\t\treturn vector.applyMatrix4( this );\r\n\t\t\t}\r\n\t\t},\r\n\t\ttranslate: {\r\n\t\t\tvalue: function ( v ) {\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\trotateX: {\r\n\t\t\tvalue: function ( angle ) {\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\trotateY: {\r\n\t\t\tvalue: function ( angle ) {\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\trotateZ: {\r\n\t\t\tvalue: function ( angle ) {\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\trotateByAxis: {\r\n\t\t\tvalue: function ( axis, angle ) {\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Plane.prototype, {\r\n\t\tisIntersectionLine: {\r\n\t\t\tvalue: function ( line ) {\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\t\t\treturn this.intersectsLine( line );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Quaternion.prototype, {\r\n\t\tmultiplyVector3: {\r\n\t\t\tvalue: function ( vector ) {\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\t\treturn vector.applyQuaternion( this );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Ray.prototype, {\r\n\t\tisIntersectionBox: {\r\n\t\t\tvalue: function ( box ) {\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\t\treturn this.intersectsBox( box );\r\n\t\t\t}\r\n\t\t},\r\n\t\tisIntersectionPlane: {\r\n\t\t\tvalue: function ( plane ) {\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\t\t\treturn this.intersectsPlane( plane );\r\n\t\t\t}\r\n\t\t},\r\n\t\tisIntersectionSphere: {\r\n\t\t\tvalue: function ( sphere ) {\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.Vector3.prototype, {\r\n\t\tsetEulerFromRotationMatrix: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetEulerFromQuaternion: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPositionFromMatrix: {\r\n\t\t\tvalue: function ( m ) {\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetScaleFromMatrix: {\r\n\t\t\tvalue: function ( m ) {\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\t\t\treturn this.setFromMatrixScale( m );\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetColumnFromMatrix: {\r\n\t\t\tvalue: function ( index, matrix ) {\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vertex = function ( x, y, z ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new THREE.Vector3( x, y, z );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.Object3D.prototype, {\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\treturn this.rotation.order;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\tthis.rotation.order = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetChildByName: {\r\n\t\t\tvalue: function ( name ) {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\t\treturn this.getObjectByName( name );\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderDepth: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\ttranslate: {\r\n\t\t\tvalue: function ( distance, axis ) {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE, {\r\n\t\tPointCloud: {\r\n\t\t\tvalue: function ( geometry, material ) {\r\n\t\t\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\t\t\treturn new THREE.Points( geometry, material );\r\n\t\t\t}\r\n\t\t},\r\n\t\tParticleSystem: {\r\n\t\t\tvalue: function ( geometry, material ) {\r\n\t\t\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\t\t\treturn new THREE.Points( geometry, material );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\t\tthis.shadow.bias = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.BufferAttribute.prototype, {\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\t\treturn this.array.length;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.BufferGeometry.prototype, {\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t},\r\n\t\taddIndex: {\r\n\t\t\tvalue: function ( index ) {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\t\tthis.setIndex( index );\r\n\t\t\t}\r\n\t\t},\r\n\t\taddDrawCall: {\r\n\t\t\tvalue: function ( start, count, indexOffset ) {\r\n\t\t\t\tif ( indexOffset !== undefined ) {\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\t\t\t}\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\t\tthis.addGroup( start, count );\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearDrawCalls: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\t\tthis.clearGroups();\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputeTangents: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputeOffsets: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.Material.prototype, {\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\t\treturn new THREE.Color();\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE, {\r\n\t\tPointCloudMaterial: {\r\n\t\t\tvalue: function ( parameters ) {\r\n\t\t\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t\t}\r\n\t\t},\r\n\t\tParticleBasicMaterial: {\r\n\t\t\tvalue: function ( parameters ) {\r\n\t\t\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t\t}\r\n\t\t},\r\n\t\tParticleSystemMaterial:{\r\n\t\t\tvalue: function ( parameters ) {\r\n\t\t\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\r\n\t\tmetal: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tObject.defineProperties( THREE.ShaderMaterial.prototype, {\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.WebGLRenderer.prototype, {\r\n\t\tsupportsFloatTextures: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsHalfFloatTextures: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsStandardDerivatives: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsCompressedTextureS3TC: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsCompressedTexturePVRTC: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsBlendMinMax: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsVertexTextures: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\treturn this.capabilities.vertexTextures;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsupportsInstancedArrays: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tenableScissorTest: {\r\n\t\t\tvalue: function ( boolean ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\t\t\tthis.setScissorTest( boolean );\r\n\t\t\t}\r\n\t\t},\r\n\t\tinitMaterial: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\taddPrePlugin: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\taddPostPlugin: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateShadowMap: {\r\n\t\t\tvalue: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.type;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.cullFace;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tthis.shadowMap.cullFace = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\treturn this.texture.wrapS;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\treturn this.texture.wrapT;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\treturn this.texture.magFilter;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\treturn this.texture.minFilter;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\treturn this.texture.offset;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\tthis.texture.offset = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\treturn this.texture.repeat;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\tthis.texture.repeat = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\treturn this.texture.format;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\tthis.texture.format = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\treturn this.texture.type;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\tthis.texture.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\t\r\n\t\t\tvar loader = new THREE.TextureLoader();\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\t\r\n\t\t\tif ( mapping ) texture.mapping = mapping;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\t\r\n\t\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\t\r\n\t\t\tif ( mapping ) texture.mapping = mapping;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/extras/CurveUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.CurveUtils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ShapeUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.ShapeUtils = {\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tarea: function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttriangulate: ( function () {\r\n\t\r\n\t\t\t/**\r\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t\t * See original code and more information here:\r\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t\t *\r\n\t\t\t * ported to actionscript by Zevan Rosser\r\n\t\t\t * www.actionsnippet.com\r\n\t\t\t *\r\n\t\t\t * ported to javascript by Joshua Koo\r\n\t\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t\t *\r\n\t\t\t */\r\n\t\r\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\t\tvar p;\r\n\t\t\t\tvar ax, ay, bx, by;\r\n\t\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// takes in an contour array and returns\r\n\t\r\n\t\t\treturn function ( contour, indices ) {\r\n\t\r\n\t\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\t\tvar result = [],\r\n\t\t\t\t\tverts = [],\r\n\t\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\t\tvar u, v, w;\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar nv = n;\r\n\t\r\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t\t//return null;\r\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\t\r\n\t\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2: ( function () {\r\n\t\r\n\t\t\tfunction b2p0( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn k * k * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b2p1( t, p ) {\r\n\t\r\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b2p2( t, p ) {\r\n\t\r\n\t\t\t\treturn t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3: ( function () {\r\n\t\r\n\t\t\tfunction b3p0( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p1( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p2( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p3( t, p ) {\r\n\t\r\n\t\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Curve.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Curve,\r\n\t\r\n\t\t// Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\t\r\n\t\tgetPoint: function ( t ) {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\t\treturn null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\t\r\n\t\tgetPointAt: function ( u ) {\r\n\t\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getPoint( t );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get sequence of points using getPoint( t )\r\n\t\r\n\t\tgetPoints: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\t\tvar d, pts = [];\r\n\t\r\n\t\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn pts;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\t\tvar d, pts = [];\r\n\t\r\n\t\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn pts;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get total curve arc length\r\n\t\r\n\t\tgetLength: function () {\r\n\t\r\n\t\t\tvar lengths = this.getLengths();\r\n\t\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get list of cumulative segment lengths\r\n\t\r\n\t\tgetLengths: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\t\tif ( this.cacheArcLengths\r\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.needsUpdate = false;\r\n\t\r\n\t\t\tvar cache = [];\r\n\t\t\tvar current, last = this.getPoint( 0 );\r\n\t\t\tvar p, sum = 0;\r\n\t\r\n\t\t\tcache.push( 0 );\r\n\t\r\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\t\tsum += current.distanceTo( last );\r\n\t\t\t\tcache.push( sum );\r\n\t\t\t\tlast = current;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateArcLengths: function() {\r\n\t\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\t\tgetUtoTmapping: function ( u, distance ) {\r\n\t\r\n\t\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\t\tif ( distance ) {\r\n\t\r\n\t\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//var time = Date.now();\r\n\t\r\n\t\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t// DONE\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti = high;\r\n\t\r\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\t\tvar t = i / ( il - 1 );\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t\t// add that fractional amount to t\r\n\t\r\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\t\treturn t;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\t\r\n\t\tgetTangent: function( t ) {\r\n\t\r\n\t\t\tvar delta = 0.0001;\r\n\t\t\tvar t1 = t - delta;\r\n\t\t\tvar t2 = t + delta;\r\n\t\r\n\t\t\t// Capping in case of danger\r\n\t\r\n\t\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\t\tvar pt1 = this.getPoint( t1 );\r\n\t\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\t\treturn vec.normalize();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTangentAt: function ( u ) {\r\n\t\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getTangent( t );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t*/\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};\r\n\t*/\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\r\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar point = points[ i ];\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Font.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Font = function ( data ) {\r\n\t\r\n\t\tthis.data = data;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Font.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Font,\r\n\t\r\n\t\tgenerateShapes: function ( text, size, divisions ) {\r\n\t\r\n\t\t\tfunction createPaths( text ) {\r\n\t\r\n\t\t\t\tvar chars = String( text ).split( '' );\r\n\t\t\t\tvar scale = size / data.resolution;\r\n\t\t\t\tvar offset = 0;\r\n\t\r\n\t\t\t\tvar paths = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\r\n\t\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\t\tpaths.push( ret.path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn paths;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction createPath( c, scale, offset ) {\r\n\t\r\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\r\n\t\r\n\t\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\r\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\r\n\t\r\n\t\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\t\r\n\t\t\t\t\t\tvar action = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\t\t\tcase 'm': // moveTo\r\n\t\r\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\t\r\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\tcase 'l': // lineTo\r\n\t\r\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\t\r\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\t\r\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\t\r\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\t\r\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\r\n\t\r\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( size === undefined ) size = 100;\r\n\t\t\tif ( divisions === undefined ) divisions = 4;\r\n\t\r\n\t\t\tvar data = this.data;\r\n\t\r\n\t\t\tvar paths = createPaths( text );\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.autoClose ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions ) {\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, tx, ty;\r\n\t\r\n\t\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar item = this.actions[ i ];\r\n\t\r\n\t\t\tvar action = item.action;\r\n\t\t\tvar args = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase 'moveTo':\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'lineTo':\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'quadraticCurveTo':\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'bezierCurveTo':\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'splineThru':\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'arc':\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'ellipse':\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\r\n\t\tif ( this.autoClose ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar item = inActions[ i ];\r\n\t\r\n\t\t\t\tvar args = item.args;\r\n\t\t\t\tvar action = item.action;\r\n\t\r\n\t\t\t\tif ( action === 'moveTo' ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles;\r\n\t\r\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\treturn new THREE.ExtrudeGeometry( this, options );\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\treturn new THREE.ShapeGeometry( this, options );\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar holesPts = [];\r\n\t\r\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t\t).normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\treturn new THREE.Vector2( \r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\t\r\n\t\treturn new THREE.Vector2( \r\n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t\t).normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\t\t\tthis.closed = false;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( this.closed ) {\r\n\t\r\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\r\n\t\r\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\r\n\t\r\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint % l ];\r\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\t\r\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = function ( points ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\r\n\t\r\n\t\tTHREE.CatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\t\tthis.closed = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry;\r\n\t\r\n\t// File:src/extras/geometries/BoxBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\t\r\n\tTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\t// segments\r\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\t\r\n\t\t// these are used to calculate buffer length\r\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\r\n\t\tvar indexCount = ( vertexCount / 4 ) * 6;\r\n\t\r\n\t\t// buffers\r\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\t\tvar normals = new Float32Array( vertexCount * 3 );\r\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\t\r\n\t\t// offset variables\r\n\t\tvar vertexBufferOffset = 0;\r\n\t\tvar uvBufferOffset = 0;\r\n\t\tvar indexBufferOffset = 0;\r\n\t\tvar numberOfVertices = 0;\r\n\t\r\n\t\t// group variables\r\n\t\tvar groupStart = 0;\r\n\t\r\n\t\t// build each side of the box geometry\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\r\n\t\r\n\t\t// build geometry\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\t// helper functions\r\n\t\r\n\t\tfunction calculateVertexCount ( w, h, d ) {\r\n\t\r\n\t\t\tvar segments = 0;\r\n\t\r\n\t\t\t// calculate the amount of segments for each side\r\n\t\t\tsegments += w * h * 2; // xy\r\n\t\t\tsegments += w * d * 2; // xz\r\n\t\t\tsegments += d * h * 2; // zy\r\n\t\r\n\t\t\treturn segments * 4; // four vertices per segments\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\t\r\n\t\t\tvar segmentWidth\t= width / gridX;\r\n\t\t\tvar segmentHeight = height / gridY;\r\n\t\r\n\t\t\tvar widthHalf = width / 2;\r\n\t\t\tvar heightHalf = height / 2;\r\n\t\t\tvar depthHalf = depth / 2;\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1;\r\n\t\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\t\tvar vertexCounter = 0;\r\n\t\t\tvar groupCount = 0;\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\t// generate vertices, normals and uvs\r\n\t\r\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\t\r\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\t\r\n\t\t\t\t\t// set values to correct vector component\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\t\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\r\n\t\r\n\t\t\t\t\t// set values to correct vector component\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\r\n\t\r\n\t\t\t\t\t// uvs\r\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\r\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\t\t// update offsets and counters\r\n\t\t\t\t\tvertexBufferOffset += 3;\r\n\t\t\t\t\tuvBufferOffset += 2;\r\n\t\t\t\t\tvertexCounter += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\t// indices\r\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\t// face one\r\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\t\r\n\t\t\t\t\t// face two\r\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\t\r\n\t\t\t\t\t// update offsets and counters\r\n\t\t\t\t\tindexBufferOffset += 6;\r\n\t\t\t\t\tgroupCount += 6;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\t\r\n\t\t\t// calculate new start value for groups\r\n\t\t\tgroupStart += groupCount;\r\n\t\r\n\t\t\t// update total number of vertices\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 2 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/CylinderBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\t\r\n\tTHREE.CylinderBufferGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = Math.floor( radialSegments )  || 8;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\t// used to calculate buffer length\r\n\t\r\n\t\tvar vertexCount = calculateVertexCount();\r\n\t\tvar indexCount = calculateIndexCount();\r\n\t\r\n\t\t// buffers\r\n\t\r\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\t// helper variables\r\n\t\r\n\t\tvar index = 0, indexOffset = 0, indexArray = [], halfHeight = height / 2;\r\n\t\r\n\t\t// generate geometry\r\n\t\r\n\t\tgenerateTorso();\r\n\t\r\n\t\tif( openEnded === false ) {\r\n\t\r\n\t\t\tif( radiusTop > 0 ) {\r\n\t\r\n\t\t\t\tgenerateCap( true );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif( radiusBottom > 0 ) {\r\n\t\r\n\t\t\t\tgenerateCap( false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// build geometry\r\n\t\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', vertices );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\t// helper functions\r\n\t\r\n\t\tfunction calculateVertexCount () {\r\n\t\r\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\r\n\t\r\n\t\t\tif ( openEnded === false ) {\r\n\t\r\n\t\t\t\tcount += ( ( radialSegments + 1 ) * 2 ) + ( radialSegments * 2 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn count;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction calculateIndexCount () {\r\n\t\r\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\r\n\t\r\n\t\t\tif ( openEnded === false ) {\r\n\t\r\n\t\t\t\tcount += radialSegments * 2 * 3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn count;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction generateTorso () {\r\n\t\r\n\t\t\tvar x, y;\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\r\n\t\t\t// generate vertices, normals and uvs\r\n\t\r\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar indexRow = [];\r\n\t\r\n\t\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\t\t// calculate the radius of the current row\r\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\t\t// vertex\r\n\t\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t\t\t// normal\r\n\t\t\t\t\tnormal.copy( vertex );\r\n\t\r\n\t\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\r\n\t\t\t\t\tif( ( radiusTop === 0  && y === 0 ) || ( radiusBottom === 0  && y === heightSegments ) ) {\r\n\t\r\n\t\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\r\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\t\t// uv\r\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\t\t\t\t\tindexRow.push( index );\r\n\t\r\n\t\t\t\t\t// increase index\r\n\t\t\t\t\tindex ++;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\t\t\t\tindexArray.push( indexRow );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// generate indices\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\r\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\t\t// face one\r\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset++;\r\n\t\r\n\t\t\t\t\t// face two\r\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset++;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction generateCap ( top ) {\r\n\t\r\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\t\t\tvar uv = new THREE.Vector2();\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\t\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tcenterIndexStart = index;\r\n\t\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\t\r\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\r\n\t\r\n\t\t\t\t// normal\r\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tif( top === true ) {\r\n\t\r\n\t\t\t\t\tuv.x = x / radialSegments;\r\n\t\t\t\t\tuv.y = 0;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tuv.x = ( x - 1 ) / radialSegments;\r\n\t\t\t\t\tuv.y = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\t\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// save the index of the last center vertex\r\n\t\t\tcenterIndexEnd = index;\r\n\t\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t\t// normal\r\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tuvs.setXY( index, u, ( top === true ) ? 1 : 0 );\r\n\t\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// generate indices\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar c = centerIndexStart + x;\r\n\t\t\t\tvar i = centerIndexEnd + x;\r\n\t\r\n\t\t\t\tif( top === true ) {\r\n\t\r\n\t\t\t\t\t// face top\r\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// face bottom\r\n\t\t\t\t\tindices.setX( indexOffset, i + 1); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset++;\r\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\r\n\t\tfunction sortFunction( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\t\r\n\t // points - to create a closed torus, one must use a set of points\r\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t // segments - the number of circumference segments to create\r\n\t // phiStart - the starting radian\r\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\r\n\t //    2PI is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = Math.floor( segments ) || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || Math.PI * 2;\r\n\t\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\t\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\t\r\n\t\t// these are used to calculate buffer length\r\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\r\n\t\tvar indexCount = segments * points.length * 2 * 3;\r\n\t\r\n\t\t// buffers\r\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\t// helper variables\r\n\t\tvar index = 0, indexOffset = 0, base;\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\tvar i, j;\r\n\t\r\n\t\t// generate vertices and uvs\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar sin = Math.sin( phi );\r\n\t\t\tvar cos = Math.cos( phi );\r\n\t\r\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\t\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// generate indices\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\t\r\n\t\t\t\tbase = j + i * points.length;\r\n\t\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + points.length;\r\n\t\t\t\tvar c = base + points.length + 1;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\t\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// build geometry\r\n\t\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', vertices );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\t// generate normals\r\n\t\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\t\r\n\t\tif( phiLength === Math.PI * 2 ) {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\t\tvar n1 = new THREE.Vector3();\r\n\t\t\tvar n2 = new THREE.Vector3();\r\n\t\t\tvar n = new THREE.Vector3();\r\n\t\r\n\t\t\t// this is the buffer offset for the last line of vertices\r\n\t\t\tbase = segments * points.length * 3;\r\n\t\r\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\t\r\n\t\t\t\t// select the normal of the vertex in the first line\r\n\t\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\t\tn1.z = normals[ j + 2 ];\r\n\t\r\n\t\t\t\t// select the normal of the vertex in the last line\r\n\t\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\t\tn2.z = normals[ base + j + 2 ];\r\n\t\r\n\t\t\t\t// average normals\r\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\t\r\n\t\t\t\t// assign the new values to both normals\r\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\t\r\n\t\t\t} // next row\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points\r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\r\n\t//    2PI is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/RingBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\t\r\n\tTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 20;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\t\r\n\t\t// these are used to calculate buffer length\r\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\r\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\r\n\t\r\n\t\t// buffers\r\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\t// some helper variables\r\n\t\tvar index = 0, indexOffset = 0, segment;\r\n\t\tvar radius = innerRadius;\r\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\tvar j, i;\r\n\t\r\n\t\t// generate vertices, normals and uvs\r\n\t\r\n\t\t// values are generate from the inside of the ring to the outside\r\n\t\r\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\t\r\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t\t// normal\r\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\t\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// increase the radius for next row of vertices\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// generate indices\r\n\t\r\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\t\r\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\t\r\n\t\t\t\tsegment = i + thetaSegmentLevel;\r\n\t\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = segment;\r\n\t\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\t\tvar d = segment + 1;\r\n\t\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// build geometry\r\n\t\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', vertices );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  font: <THREE.Font>, // font\r\n\t *\r\n\t *  size: <float>, // size of the text\r\n\t *  height: <float>, // thickness to extrude text\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into text bevel goes\r\n\t *  bevelSize: <float> // how far from text outline is bevel\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar font = parameters.font;\r\n\t\r\n\t\tif ( font instanceof THREE.Font === false ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\t\treturn new THREE.Geometry();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\t\r\n\tTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\t// used to calculate buffer length\r\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\t\r\n\t\t// buffers\r\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\t\tvar normals = new Float32Array( vertexCount * 3 );\r\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\t\r\n\t\t// offset variables\r\n\t\tvar vertexBufferOffset = 0;\r\n\t\tvar uvBufferOffset = 0;\r\n\t\tvar indexBufferOffset = 0;\r\n\t\r\n\t\t// helper variables\r\n\t\tvar center = new THREE.Vector3();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\tvar j, i;\r\n\t\r\n\t\t// generate vertices, normals and uvs\r\n\t\r\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\r\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\r\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t// this vector is used to calculate the normal\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\t// normal\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\t\r\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\r\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\r\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\r\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\r\n\t\r\n\t\t\t\t// update offsets\r\n\t\t\t\tvertexBufferOffset += 3;\r\n\t\t\t\tuvBufferOffset += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// generate indices\r\n\t\r\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\t// face one\r\n\t\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\t\r\n\t\t\t\t// face two\r\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\t\r\n\t\t\t\t// update offset\r\n\t\t\t\tindexBufferOffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// build geometry\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * see: http://www.blackpawn.com/texts/pqtorus/\r\n\t */\r\n\tTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\r\n\t\t// used to calculate buffer length\r\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\t\r\n\t\t// buffers\r\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\t// helper variables\r\n\t\tvar i, j, index = 0, indexOffset = 0;\r\n\t\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\r\n\t\tvar P1 = new THREE.Vector3();\r\n\t\tvar P2 = new THREE.Vector3();\r\n\t\r\n\t\tvar B = new THREE.Vector3();\r\n\t\tvar T = new THREE.Vector3();\r\n\t\tvar N = new THREE.Vector3();\r\n\t\r\n\t\t// generate vertices, normals and uvs\r\n\t\r\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\t\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\t\r\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\t\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\t\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\t\r\n\t\t\t// calculate orthonormal basis\r\n\t\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\t\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\t\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\t\r\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\t\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\t\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\t\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\t\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\t// uv\r\n\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\tuv.y = j / radialSegments;\r\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\t\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// generate indices\r\n\t\r\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\t\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\t\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\t\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// build geometry\r\n\t\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', vertices );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\t// this function calculates the current position on the torus curve\r\n\t\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = q / p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\t\r\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed,\r\n\t\t\ttaper: taper\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\t\tvar min = Math.min( x0, x1, x2 );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\r\n\t\tfunction sortFunction( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ o ];\r\n\t\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tthis.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.isEmpty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function ( material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.material = material;\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist/bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e685bd18367de6561e65\n **/","import \"babel-polyfill\";\r\nimport * as Three from \"three\";\r\n\r\nlet text = \"hello world!\";\r\nlet renderer = new Three.WebGLRenderer();\r\nrenderer.clearDepth();\r\ndocument.getElementById(\"main\").innerText += text;\r\nlet a = async () => {\r\n    console.log(\"doSome\");\r\n};\r\n\r\na();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/app.ts\n **/","/*istanbul ignore next*/\"use strict\";\n\n/*istanbul ignore next*/require(\"core-js/shim\");\n\n/*istanbul ignore next*/require(\"babel-regenerator-runtime\");\n\n/*istanbul ignore next*/require(\"core-js/fn/regexp/escape\");\n\n/* eslint max-len: 0 */\n\nif (global._babelPolyfill) {\n  throw new Error(\"only one instance of babel-polyfill is allowed\");\n}\nglobal._babelPolyfill = true;\n\n// Should be removed in the next major release:\n\nvar DEFINE_PROPERTY = \"defineProperty\";\nfunction define(O, key, value) {\n  O[key] || Object[DEFINE_PROPERTY](O, key, {\n    writable: true,\n    configurable: true,\n    value: value\n  });\n}\n\ndefine(String.prototype, \"padLeft\", \"\".padStart);\ndefine(String.prototype, \"padRight\", \"\".padEnd);\n\n\"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill\".split(\",\").forEach(function (key) {\n  [][key] && define(Array, key, Function.call.bind([][key]));\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-polyfill/lib/index.js\n ** module id = 1\n ** module chunks = 0\n **/","require('./modules/es6.symbol');\nrequire('./modules/es6.object.create');\nrequire('./modules/es6.object.define-property');\nrequire('./modules/es6.object.define-properties');\nrequire('./modules/es6.object.get-own-property-descriptor');\nrequire('./modules/es6.object.get-prototype-of');\nrequire('./modules/es6.object.keys');\nrequire('./modules/es6.object.get-own-property-names');\nrequire('./modules/es6.object.freeze');\nrequire('./modules/es6.object.seal');\nrequire('./modules/es6.object.prevent-extensions');\nrequire('./modules/es6.object.is-frozen');\nrequire('./modules/es6.object.is-sealed');\nrequire('./modules/es6.object.is-extensible');\nrequire('./modules/es6.object.assign');\nrequire('./modules/es6.object.is');\nrequire('./modules/es6.object.set-prototype-of');\nrequire('./modules/es6.object.to-string');\nrequire('./modules/es6.function.bind');\nrequire('./modules/es6.function.name');\nrequire('./modules/es6.function.has-instance');\nrequire('./modules/es6.parse-int');\nrequire('./modules/es6.parse-float');\nrequire('./modules/es6.number.constructor');\nrequire('./modules/es6.number.to-fixed');\nrequire('./modules/es6.number.to-precision');\nrequire('./modules/es6.number.epsilon');\nrequire('./modules/es6.number.is-finite');\nrequire('./modules/es6.number.is-integer');\nrequire('./modules/es6.number.is-nan');\nrequire('./modules/es6.number.is-safe-integer');\nrequire('./modules/es6.number.max-safe-integer');\nrequire('./modules/es6.number.min-safe-integer');\nrequire('./modules/es6.number.parse-float');\nrequire('./modules/es6.number.parse-int');\nrequire('./modules/es6.math.acosh');\nrequire('./modules/es6.math.asinh');\nrequire('./modules/es6.math.atanh');\nrequire('./modules/es6.math.cbrt');\nrequire('./modules/es6.math.clz32');\nrequire('./modules/es6.math.cosh');\nrequire('./modules/es6.math.expm1');\nrequire('./modules/es6.math.fround');\nrequire('./modules/es6.math.hypot');\nrequire('./modules/es6.math.imul');\nrequire('./modules/es6.math.log10');\nrequire('./modules/es6.math.log1p');\nrequire('./modules/es6.math.log2');\nrequire('./modules/es6.math.sign');\nrequire('./modules/es6.math.sinh');\nrequire('./modules/es6.math.tanh');\nrequire('./modules/es6.math.trunc');\nrequire('./modules/es6.string.from-code-point');\nrequire('./modules/es6.string.raw');\nrequire('./modules/es6.string.trim');\nrequire('./modules/es6.string.iterator');\nrequire('./modules/es6.string.code-point-at');\nrequire('./modules/es6.string.ends-with');\nrequire('./modules/es6.string.includes');\nrequire('./modules/es6.string.repeat');\nrequire('./modules/es6.string.starts-with');\nrequire('./modules/es6.string.anchor');\nrequire('./modules/es6.string.big');\nrequire('./modules/es6.string.blink');\nrequire('./modules/es6.string.bold');\nrequire('./modules/es6.string.fixed');\nrequire('./modules/es6.string.fontcolor');\nrequire('./modules/es6.string.fontsize');\nrequire('./modules/es6.string.italics');\nrequire('./modules/es6.string.link');\nrequire('./modules/es6.string.small');\nrequire('./modules/es6.string.strike');\nrequire('./modules/es6.string.sub');\nrequire('./modules/es6.string.sup');\nrequire('./modules/es6.date.now');\nrequire('./modules/es6.date.to-json');\nrequire('./modules/es6.date.to-iso-string');\nrequire('./modules/es6.date.to-string');\nrequire('./modules/es6.date.to-primitive');\nrequire('./modules/es6.array.is-array');\nrequire('./modules/es6.array.from');\nrequire('./modules/es6.array.of');\nrequire('./modules/es6.array.join');\nrequire('./modules/es6.array.slice');\nrequire('./modules/es6.array.sort');\nrequire('./modules/es6.array.for-each');\nrequire('./modules/es6.array.map');\nrequire('./modules/es6.array.filter');\nrequire('./modules/es6.array.some');\nrequire('./modules/es6.array.every');\nrequire('./modules/es6.array.reduce');\nrequire('./modules/es6.array.reduce-right');\nrequire('./modules/es6.array.index-of');\nrequire('./modules/es6.array.last-index-of');\nrequire('./modules/es6.array.copy-within');\nrequire('./modules/es6.array.fill');\nrequire('./modules/es6.array.find');\nrequire('./modules/es6.array.find-index');\nrequire('./modules/es6.array.species');\nrequire('./modules/es6.array.iterator');\nrequire('./modules/es6.regexp.constructor');\nrequire('./modules/es6.regexp.to-string');\nrequire('./modules/es6.regexp.flags');\nrequire('./modules/es6.regexp.match');\nrequire('./modules/es6.regexp.replace');\nrequire('./modules/es6.regexp.search');\nrequire('./modules/es6.regexp.split');\nrequire('./modules/es6.promise');\nrequire('./modules/es6.map');\nrequire('./modules/es6.set');\nrequire('./modules/es6.weak-map');\nrequire('./modules/es6.weak-set');\nrequire('./modules/es6.typed.array-buffer');\nrequire('./modules/es6.typed.data-view');\nrequire('./modules/es6.typed.int8-array');\nrequire('./modules/es6.typed.uint8-array');\nrequire('./modules/es6.typed.uint8-clamped-array');\nrequire('./modules/es6.typed.int16-array');\nrequire('./modules/es6.typed.uint16-array');\nrequire('./modules/es6.typed.int32-array');\nrequire('./modules/es6.typed.uint32-array');\nrequire('./modules/es6.typed.float32-array');\nrequire('./modules/es6.typed.float64-array');\nrequire('./modules/es6.reflect.apply');\nrequire('./modules/es6.reflect.construct');\nrequire('./modules/es6.reflect.define-property');\nrequire('./modules/es6.reflect.delete-property');\nrequire('./modules/es6.reflect.enumerate');\nrequire('./modules/es6.reflect.get');\nrequire('./modules/es6.reflect.get-own-property-descriptor');\nrequire('./modules/es6.reflect.get-prototype-of');\nrequire('./modules/es6.reflect.has');\nrequire('./modules/es6.reflect.is-extensible');\nrequire('./modules/es6.reflect.own-keys');\nrequire('./modules/es6.reflect.prevent-extensions');\nrequire('./modules/es6.reflect.set');\nrequire('./modules/es6.reflect.set-prototype-of');\nrequire('./modules/es7.array.includes');\nrequire('./modules/es7.string.at');\nrequire('./modules/es7.string.pad-start');\nrequire('./modules/es7.string.pad-end');\nrequire('./modules/es7.string.trim-left');\nrequire('./modules/es7.string.trim-right');\nrequire('./modules/es7.string.match-all');\nrequire('./modules/es7.symbol.async-iterator');\nrequire('./modules/es7.symbol.observable');\nrequire('./modules/es7.object.get-own-property-descriptors');\nrequire('./modules/es7.object.values');\nrequire('./modules/es7.object.entries');\nrequire('./modules/es7.object.define-getter');\nrequire('./modules/es7.object.define-setter');\nrequire('./modules/es7.object.lookup-getter');\nrequire('./modules/es7.object.lookup-setter');\nrequire('./modules/es7.map.to-json');\nrequire('./modules/es7.set.to-json');\nrequire('./modules/es7.system.global');\nrequire('./modules/es7.error.is-error');\nrequire('./modules/es7.math.iaddh');\nrequire('./modules/es7.math.isubh');\nrequire('./modules/es7.math.imulh');\nrequire('./modules/es7.math.umulh');\nrequire('./modules/es7.reflect.define-metadata');\nrequire('./modules/es7.reflect.delete-metadata');\nrequire('./modules/es7.reflect.get-metadata');\nrequire('./modules/es7.reflect.get-metadata-keys');\nrequire('./modules/es7.reflect.get-own-metadata');\nrequire('./modules/es7.reflect.get-own-metadata-keys');\nrequire('./modules/es7.reflect.has-metadata');\nrequire('./modules/es7.reflect.has-own-metadata');\nrequire('./modules/es7.reflect.metadata');\nrequire('./modules/es7.asap');\nrequire('./modules/es7.observable');\nrequire('./modules/web.timers');\nrequire('./modules/web.immediate');\nrequire('./modules/web.dom.iterable');\nmodule.exports = require('./modules/_core');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/shim.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.symbol.js\n ** module id = 3\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_global.js\n ** module id = 4\n ** module chunks = 0\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_has.js\n ** module id = 5\n ** module chunks = 0\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_descriptors.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fails.js\n ** module id = 7\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , core      = require('./_core')\n  , hide      = require('./_hide')\n  , redefine  = require('./_redefine')\n  , ctx       = require('./_ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target)redefine(target, key, out, type & $export.U);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_export.js\n ** module id = 8\n ** module chunks = 0\n **/","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_core.js\n ** module id = 9\n ** module chunks = 0\n **/","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_hide.js\n ** module id = 10\n ** module chunks = 0\n **/","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-dp.js\n ** module id = 11\n ** module chunks = 0\n **/","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_an-object.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-object.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\r\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_ie8-dom-define.js\n ** module id = 14\n ** module chunks = 0\n **/","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_dom-create.js\n ** module id = 15\n ** module chunks = 0\n **/","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-primitive.js\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_property-desc.js\n ** module id = 17\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_redefine.js\n ** module id = 18\n ** module chunks = 0\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_uid.js\n ** module id = 19\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_ctx.js\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_a-function.js\n ** module id = 21\n ** module chunks = 0\n **/","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_meta.js\n ** module id = 22\n ** module chunks = 0\n **/","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_shared.js\n ** module id = 23\n ** module chunks = 0\n **/","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-to-string-tag.js\n ** module id = 24\n ** module chunks = 0\n **/","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks.js\n ** module id = 25\n ** module chunks = 0\n **/","exports.f = require('./_wks');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks-ext.js\n ** module id = 26\n ** module chunks = 0\n **/","var global         = require('./_global')\r\n  , core           = require('./_core')\r\n  , LIBRARY        = require('./_library')\r\n  , wksExt         = require('./_wks-ext')\r\n  , defineProperty = require('./_object-dp').f;\r\nmodule.exports = function(name){\r\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\r\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_wks-define.js\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = false;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_library.js\n ** module id = 28\n ** module chunks = 0\n **/","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_keyof.js\n ** module id = 29\n ** module chunks = 0\n **/","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\nvar $keys       = require('./_object-keys-internal')\r\n  , enumBugKeys = require('./_enum-bug-keys');\r\n\r\nmodule.exports = Object.keys || function keys(O){\r\n  return $keys(O, enumBugKeys);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-keys.js\n ** module id = 30\n ** module chunks = 0\n **/","var has          = require('./_has')\r\n  , toIObject    = require('./_to-iobject')\r\n  , arrayIndexOf = require('./_array-includes')(false)\r\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\r\n\r\nmodule.exports = function(object, names){\r\n  var O      = toIObject(object)\r\n    , i      = 0\r\n    , result = []\r\n    , key;\r\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\r\n  // Don't enum bug & hidden keys\r\n  while(names.length > i)if(has(O, key = names[i++])){\r\n    ~arrayIndexOf(result, key) || result.push(key);\r\n  }\r\n  return result;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-keys-internal.js\n ** module id = 31\n ** module chunks = 0\n **/","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-iobject.js\n ** module id = 32\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iobject.js\n ** module id = 33\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_cof.js\n ** module id = 34\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_defined.js\n ** module id = 35\n ** module chunks = 0\n **/","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-includes.js\n ** module id = 36\n ** module chunks = 0\n **/","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-length.js\n ** module id = 37\n ** module chunks = 0\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-integer.js\n ** module id = 38\n ** module chunks = 0\n **/","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-index.js\n ** module id = 39\n ** module chunks = 0\n **/","var shared = require('./_shared')('keys')\r\n  , uid    = require('./_uid');\r\nmodule.exports = function(key){\r\n  return shared[key] || (shared[key] = uid(key));\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_shared-key.js\n ** module id = 40\n ** module chunks = 0\n **/","// IE 8- don't enum bug keys\r\nmodule.exports = (\r\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n).split(',');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_enum-bug-keys.js\n ** module id = 41\n ** module chunks = 0\n **/","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_enum-keys.js\n ** module id = 42\n ** module chunks = 0\n **/","exports.f = Object.getOwnPropertySymbols;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gops.js\n ** module id = 43\n ** module chunks = 0\n **/","exports.f = {}.propertyIsEnumerable;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-pie.js\n ** module id = 44\n ** module chunks = 0\n **/","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-array.js\n ** module id = 45\n ** module chunks = 0\n **/","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\nvar anObject    = require('./_an-object')\r\n  , dPs         = require('./_object-dps')\r\n  , enumBugKeys = require('./_enum-bug-keys')\r\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\r\n  , Empty       = function(){ /* empty */ }\r\n  , PROTOTYPE   = 'prototype';\r\n\r\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\r\nvar createDict = function(){\r\n  // Thrash, waste and sodomy: IE GC bug\r\n  var iframe = require('./_dom-create')('iframe')\r\n    , i      = enumBugKeys.length\r\n    , gt     = '>'\r\n    , iframeDocument;\r\n  iframe.style.display = 'none';\r\n  require('./_html').appendChild(iframe);\r\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\r\n  // createDict = iframe.contentWindow.Object;\r\n  // html.removeChild(iframe);\r\n  iframeDocument = iframe.contentWindow.document;\r\n  iframeDocument.open();\r\n  iframeDocument.write('<script>document.F=Object</script' + gt);\r\n  iframeDocument.close();\r\n  createDict = iframeDocument.F;\r\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\r\n  return createDict();\r\n};\r\n\r\nmodule.exports = Object.create || function create(O, Properties){\r\n  var result;\r\n  if(O !== null){\r\n    Empty[PROTOTYPE] = anObject(O);\r\n    result = new Empty;\r\n    Empty[PROTOTYPE] = null;\r\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\r\n    result[IE_PROTO] = O;\r\n  } else result = createDict();\r\n  return Properties === undefined ? result : dPs(result, Properties);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-create.js\n ** module id = 46\n ** module chunks = 0\n **/","var dP       = require('./_object-dp')\r\n  , anObject = require('./_an-object')\r\n  , getKeys  = require('./_object-keys');\r\n\r\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\r\n  anObject(O);\r\n  var keys   = getKeys(Properties)\r\n    , length = keys.length\r\n    , i = 0\r\n    , P;\r\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\r\n  return O;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-dps.js\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = require('./_global').document && document.documentElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_html.js\n ** module id = 48\n ** module chunks = 0\n **/","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopn-ext.js\n ** module id = 49\n ** module chunks = 0\n **/","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\r\nvar $keys      = require('./_object-keys-internal')\r\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\r\n\r\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\r\n  return $keys(O, hiddenKeys);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopn.js\n ** module id = 50\n ** module chunks = 0\n **/","var pIE            = require('./_object-pie')\r\n  , createDesc     = require('./_property-desc')\r\n  , toIObject      = require('./_to-iobject')\r\n  , toPrimitive    = require('./_to-primitive')\r\n  , has            = require('./_has')\r\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\r\n  , gOPD           = Object.getOwnPropertyDescriptor;\r\n\r\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\r\n  O = toIObject(O);\r\n  P = toPrimitive(P, true);\r\n  if(IE8_DOM_DEFINE)try {\r\n    return gOPD(O, P);\r\n  } catch(e){ /* empty */ }\r\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gopd.js\n ** module id = 51\n ** module chunks = 0\n **/","var $export = require('./_export')\r\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\n$export($export.S, 'Object', {create: require('./_object-create')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.create.js\n ** module id = 52\n ** module chunks = 0\n **/","var $export = require('./_export');\r\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\r\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.define-property.js\n ** module id = 53\n ** module chunks = 0\n **/","var $export = require('./_export');\r\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\r\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperties: require('./_object-dps')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.define-properties.js\n ** module id = 54\n ** module chunks = 0\n **/","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject                 = require('./_to-iobject')\n  , $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function(){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-own-property-descriptor.js\n ** module id = 55\n ** module chunks = 0\n **/","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-sap.js\n ** module id = 56\n ** module chunks = 0\n **/","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-prototype-of.js\n ** module id = 57\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_to-object.js\n ** module id = 58\n ** module chunks = 0\n **/","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\r\nvar has         = require('./_has')\r\n  , toObject    = require('./_to-object')\r\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\r\n  , ObjectProto = Object.prototype;\r\n\r\nmodule.exports = Object.getPrototypeOf || function(O){\r\n  O = toObject(O);\r\n  if(has(O, IE_PROTO))return O[IE_PROTO];\r\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\r\n    return O.constructor.prototype;\r\n  } return O instanceof Object ? ObjectProto : null;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-gpo.js\n ** module id = 59\n ** module chunks = 0\n **/","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.keys.js\n ** module id = 60\n ** module chunks = 0\n **/","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function(){\n  return require('./_object-gopn-ext').f;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.get-own-property-names.js\n ** module id = 61\n ** module chunks = 0\n **/","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function($freeze){\n  return function freeze(it){\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.freeze.js\n ** module id = 62\n ** module chunks = 0\n **/","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function($seal){\n  return function seal(it){\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.seal.js\n ** module id = 63\n ** module chunks = 0\n **/","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object')\n  , meta     = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function($preventExtensions){\n  return function preventExtensions(it){\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.prevent-extensions.js\n ** module id = 64\n ** module chunks = 0\n **/","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function($isFrozen){\n  return function isFrozen(it){\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-frozen.js\n ** module id = 65\n ** module chunks = 0\n **/","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function($isSealed){\n  return function isSealed(it){\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-sealed.js\n ** module id = 66\n ** module chunks = 0\n **/","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function($isExtensible){\n  return function isExtensible(it){\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is-extensible.js\n ** module id = 67\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.assign.js\n ** module id = 68\n ** module chunks = 0\n **/","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-assign.js\n ** module id = 69\n ** module chunks = 0\n **/","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', {is: require('./_same-value')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.is.js\n ** module id = 70\n ** module chunks = 0\n **/","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y){\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_same-value.js\n ** module id = 71\n ** module chunks = 0\n **/","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.set-prototype-of.js\n ** module id = 72\n ** module chunks = 0\n **/","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-proto.js\n ** module id = 73\n ** module chunks = 0\n **/","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof')\n  , test    = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif(test + '' != '[object z]'){\n  require('./_redefine')(Object.prototype, 'toString', function toString(){\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.object.to-string.js\n ** module id = 74\n ** module chunks = 0\n **/","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_classof.js\n ** module id = 75\n ** module chunks = 0\n **/","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\r\nvar $export = require('./_export');\r\n\r\n$export($export.P, 'Function', {bind: require('./_bind')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.bind.js\n ** module id = 76\n ** module chunks = 0\n **/","'use strict';\nvar aFunction  = require('./_a-function')\n  , isObject   = require('./_is-object')\n  , invoke     = require('./_invoke')\n  , arraySlice = [].slice\n  , factories  = {};\n\nvar construct = function(F, len, args){\n  if(!(len in factories)){\n    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /*, args... */){\n  var fn       = aFunction(this)\n    , partArgs = arraySlice.call(arguments, 1);\n  var bound = function(/* args... */){\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if(isObject(fn.prototype))bound.prototype = fn.prototype;\n  return bound;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_bind.js\n ** module id = 77\n ** module chunks = 0\n **/","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_invoke.js\n ** module id = 78\n ** module chunks = 0\n **/","var dP         = require('./_object-dp').f\n  , createDesc = require('./_property-desc')\n  , has        = require('./_has')\n  , FProto     = Function.prototype\n  , nameRE     = /^\\s*function ([^ (]*)/\n  , NAME       = 'name';\n\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function(){\n    try {\n      var that = this\n        , name = ('' + that).match(nameRE)[1];\n      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));\n      return name;\n    } catch(e){\n      return '';\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.name.js\n ** module id = 79\n ** module chunks = 0\n **/","'use strict';\nvar isObject       = require('./_is-object')\n  , getPrototypeOf = require('./_object-gpo')\n  , HAS_INSTANCE   = require('./_wks')('hasInstance')\n  , FunctionProto  = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif(!(HAS_INSTANCE in FunctionProto))require('./_object-dp').f(FunctionProto, HAS_INSTANCE, {value: function(O){\n  if(typeof this != 'function' || !isObject(O))return false;\n  if(!isObject(this.prototype))return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while(O = getPrototypeOf(O))if(this.prototype === O)return true;\n  return false;\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.function.has-instance.js\n ** module id = 80\n ** module chunks = 0\n **/","var $export   = require('./_export')\r\n  , $parseInt = require('./_parse-int');\r\n// 18.2.5 parseInt(string, radix)\r\n$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.parse-int.js\n ** module id = 81\n ** module chunks = 0\n **/","var $parseInt = require('./_global').parseInt\n  , $trim     = require('./_string-trim').trim\n  , ws        = require('./_string-ws')\n  , hex       = /^[\\-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_parse-int.js\n ** module id = 82\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , defined = require('./_defined')\n  , fails   = require('./_fails')\n  , spaces  = require('./_string-ws')\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec, ALIAS){\n  var exp   = {};\n  var FORCE = fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if(ALIAS)exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-trim.js\n ** module id = 83\n ** module chunks = 0\n **/","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\r\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-ws.js\n ** module id = 84\n ** module chunks = 0\n **/","var $export     = require('./_export')\r\n  , $parseFloat = require('./_parse-float');\r\n// 18.2.4 parseFloat(string)\r\n$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.parse-float.js\n ** module id = 85\n ** module chunks = 0\n **/","var $parseFloat = require('./_global').parseFloat\n  , $trim       = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str){\n  var string = $trim(String(str), 3)\n    , result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_parse-float.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\nvar global            = require('./_global')\n  , has               = require('./_has')\n  , cof               = require('./_cof')\n  , inheritIfRequired = require('./_inherit-if-required')\n  , toPrimitive       = require('./_to-primitive')\n  , fails             = require('./_fails')\n  , gOPN              = require('./_object-gopn').f\n  , gOPD              = require('./_object-gopd').f\n  , dP                = require('./_object-dp').f\n  , $trim             = require('./_string-trim').trim\n  , NUMBER            = 'Number'\n  , $Number           = global[NUMBER]\n  , Base              = $Number\n  , proto             = $Number.prototype\n  // Opera ~12 has broken Object#toString\n  , BROKEN_COF        = cof(require('./_object-create')(proto)) == NUMBER\n  , TRIM              = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function(argument){\n  var it = toPrimitive(argument, false);\n  if(typeof it == 'string' && it.length > 2){\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0)\n      , third, radix, maxCode;\n    if(first === 43 || first === 45){\n      third = it.charCodeAt(2);\n      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if(first === 48){\n      switch(it.charCodeAt(1)){\n        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default : return +it;\n      }\n      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if(code < 48 || code > maxCode)return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){\n  $Number = function Number(value){\n    var it = arguments.length < 1 ? 0 : value\n      , that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for(var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++){\n    if(has(Base, key = keys[j]) && !has($Number, key)){\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.constructor.js\n ** module id = 87\n ** module chunks = 0\n **/","var isObject       = require('./_is-object')\r\n  , setPrototypeOf = require('./_set-proto').set;\r\nmodule.exports = function(that, target, C){\r\n  var P, S = target.constructor;\r\n  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){\r\n    setPrototypeOf(that, P);\r\n  } return that;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_inherit-if-required.js\n ** module id = 88\n ** module chunks = 0\n **/","'use strict';\r\nvar $export      = require('./_export')\r\n  , anInstance   = require('./_an-instance')\r\n  , toInteger    = require('./_to-integer')\r\n  , aNumberValue = require('./_a-number-value')\r\n  , repeat       = require('./_string-repeat')\r\n  , $toFixed     = 1..toFixed\r\n  , floor        = Math.floor\r\n  , data         = [0, 0, 0, 0, 0, 0]\r\n  , ERROR        = 'Number.toFixed: incorrect invocation!'\r\n  , ZERO         = '0';\r\n\r\nvar multiply = function(n, c){\r\n  var i  = -1\r\n    , c2 = c;\r\n  while(++i < 6){\r\n    c2 += n * data[i];\r\n    data[i] = c2 % 1e7;\r\n    c2 = floor(c2 / 1e7);\r\n  }\r\n};\r\nvar divide = function(n){\r\n  var i = 6\r\n    , c = 0;\r\n  while(--i >= 0){\r\n    c += data[i];\r\n    data[i] = floor(c / n);\r\n    c = (c % n) * 1e7;\r\n  }\r\n};\r\nvar numToString = function(){\r\n  var i = 6\r\n    , s = '';\r\n  while(--i >= 0){\r\n    if(s !== '' || i === 0 || data[i] !== 0){\r\n      var t = String(data[i]);\r\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\r\n    }\r\n  } return s;\r\n};\r\nvar pow = function(x, n, acc){\r\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\r\n};\r\nvar log = function(x){\r\n  var n  = 0\r\n    , x2 = x;\r\n  while(x2 >= 4096){\r\n    n += 12;\r\n    x2 /= 4096;\r\n  }\r\n  while(x2 >= 2){\r\n    n  += 1;\r\n    x2 /= 2;\r\n  } return n;\r\n};\r\n\r\n$export($export.P + $export.F * (!!$toFixed && (\r\n  0.00008.toFixed(3) !== '0.000' ||\r\n  0.9.toFixed(0) !== '1' ||\r\n  1.255.toFixed(2) !== '1.25' ||\r\n  1000000000000000128..toFixed(0) !== '1000000000000000128'\r\n) || !require('./_fails')(function(){\r\n  // V8 ~ Android 4.3-\r\n  $toFixed.call({});\r\n})), 'Number', {\r\n  toFixed: function toFixed(fractionDigits){\r\n    var x = aNumberValue(this, ERROR)\r\n      , f = toInteger(fractionDigits)\r\n      , s = ''\r\n      , m = ZERO\r\n      , e, z, j, k;\r\n    if(f < 0 || f > 20)throw RangeError(ERROR);\r\n    if(x != x)return 'NaN';\r\n    if(x <= -1e21 || x >= 1e21)return String(x);\r\n    if(x < 0){\r\n      s = '-';\r\n      x = -x;\r\n    }\r\n    if(x > 1e-21){\r\n      e = log(x * pow(2, 69, 1)) - 69;\r\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\r\n      z *= 0x10000000000000;\r\n      e = 52 - e;\r\n      if(e > 0){\r\n        multiply(0, z);\r\n        j = f;\r\n        while(j >= 7){\r\n          multiply(1e7, 0);\r\n          j -= 7;\r\n        }\r\n        multiply(pow(10, j, 1), 0);\r\n        j = e - 1;\r\n        while(j >= 23){\r\n          divide(1 << 23);\r\n          j -= 23;\r\n        }\r\n        divide(1 << j);\r\n        multiply(1, 1);\r\n        divide(2);\r\n        m = numToString();\r\n      } else {\r\n        multiply(0, z);\r\n        multiply(1 << -e, 0);\r\n        m = numToString() + repeat.call(ZERO, f);\r\n      }\r\n    }\r\n    if(f > 0){\r\n      k = m.length;\r\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\r\n    } else {\r\n      m = s + m;\r\n    } return m;\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.to-fixed.js\n ** module id = 89\n ** module chunks = 0\n **/","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_an-instance.js\n ** module id = 90\n ** module chunks = 0\n **/","var cof = require('./_cof');\r\nmodule.exports = function(it, msg){\r\n  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);\r\n  return +it;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_a-number-value.js\n ** module id = 91\n ** module chunks = 0\n **/","'use strict';\nvar toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n\nmodule.exports = function repeat(count){\n  var str = String(defined(this))\n    , res = ''\n    , n   = toInteger(count);\n  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n  return res;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-repeat.js\n ** module id = 92\n ** module chunks = 0\n **/","'use strict';\r\nvar $export      = require('./_export')\r\n  , $fails       = require('./_fails')\r\n  , aNumberValue = require('./_a-number-value')\r\n  , $toPrecision = 1..toPrecision;\r\n\r\n$export($export.P + $export.F * ($fails(function(){\r\n  // IE7-\r\n  return $toPrecision.call(1, undefined) !== '1';\r\n}) || !$fails(function(){\r\n  // V8 ~ Android 4.3-\r\n  $toPrecision.call({});\r\n})), 'Number', {\r\n  toPrecision: function toPrecision(precision){\r\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\r\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); \r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.to-precision.js\n ** module id = 93\n ** module chunks = 0\n **/","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.epsilon.js\n ** module id = 94\n ** module chunks = 0\n **/","// 20.1.2.2 Number.isFinite(number)\nvar $export   = require('./_export')\n  , _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it){\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-finite.js\n ** module id = 95\n ** module chunks = 0\n **/","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {isInteger: require('./_is-integer')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-integer.js\n ** module id = 96\n ** module chunks = 0\n **/","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object')\n  , floor    = Math.floor;\nmodule.exports = function isInteger(it){\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-integer.js\n ** module id = 97\n ** module chunks = 0\n **/","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number){\n    return number != number;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-nan.js\n ** module id = 98\n ** module chunks = 0\n **/","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export   = require('./_export')\n  , isInteger = require('./_is-integer')\n  , abs       = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number){\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.is-safe-integer.js\n ** module id = 99\n ** module chunks = 0\n **/","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.max-safe-integer.js\n ** module id = 100\n ** module chunks = 0\n **/","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.min-safe-integer.js\n ** module id = 101\n ** module chunks = 0\n **/","var $export     = require('./_export')\n  , $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.parse-float.js\n ** module id = 102\n ** module chunks = 0\n **/","var $export   = require('./_export')\n  , $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.number.parse-int.js\n ** module id = 103\n ** module chunks = 0\n **/","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export')\n  , log1p   = require('./_math-log1p')\n  , sqrt    = Math.sqrt\n  , $acosh  = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN \n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x){\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.acosh.js\n ** module id = 104\n ** module chunks = 0\n **/","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x){\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-log1p.js\n ** module id = 105\n ** module chunks = 0\n **/","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export')\n  , $asinh  = Math.asinh;\n\nfunction asinh(x){\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0 \n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.asinh.js\n ** module id = 106\n ** module chunks = 0\n **/","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export')\n  , $atanh  = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0 \n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x){\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.atanh.js\n ** module id = 107\n ** module chunks = 0\n **/","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export')\n  , sign    = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x){\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.cbrt.js\n ** module id = 108\n ** module chunks = 0\n **/","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x){\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-sign.js\n ** module id = 109\n ** module chunks = 0\n **/","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x){\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.clz32.js\n ** module id = 110\n ** module chunks = 0\n **/","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export')\n  , exp     = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x){\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.cosh.js\n ** module id = 111\n ** module chunks = 0\n **/","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export')\n  , $expm1  = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.expm1.js\n ** module id = 112\n ** module chunks = 0\n **/","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x){\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_math-expm1.js\n ** module id = 113\n ** module chunks = 0\n **/","// 20.2.2.16 Math.fround(x)\nvar $export   = require('./_export')\n  , sign      = require('./_math-sign')\n  , pow       = Math.pow\n  , EPSILON   = pow(2, -52)\n  , EPSILON32 = pow(2, -23)\n  , MAX32     = pow(2, 127) * (2 - EPSILON32)\n  , MIN32     = pow(2, -126);\n\nvar roundTiesToEven = function(n){\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n\n$export($export.S, 'Math', {\n  fround: function fround(x){\n    var $abs  = Math.abs(x)\n      , $sign = sign(x)\n      , a, result;\n    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n    a = (1 + EPSILON32 / EPSILON) * $abs;\n    result = a - (a - $abs);\n    if(result > MAX32 || result != result)return $sign * Infinity;\n    return $sign * result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.fround.js\n ** module id = 114\n ** module chunks = 0\n **/","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export')\n  , abs     = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n    var sum  = 0\n      , i    = 0\n      , aLen = arguments.length\n      , larg = 0\n      , arg, div;\n    while(i < aLen){\n      arg = abs(arguments[i++]);\n      if(larg < arg){\n        div  = larg / arg;\n        sum  = sum * div * div + 1;\n        larg = arg;\n      } else if(arg > 0){\n        div  = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.hypot.js\n ** module id = 115\n ** module chunks = 0\n **/","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export')\n  , $imul   = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function(){\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y){\n    var UINT16 = 0xffff\n      , xn = +x\n      , yn = +y\n      , xl = UINT16 & xn\n      , yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.imul.js\n ** module id = 116\n ** module chunks = 0\n **/","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x){\n    return Math.log(x) / Math.LN10;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log10.js\n ** module id = 117\n ** module chunks = 0\n **/","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {log1p: require('./_math-log1p')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log1p.js\n ** module id = 118\n ** module chunks = 0\n **/","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x){\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.log2.js\n ** module id = 119\n ** module chunks = 0\n **/","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {sign: require('./_math-sign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.sign.js\n ** module id = 120\n ** module chunks = 0\n **/","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export')\n  , expm1   = require('./_math-expm1')\n  , exp     = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function(){\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x){\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.sinh.js\n ** module id = 121\n ** module chunks = 0\n **/","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export')\n  , expm1   = require('./_math-expm1')\n  , exp     = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x){\n    var a = expm1(x = +x)\n      , b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.tanh.js\n ** module id = 122\n ** module chunks = 0\n **/","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it){\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.math.trunc.js\n ** module id = 123\n ** module chunks = 0\n **/","var $export        = require('./_export')\n  , toIndex        = require('./_to-index')\n  , fromCharCode   = String.fromCharCode\n  , $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars\n    var res  = []\n      , aLen = arguments.length\n      , i    = 0\n      , code;\n    while(aLen > i){\n      code = +arguments[i++];\n      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.from-code-point.js\n ** module id = 124\n ** module chunks = 0\n **/","var $export   = require('./_export')\n  , toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite){\n    var tpl  = toIObject(callSite.raw)\n      , len  = toLength(tpl.length)\n      , aLen = arguments.length\n      , res  = []\n      , i    = 0;\n    while(len > i){\n      res.push(String(tpl[i++]));\n      if(i < aLen)res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.raw.js\n ** module id = 125\n ** module chunks = 0\n **/","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function($trim){\n  return function trim(){\n    return $trim(this, 3);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.trim.js\n ** module id = 126\n ** module chunks = 0\n **/","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.iterator.js\n ** module id = 127\n ** module chunks = 0\n **/","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-at.js\n ** module id = 128\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-define.js\n ** module id = 129\n ** module chunks = 0\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iterators.js\n ** module id = 130\n ** module chunks = 0\n **/","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-create.js\n ** module id = 131\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $at     = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos){\n    return $at(this, pos);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.code-point-at.js\n ** module id = 132\n ** module chunks = 0\n **/","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export   = require('./_export')\n  , toLength  = require('./_to-length')\n  , context   = require('./_string-context')\n  , ENDS_WITH = 'endsWith'\n  , $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /*, endPosition = @length */){\n    var that = context(this, searchString, ENDS_WITH)\n      , endPosition = arguments.length > 1 ? arguments[1] : undefined\n      , len    = toLength(that.length)\n      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n      , search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.ends-with.js\n ** module id = 133\n ** module chunks = 0\n **/","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, searchString, NAME){\n  if(isRegExp(searchString))throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-context.js\n ** module id = 134\n ** module chunks = 0\n **/","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object')\n  , cof      = require('./_cof')\n  , MATCH    = require('./_wks')('match');\nmodule.exports = function(it){\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-regexp.js\n ** module id = 135\n ** module chunks = 0\n **/","var MATCH = require('./_wks')('match');\nmodule.exports = function(KEY){\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch(e){\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch(f){ /* empty */ }\n  } return true;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fails-is-regexp.js\n ** module id = 136\n ** module chunks = 0\n **/","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export  = require('./_export')\n  , context  = require('./_string-context')\n  , INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /*, position = 0 */){\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.includes.js\n ** module id = 137\n ** module chunks = 0\n **/","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.repeat.js\n ** module id = 138\n ** module chunks = 0\n **/","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export     = require('./_export')\n  , toLength    = require('./_to-length')\n  , context     = require('./_string-context')\n  , STARTS_WITH = 'startsWith'\n  , $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /*, position = 0 */){\n    var that   = context(this, searchString, STARTS_WITH)\n      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))\n      , search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.starts-with.js\n ** module id = 139\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function(createHTML){\n  return function anchor(name){\n    return createHTML(this, 'a', 'name', name);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.anchor.js\n ** module id = 140\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , fails   = require('./_fails')\n  , defined = require('./_defined')\n  , quot    = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function(string, tag, attribute, value) {\n  var S  = String(defined(string))\n    , p1 = '<' + tag;\n  if(attribute !== '')p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function(NAME, exec){\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function(){\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-html.js\n ** module id = 141\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function(createHTML){\n  return function big(){\n    return createHTML(this, 'big', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.big.js\n ** module id = 142\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function(createHTML){\n  return function blink(){\n    return createHTML(this, 'blink', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.blink.js\n ** module id = 143\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function(createHTML){\n  return function bold(){\n    return createHTML(this, 'b', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.bold.js\n ** module id = 144\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function(createHTML){\n  return function fixed(){\n    return createHTML(this, 'tt', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fixed.js\n ** module id = 145\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function(createHTML){\n  return function fontcolor(color){\n    return createHTML(this, 'font', 'color', color);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fontcolor.js\n ** module id = 146\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function(createHTML){\n  return function fontsize(size){\n    return createHTML(this, 'font', 'size', size);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.fontsize.js\n ** module id = 147\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function(createHTML){\n  return function italics(){\n    return createHTML(this, 'i', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.italics.js\n ** module id = 148\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function(createHTML){\n  return function link(url){\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.link.js\n ** module id = 149\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function(createHTML){\n  return function small(){\n    return createHTML(this, 'small', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.small.js\n ** module id = 150\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function(createHTML){\n  return function strike(){\n    return createHTML(this, 'strike', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.strike.js\n ** module id = 151\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function(createHTML){\n  return function sub(){\n    return createHTML(this, 'sub', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.sub.js\n ** module id = 152\n ** module chunks = 0\n **/","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function(createHTML){\n  return function sup(){\n    return createHTML(this, 'sup', '', '');\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.string.sup.js\n ** module id = 153\n ** module chunks = 0\n **/","// 20.3.3.1 / 15.9.4.4 Date.now()\r\nvar $export = require('./_export');\r\n\r\n$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.now.js\n ** module id = 154\n ** module chunks = 0\n **/","'use strict';\nvar $export     = require('./_export')\n  , toObject    = require('./_to-object')\n  , toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function(){\n  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;\n}), 'Date', {\n  toJSON: function toJSON(key){\n    var O  = toObject(this)\n      , pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-json.js\n ** module id = 155\n ** module chunks = 0\n **/","'use strict';\r\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\r\nvar $export = require('./_export')\r\n  , fails   = require('./_fails')\r\n  , getTime = Date.prototype.getTime;\r\n\r\nvar lz = function(num){\r\n  return num > 9 ? num : '0' + num;\r\n};\r\n\r\n// PhantomJS / old WebKit has a broken implementations\r\n$export($export.P + $export.F * (fails(function(){\r\n  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';\r\n}) || !fails(function(){\r\n  new Date(NaN).toISOString();\r\n})), 'Date', {\r\n  toISOString: function toISOString(){\r\n    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');\r\n    var d = this\r\n      , y = d.getUTCFullYear()\r\n      , m = d.getUTCMilliseconds()\r\n      , s = y < 0 ? '-' : y > 9999 ? '+' : '';\r\n    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\r\n      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\r\n      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\r\n      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-iso-string.js\n ** module id = 156\n ** module chunks = 0\n **/","var DateProto    = Date.prototype\n  , INVALID_DATE = 'Invalid Date'\n  , TO_STRING    = 'toString'\n  , $toString    = DateProto[TO_STRING]\n  , getTime      = DateProto.getTime;\nif(new Date(NaN) + '' != INVALID_DATE){\n  require('./_redefine')(DateProto, TO_STRING, function toString(){\n    var value = getTime.call(this);\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-string.js\n ** module id = 157\n ** module chunks = 0\n **/","var TO_PRIMITIVE = require('./_wks')('toPrimitive')\r\n  , proto        = Date.prototype;\r\n\r\nif(!(TO_PRIMITIVE in proto))require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.date.to-primitive.js\n ** module id = 158\n ** module chunks = 0\n **/","'use strict';\r\nvar anObject    = require('./_an-object')\r\n  , toPrimitive = require('./_to-primitive')\r\n  , NUMBER      = 'number';\r\n\r\nmodule.exports = function(hint){\r\n  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');\r\n  return toPrimitive(anObject(this), hint != NUMBER);\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_date-to-primitive.js\n ** module id = 159\n ** module chunks = 0\n **/","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\r\nvar $export = require('./_export');\r\n\r\n$export($export.S, 'Array', {isArray: require('./_is-array')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.is-array.js\n ** module id = 160\n ** module chunks = 0\n **/","'use strict';\nvar ctx            = require('./_ctx')\n  , $export        = require('./_export')\n  , toObject       = require('./_to-object')\n  , call           = require('./_iter-call')\n  , isArrayIter    = require('./_is-array-iter')\n  , toLength       = require('./_to-length')\n  , createProperty = require('./_create-property')\n  , getIterFn      = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.from.js\n ** module id = 161\n ** module chunks = 0\n **/","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-call.js\n ** module id = 162\n ** module chunks = 0\n **/","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_is-array-iter.js\n ** module id = 163\n ** module chunks = 0\n **/","'use strict';\r\nvar $defineProperty = require('./_object-dp')\r\n  , createDesc      = require('./_property-desc');\r\n\r\nmodule.exports = function(object, index, value){\r\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\r\n  else object[index] = value;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_create-property.js\n ** module id = 164\n ** module chunks = 0\n **/","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/core.get-iterator-method.js\n ** module id = 165\n ** module chunks = 0\n **/","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-detect.js\n ** module id = 166\n ** module chunks = 0\n **/","'use strict';\nvar $export        = require('./_export')\n  , createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function(){\n  function F(){}\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */){\n    var index  = 0\n      , aLen   = arguments.length\n      , result = new (typeof this == 'function' ? this : Array)(aLen);\n    while(aLen > index)createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.of.js\n ** module id = 167\n ** module chunks = 0\n **/","'use strict';\r\n// 22.1.3.13 Array.prototype.join(separator)\r\nvar $export   = require('./_export')\r\n  , toIObject = require('./_to-iobject')\r\n  , arrayJoin = [].join;\r\n\r\n// fallback for not array-like strings\r\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\r\n  join: function join(separator){\r\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.join.js\n ** module id = 168\n ** module chunks = 0\n **/","var fails = require('./_fails');\r\n\r\nmodule.exports = function(method, arg){\r\n  return !!method && fails(function(){\r\n    arg ? method.call(null, function(){}, 1) : method.call(null);\r\n  });\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_strict-method.js\n ** module id = 169\n ** module chunks = 0\n **/","'use strict';\r\nvar $export    = require('./_export')\r\n  , html       = require('./_html')\r\n  , cof        = require('./_cof')\r\n  , toIndex    = require('./_to-index')\r\n  , toLength   = require('./_to-length')\r\n  , arraySlice = [].slice;\r\n\r\n// fallback for not array-like ES3 strings and DOM objects\r\n$export($export.P + $export.F * require('./_fails')(function(){\r\n  if(html)arraySlice.call(html);\r\n}), 'Array', {\r\n  slice: function slice(begin, end){\r\n    var len   = toLength(this.length)\r\n      , klass = cof(this);\r\n    end = end === undefined ? len : end;\r\n    if(klass == 'Array')return arraySlice.call(this, begin, end);\r\n    var start  = toIndex(begin, len)\r\n      , upTo   = toIndex(end, len)\r\n      , size   = toLength(upTo - start)\r\n      , cloned = Array(size)\r\n      , i      = 0;\r\n    for(; i < size; i++)cloned[i] = klass == 'String'\r\n      ? this.charAt(start + i)\r\n      : this[start + i];\r\n    return cloned;\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.slice.js\n ** module id = 170\n ** module chunks = 0\n **/","'use strict';\r\nvar $export   = require('./_export')\r\n  , aFunction = require('./_a-function')\r\n  , toObject  = require('./_to-object')\r\n  , fails     = require('./_fails')\r\n  , $sort     = [].sort\r\n  , test      = [1, 2, 3];\r\n\r\n$export($export.P + $export.F * (fails(function(){\r\n  // IE8-\r\n  test.sort(undefined);\r\n}) || !fails(function(){\r\n  // V8 bug\r\n  test.sort(null);\r\n  // Old WebKit\r\n}) || !require('./_strict-method')($sort)), 'Array', {\r\n  // 22.1.3.25 Array.prototype.sort(comparefn)\r\n  sort: function sort(comparefn){\r\n    return comparefn === undefined\r\n      ? $sort.call(toObject(this))\r\n      : $sort.call(toObject(this), aFunction(comparefn));\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.sort.js\n ** module id = 171\n ** module chunks = 0\n **/","'use strict';\r\nvar $export  = require('./_export')\r\n  , $forEach = require('./_array-methods')(0)\r\n  , STRICT   = require('./_strict-method')([].forEach, true);\r\n\r\n$export($export.P + $export.F * !STRICT, 'Array', {\r\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\r\n  forEach: function forEach(callbackfn /* , thisArg */){\r\n    return $forEach(this, callbackfn, arguments[1]);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.for-each.js\n ** module id = 172\n ** module chunks = 0\n **/","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-methods.js\n ** module id = 173\n ** module chunks = 0\n **/","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-species-create.js\n ** module id = 174\n ** module chunks = 0\n **/","var isObject = require('./_is-object')\r\n  , isArray  = require('./_is-array')\r\n  , SPECIES  = require('./_wks')('species');\r\n\r\nmodule.exports = function(original){\r\n  var C;\r\n  if(isArray(original)){\r\n    C = original.constructor;\r\n    // cross-realm fallback\r\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\r\n    if(isObject(C)){\r\n      C = C[SPECIES];\r\n      if(C === null)C = undefined;\r\n    }\r\n  } return C === undefined ? Array : C;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-species-constructor.js\n ** module id = 175\n ** module chunks = 0\n **/","'use strict';\r\nvar $export = require('./_export')\r\n  , $map    = require('./_array-methods')(1);\r\n\r\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\r\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\r\n  map: function map(callbackfn /* , thisArg */){\r\n    return $map(this, callbackfn, arguments[1]);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.map.js\n ** module id = 176\n ** module chunks = 0\n **/","'use strict';\nvar $export = require('./_export')\n  , $filter = require('./_array-methods')(2);\n\n$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */){\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.filter.js\n ** module id = 177\n ** module chunks = 0\n **/","'use strict';\r\nvar $export = require('./_export')\r\n  , $some   = require('./_array-methods')(3);\r\n\r\n$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {\r\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\r\n  some: function some(callbackfn /* , thisArg */){\r\n    return $some(this, callbackfn, arguments[1]);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.some.js\n ** module id = 178\n ** module chunks = 0\n **/","'use strict';\r\nvar $export = require('./_export')\r\n  , $every  = require('./_array-methods')(4);\r\n\r\n$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {\r\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\r\n  every: function every(callbackfn /* , thisArg */){\r\n    return $every(this, callbackfn, arguments[1]);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.every.js\n ** module id = 179\n ** module chunks = 0\n **/","'use strict';\r\nvar $export = require('./_export')\r\n  , $reduce = require('./_array-reduce');\r\n\r\n$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {\r\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\r\n  reduce: function reduce(callbackfn /* , initialValue */){\r\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.reduce.js\n ** module id = 180\n ** module chunks = 0\n **/","var aFunction = require('./_a-function')\r\n  , toObject  = require('./_to-object')\r\n  , IObject   = require('./_iobject')\r\n  , toLength  = require('./_to-length');\r\n\r\nmodule.exports = function(that, callbackfn, aLen, memo, isRight){\r\n  aFunction(callbackfn);\r\n  var O      = toObject(that)\r\n    , self   = IObject(O)\r\n    , length = toLength(O.length)\r\n    , index  = isRight ? length - 1 : 0\r\n    , i      = isRight ? -1 : 1;\r\n  if(aLen < 2)for(;;){\r\n    if(index in self){\r\n      memo = self[index];\r\n      index += i;\r\n      break;\r\n    }\r\n    index += i;\r\n    if(isRight ? index < 0 : length <= index){\r\n      throw TypeError('Reduce of empty array with no initial value');\r\n    }\r\n  }\r\n  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){\r\n    memo = callbackfn(memo, self[index], index, O);\r\n  }\r\n  return memo;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-reduce.js\n ** module id = 181\n ** module chunks = 0\n **/","'use strict';\r\nvar $export = require('./_export')\r\n  , $reduce = require('./_array-reduce');\r\n\r\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\r\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\r\n  reduceRight: function reduceRight(callbackfn /* , initialValue */){\r\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.reduce-right.js\n ** module id = 182\n ** module chunks = 0\n **/","'use strict';\r\nvar $export       = require('./_export')\r\n  , $indexOf      = require('./_array-includes')(false)\r\n  , $native       = [].indexOf\r\n  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\r\n\r\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\r\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\r\n  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){\r\n    return NEGATIVE_ZERO\r\n      // convert -0 to +0\r\n      ? $native.apply(this, arguments) || 0\r\n      : $indexOf(this, searchElement, arguments[1]);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.index-of.js\n ** module id = 183\n ** module chunks = 0\n **/","'use strict';\r\nvar $export       = require('./_export')\r\n  , toIObject     = require('./_to-iobject')\r\n  , toInteger     = require('./_to-integer')\r\n  , toLength      = require('./_to-length')\r\n  , $native       = [].lastIndexOf\r\n  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\r\n\r\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\r\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\r\n  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){\r\n    // convert -0 to +0\r\n    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;\r\n    var O      = toIObject(this)\r\n      , length = toLength(O.length)\r\n      , index  = length - 1;\r\n    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));\r\n    if(index < 0)index = length + index;\r\n    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;\r\n    return -1;\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.last-index-of.js\n ** module id = 184\n ** module chunks = 0\n **/","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', {copyWithin: require('./_array-copy-within')});\n\nrequire('./_add-to-unscopables')('copyWithin');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.copy-within.js\n ** module id = 185\n ** module chunks = 0\n **/","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object')\n  , toIndex  = require('./_to-index')\n  , toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){\n  var O     = toObject(this)\n    , len   = toLength(O.length)\n    , to    = toIndex(target, len)\n    , from  = toIndex(start, len)\n    , end   = arguments.length > 2 ? arguments[2] : undefined\n    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)\n    , inc   = 1;\n  if(from < to && to < from + count){\n    inc  = -1;\n    from += count - 1;\n    to   += count - 1;\n  }\n  while(count-- > 0){\n    if(from in O)O[to] = O[from];\n    else delete O[to];\n    to   += inc;\n    from += inc;\n  } return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-copy-within.js\n ** module id = 186\n ** module chunks = 0\n **/","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables')\n  , ArrayProto  = Array.prototype;\nif(ArrayProto[UNSCOPABLES] == undefined)require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function(key){\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_add-to-unscopables.js\n ** module id = 187\n ** module chunks = 0\n **/","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', {fill: require('./_array-fill')});\n\nrequire('./_add-to-unscopables')('fill');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.fill.js\n ** module id = 188\n ** module chunks = 0\n **/","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object')\n  , toIndex  = require('./_to-index')\n  , toLength = require('./_to-length');\nmodule.exports = function fill(value /*, start = 0, end = @length */){\n  var O      = toObject(this)\n    , length = toLength(O.length)\n    , aLen   = arguments.length\n    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)\n    , end    = aLen > 2 ? arguments[2] : undefined\n    , endPos = end === undefined ? length : toIndex(end, length);\n  while(endPos > index)O[index++] = value;\n  return O;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-fill.js\n ** module id = 189\n ** module chunks = 0\n **/","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(5)\n  , KEY     = 'find'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.find.js\n ** module id = 190\n ** module chunks = 0\n **/","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(6)\n  , KEY     = 'findIndex'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.find-index.js\n ** module id = 191\n ** module chunks = 0\n **/","require('./_set-species')('Array');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.species.js\n ** module id = 192\n ** module chunks = 0\n **/","'use strict';\nvar global      = require('./_global')\n  , dP          = require('./_object-dp')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_set-species.js\n ** module id = 193\n ** module chunks = 0\n **/","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.array.iterator.js\n ** module id = 194\n ** module chunks = 0\n **/","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_iter-step.js\n ** module id = 195\n ** module chunks = 0\n **/","var global            = require('./_global')\n  , inheritIfRequired = require('./_inherit-if-required')\n  , dP                = require('./_object-dp').f\n  , gOPN              = require('./_object-gopn').f\n  , isRegExp          = require('./_is-regexp')\n  , $flags            = require('./_flags')\n  , $RegExp           = global.RegExp\n  , Base              = $RegExp\n  , proto             = $RegExp.prototype\n  , re1               = /a/g\n  , re2               = /a/g\n  // \"new\" creates a new object, old webkit buggy here\n  , CORRECT_NEW       = new $RegExp(re1) !== re1;\n\nif(require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function(){\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))){\n  $RegExp = function RegExp(p, f){\n    var tiRE = this instanceof $RegExp\n      , piRE = isRegExp(p)\n      , fiU  = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function(key){\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function(){ return Base[key]; },\n      set: function(it){ Base[key] = it; }\n    });\n  };\n  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.constructor.js\n ** module id = 196\n ** module chunks = 0\n **/","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function(){\n  var that   = anObject(this)\n    , result = '';\n  if(that.global)     result += 'g';\n  if(that.ignoreCase) result += 'i';\n  if(that.multiline)  result += 'm';\n  if(that.unicode)    result += 'u';\n  if(that.sticky)     result += 'y';\n  return result;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_flags.js\n ** module id = 197\n ** module chunks = 0\n **/","'use strict';\r\nrequire('./es6.regexp.flags');\r\nvar anObject    = require('./_an-object')\r\n  , $flags      = require('./_flags')\r\n  , DESCRIPTORS = require('./_descriptors')\r\n  , TO_STRING   = 'toString'\r\n  , $toString   = /./[TO_STRING];\r\n\r\nvar define = function(fn){\r\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\r\n};\r\n\r\n// 21.2.5.14 RegExp.prototype.toString()\r\nif(require('./_fails')(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){\r\n  define(function toString(){\r\n    var R = anObject(this);\r\n    return '/'.concat(R.source, '/',\r\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\r\n  });\r\n// FF44- RegExp#toString has a wrong name\r\n} else if($toString.name != TO_STRING){\r\n  define(function toString(){\r\n    return $toString.call(this);\r\n  });\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.to-string.js\n ** module id = 198\n ** module chunks = 0\n **/","// 21.2.5.3 get RegExp.prototype.flags()\nif(require('./_descriptors') && /./g.flags != 'g')require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.flags.js\n ** module id = 199\n ** module chunks = 0\n **/","// @@match logic\nrequire('./_fix-re-wks')('match', 1, function(defined, MATCH, $match){\n  // 21.1.3.11 String.prototype.match(regexp)\n  return [function match(regexp){\n    'use strict';\n    var O  = defined(this)\n      , fn = regexp == undefined ? undefined : regexp[MATCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n  }, $match];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.match.js\n ** module id = 200\n ** module chunks = 0\n **/","'use strict';\nvar hide     = require('./_hide')\n  , redefine = require('./_redefine')\n  , fails    = require('./_fails')\n  , defined  = require('./_defined')\n  , wks      = require('./_wks');\n\nmodule.exports = function(KEY, length, exec){\n  var SYMBOL   = wks(KEY)\n    , fns      = exec(defined, SYMBOL, ''[KEY])\n    , strfn    = fns[0]\n    , rxfn     = fns[1];\n  if(fails(function(){\n    var O = {};\n    O[SYMBOL] = function(){ return 7; };\n    return ''[KEY](O) != 7;\n  })){\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function(string, arg){ return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function(string){ return rxfn.call(string, this); }\n    );\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_fix-re-wks.js\n ** module id = 201\n ** module chunks = 0\n **/","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function(defined, REPLACE, $replace){\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue){\n    'use strict';\n    var O  = defined(this)\n      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.replace.js\n ** module id = 202\n ** module chunks = 0\n **/","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function(defined, SEARCH, $search){\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp){\n    'use strict';\n    var O  = defined(this)\n      , fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.search.js\n ** module id = 203\n ** module chunks = 0\n **/","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  'use strict';\n  var isRegExp   = require('./_is-regexp')\n    , _split     = $split\n    , $push      = [].push\n    , $SPLIT     = 'split'\n    , LENGTH     = 'length'\n    , LAST_INDEX = 'lastIndex';\n  if(\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ){\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function(separator, limit){\n      var string = String(this);\n      if(separator === undefined && limit === 0)return [];\n      // If `separator` is not a regex, use native split\n      if(!isRegExp(separator))return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while(match = separatorCopy.exec(string)){\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if(lastIndex > lastLastIndex){\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n          });\n          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if(output[LENGTH] >= splitLimit)break;\n        }\n        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if(lastLastIndex === string[LENGTH]){\n        if(lastLength || !separatorCopy.test(''))output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n    $split = function(separator, limit){\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit){\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.regexp.split.js\n ** module id = 204\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , anObject           = require('./_an-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , setProto           = require('./_set-proto').set\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')()\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , process            = global.process\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar USE_NATIVE = !!function(){\n  try {\n    // correct subclassing with @@species support\n    var promise     = $Promise.resolve(1)\n      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch(e){ /* empty */ }\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , domain  = reaction.domain\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if(handler === true)result = value;\n          else {\n            if(domain)domain.enter();\n            result = handler(value);\n            if(domain)domain.exit();\n          }\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    var value = promise._v\n      , abrupt, handler, console;\n    if(isUnhandled(promise)){\n      abrupt = perform(function(){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if(abrupt)throw abrupt.error;\n  });\n};\nvar isUnhandled = function(promise){\n  if(promise._h == 1)return false;\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail   = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = []\n        , index     = 0\n        , remaining = 1;\n      forOf(iterable, false, function(promise){\n        var $index        = index++\n          , alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled  = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.promise.js\n ** module id = 205\n ** module chunks = 0\n **/","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method')\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_for-of.js\n ** module id = 206\n ** module chunks = 0\n **/","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_species-constructor.js\n ** module id = 207\n ** module chunks = 0\n **/","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_task.js\n ** module id = 208\n ** module chunks = 0\n **/","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_microtask.js\n ** module id = 209\n ** module chunks = 0\n **/","var redefine = require('./_redefine');\nmodule.exports = function(target, src, safe){\n  for(var key in src)redefine(target, key, src[key], safe);\n  return target;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_redefine-all.js\n ** module id = 210\n ** module chunks = 0\n **/","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.map.js\n ** module id = 211\n ** module chunks = 0\n **/","'use strict';\nvar dP          = require('./_object-dp').f\n  , create      = require('./_object-create')\n  , hide        = require('./_hide')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)dP(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-strong.js\n ** module id = 212\n ** module chunks = 0\n **/","'use strict';\nvar global            = require('./_global')\n  , $export           = require('./_export')\n  , redefine          = require('./_redefine')\n  , redefineAll       = require('./_redefine-all')\n  , meta              = require('./_meta')\n  , forOf             = require('./_for-of')\n  , anInstance        = require('./_an-instance')\n  , isObject          = require('./_is-object')\n  , fails             = require('./_fails')\n  , $iterDetect       = require('./_iter-detect')\n  , setToStringTag    = require('./_set-to-string-tag')\n  , inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  var fixMethod = function(KEY){\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function(a){\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a){\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a){\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance             = new C\n      // early implementations not supports chaining\n      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance\n      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })\n      // most early implementations doesn't supports iterables, most modern - not close it correctly\n      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new\n      // for early implementations -0 and +0 not the same\n      , BUGGY_ZERO = !IS_WEAK && fails(function(){\n        // V8 ~ Chromium 42- fails only with 5+ elements\n        var $instance = new C()\n          , index     = 5;\n        while(index--)$instance[ADDER](index, index);\n        return !$instance.has(-0);\n      });\n    if(!ACCEPT_ITERABLES){ \n      C = wrapper(function(target, iterable){\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base, target, C);\n        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if(IS_WEAK && proto.clear)delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection.js\n ** module id = 213\n ** module chunks = 0\n **/","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.set.js\n ** module id = 214\n ** module chunks = 0\n **/","'use strict';\nvar each         = require('./_array-methods')(0)\n  , redefine     = require('./_redefine')\n  , meta         = require('./_meta')\n  , assign       = require('./_object-assign')\n  , weak         = require('./_collection-weak')\n  , isObject     = require('./_is-object')\n  , has          = require('./_has')\n  , getWeak      = meta.getWeak\n  , isExtensible = Object.isExtensible\n  , uncaughtFrozenStore = weak.ufstore\n  , tmp          = {}\n  , InternalMap;\n\nvar wrapper = function(get){\n  return function WeakMap(){\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key){\n    if(isObject(key)){\n      var data = getWeak(key);\n      if(data === true)return uncaughtFrozenStore(this).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value){\n    return weak.def(this, key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')('WeakMap', wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){\n  InternalMap = weak.getConstructor(wrapper);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function(key){\n    var proto  = $WeakMap.prototype\n      , method = proto[key];\n    redefine(proto, key, function(a, b){\n      // store frozen objects on internal weakmap shim\n      if(isObject(a) && !isExtensible(a)){\n        if(!this._f)this._f = new InternalMap;\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.weak-map.js\n ** module id = 215\n ** module chunks = 0\n **/","'use strict';\nvar redefineAll       = require('./_redefine-all')\n  , getWeak           = require('./_meta').getWeak\n  , anObject          = require('./_an-object')\n  , isObject          = require('./_is-object')\n  , anInstance        = require('./_an-instance')\n  , forOf             = require('./_for-of')\n  , createArrayMethod = require('./_array-methods')\n  , $has              = require('./_has')\n  , arrayFind         = createArrayMethod(5)\n  , arrayFindIndex    = createArrayMethod(6)\n  , id                = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function(that){\n  return that._l || (that._l = new UncaughtFrozenStore);\n};\nvar UncaughtFrozenStore = function(){\n  this.a = [];\n};\nvar findUncaughtFrozen = function(store, key){\n  return arrayFind(store.a, function(it){\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function(key){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)return entry[1];\n  },\n  has: function(key){\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function(key, value){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function(key){\n    var index = arrayFindIndex(this.a, function(it){\n      return it[0] === key;\n    });\n    if(~index)this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var data = getWeak(anObject(key), true);\n    if(data === true)uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-weak.js\n ** module id = 216\n ** module chunks = 0\n **/","'use strict';\nvar weak = require('./_collection-weak');\n\n// 23.4 WeakSet Objects\nrequire('./_collection')('WeakSet', function(get){\n  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value){\n    return weak.def(this, value, true);\n  }\n}, weak, false, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.weak-set.js\n ** module id = 217\n ** module chunks = 0\n **/","'use strict';\nvar $export      = require('./_export')\n  , $typed       = require('./_typed')\n  , buffer       = require('./_typed-buffer')\n  , anObject     = require('./_an-object')\n  , toIndex      = require('./_to-index')\n  , toLength     = require('./_to-length')\n  , isObject     = require('./_is-object')\n  , TYPED_ARRAY  = require('./_wks')('typed_array')\n  , ArrayBuffer  = require('./_global').ArrayBuffer\n  , speciesConstructor = require('./_species-constructor')\n  , $ArrayBuffer = buffer.ArrayBuffer\n  , $DataView    = buffer.DataView\n  , $isView      = $typed.ABV && ArrayBuffer.isView\n  , $slice       = $ArrayBuffer.prototype.slice\n  , VIEW         = $typed.VIEW\n  , ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it){\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function(){\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end){\n    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n    var len    = anObject(this).byteLength\n      , first  = toIndex(start, len)\n      , final  = toIndex(end === undefined ? len : end, len)\n      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n      , viewS  = new $DataView(this)\n      , viewT  = new $DataView(result)\n      , index  = 0;\n    while(first < final){\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.array-buffer.js\n ** module id = 218\n ** module chunks = 0\n **/","var global = require('./_global')\n  , hide   = require('./_hide')\n  , uid    = require('./_uid')\n  , TYPED  = uid('typed_array')\n  , VIEW   = uid('view')\n  , ABV    = !!(global.ArrayBuffer && global.DataView)\n  , CONSTR = ABV\n  , i = 0, l = 9, Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile(i < l){\n  if(Typed = global[TypedArrayConstructors[i++]]){\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV:    ABV,\n  CONSTR: CONSTR,\n  TYPED:  TYPED,\n  VIEW:   VIEW\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed.js\n ** module id = 219\n ** module chunks = 0\n **/","'use strict';\nvar global         = require('./_global')\n  , DESCRIPTORS    = require('./_descriptors')\n  , LIBRARY        = require('./_library')\n  , $typed         = require('./_typed')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , fails          = require('./_fails')\n  , anInstance     = require('./_an-instance')\n  , toInteger      = require('./_to-integer')\n  , toLength       = require('./_to-length')\n  , gOPN           = require('./_object-gopn').f\n  , dP             = require('./_object-dp').f\n  , arrayFill      = require('./_array-fill')\n  , setToStringTag = require('./_set-to-string-tag')\n  , ARRAY_BUFFER   = 'ArrayBuffer'\n  , DATA_VIEW      = 'DataView'\n  , PROTOTYPE      = 'prototype'\n  , WRONG_LENGTH   = 'Wrong length!'\n  , WRONG_INDEX    = 'Wrong index!'\n  , $ArrayBuffer   = global[ARRAY_BUFFER]\n  , $DataView      = global[DATA_VIEW]\n  , Math           = global.Math\n  , parseInt       = global.parseInt\n  , RangeError     = global.RangeError\n  , Infinity       = global.Infinity\n  , BaseBuffer     = $ArrayBuffer\n  , abs            = Math.abs\n  , pow            = Math.pow\n  , min            = Math.min\n  , floor          = Math.floor\n  , log            = Math.log\n  , LN2            = Math.LN2\n  , BUFFER         = 'buffer'\n  , BYTE_LENGTH    = 'byteLength'\n  , BYTE_OFFSET    = 'byteOffset'\n  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER\n  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH\n  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nvar packIEEE754 = function(value, mLen, nBytes){\n  var buffer = Array(nBytes)\n    , eLen   = nBytes * 8 - mLen - 1\n    , eMax   = (1 << eLen) - 1\n    , eBias  = eMax >> 1\n    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0\n    , i      = 0\n    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0\n    , e, m, c;\n  value = abs(value)\n  if(value != value || value === Infinity){\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if(value * (c = pow(2, -e)) < 1){\n      e--;\n      c *= 2;\n    }\n    if(e + eBias >= 1){\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if(value * c >= 2){\n      e++;\n      c /= 2;\n    }\n    if(e + eBias >= eMax){\n      m = 0;\n      e = eMax;\n    } else if(e + eBias >= 1){\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n};\nvar unpackIEEE754 = function(buffer, mLen, nBytes){\n  var eLen  = nBytes * 8 - mLen - 1\n    , eMax  = (1 << eLen) - 1\n    , eBias = eMax >> 1\n    , nBits = eLen - 7\n    , i     = nBytes - 1\n    , s     = buffer[i--]\n    , e     = s & 127\n    , m;\n  s >>= 7;\n  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if(e === 0){\n    e = 1 - eBias;\n  } else if(e === eMax){\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n};\n\nvar unpackI32 = function(bytes){\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n};\nvar packI8 = function(it){\n  return [it & 0xff];\n};\nvar packI16 = function(it){\n  return [it & 0xff, it >> 8 & 0xff];\n};\nvar packI32 = function(it){\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n};\nvar packF64 = function(it){\n  return packIEEE754(it, 52, 8);\n};\nvar packF32 = function(it){\n  return packIEEE754(it, 23, 4);\n};\n\nvar addGetter = function(C, key, internal){\n  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});\n};\n\nvar get = function(view, bytes, index, isLittleEndian){\n  var numIndex = +index\n    , intIndex = toInteger(numIndex);\n  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b\n    , start = intIndex + view[$OFFSET]\n    , pack  = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n};\nvar set = function(view, bytes, index, conversion, value, isLittleEndian){\n  var numIndex = +index\n    , intIndex = toInteger(numIndex);\n  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b\n    , start = intIndex + view[$OFFSET]\n    , pack  = conversion(+value);\n  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n};\n\nvar validateArrayBufferArguments = function(that, length){\n  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);\n  var numberLength = +length\n    , byteLength   = toLength(numberLength);\n  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);\n  return byteLength;\n};\n\nif(!$typed.ABV){\n  $ArrayBuffer = function ArrayBuffer(length){\n    var byteLength = validateArrayBufferArguments(this, length);\n    this._b       = arrayFill.call(Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength){\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH]\n      , offset       = toInteger(byteOffset);\n    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if(DESCRIPTORS){\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset){\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset){\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /*, littleEndian */){\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /*, littleEndian */){\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /*, littleEndian */){\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /*, littleEndian */){\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /*, littleEndian */){\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /*, littleEndian */){\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value){\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value){\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /*, littleEndian */){\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /*, littleEndian */){\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if(!fails(function(){\n    new $ArrayBuffer;     // eslint-disable-line no-new\n  }) || !fails(function(){\n    new $ArrayBuffer(.5); // eslint-disable-line no-new\n  })){\n    $ArrayBuffer = function ArrayBuffer(length){\n      return new BaseBuffer(validateArrayBufferArguments(this, length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){\n      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);\n    };\n    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2))\n    , $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value){\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value){\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed-buffer.js\n ** module id = 220\n ** module chunks = 0\n **/","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.data-view.js\n ** module id = 221\n ** module chunks = 0\n **/","require('./_typed-array')('Int8', 1, function(init){\n  return function Int8Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int8-array.js\n ** module id = 222\n ** module chunks = 0\n **/","'use strict';\nif(require('./_descriptors')){\n  var LIBRARY             = require('./_library')\n    , global              = require('./_global')\n    , fails               = require('./_fails')\n    , $export             = require('./_export')\n    , $typed              = require('./_typed')\n    , $buffer             = require('./_typed-buffer')\n    , ctx                 = require('./_ctx')\n    , anInstance          = require('./_an-instance')\n    , propertyDesc        = require('./_property-desc')\n    , hide                = require('./_hide')\n    , redefineAll         = require('./_redefine-all')\n    , isInteger           = require('./_is-integer')\n    , toInteger           = require('./_to-integer')\n    , toLength            = require('./_to-length')\n    , toIndex             = require('./_to-index')\n    , toPrimitive         = require('./_to-primitive')\n    , has                 = require('./_has')\n    , same                = require('./_same-value')\n    , classof             = require('./_classof')\n    , isObject            = require('./_is-object')\n    , toObject            = require('./_to-object')\n    , isArrayIter         = require('./_is-array-iter')\n    , create              = require('./_object-create')\n    , getPrototypeOf      = require('./_object-gpo')\n    , gOPN                = require('./_object-gopn').f\n    , isIterable          = require('./core.is-iterable')\n    , getIterFn           = require('./core.get-iterator-method')\n    , uid                 = require('./_uid')\n    , wks                 = require('./_wks')\n    , createArrayMethod   = require('./_array-methods')\n    , createArrayIncludes = require('./_array-includes')\n    , speciesConstructor  = require('./_species-constructor')\n    , ArrayIterators      = require('./es6.array.iterator')\n    , Iterators           = require('./_iterators')\n    , $iterDetect         = require('./_iter-detect')\n    , setSpecies          = require('./_set-species')\n    , arrayFill           = require('./_array-fill')\n    , arrayCopyWithin     = require('./_array-copy-within')\n    , $DP                 = require('./_object-dp')\n    , $GOPD               = require('./_object-gopd')\n    , dP                  = $DP.f\n    , gOPD                = $GOPD.f\n    , RangeError          = global.RangeError\n    , TypeError           = global.TypeError\n    , Uint8Array          = global.Uint8Array\n    , ARRAY_BUFFER        = 'ArrayBuffer'\n    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER\n    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'\n    , PROTOTYPE           = 'prototype'\n    , ArrayProto          = Array[PROTOTYPE]\n    , $ArrayBuffer        = $buffer.ArrayBuffer\n    , $DataView           = $buffer.DataView\n    , arrayForEach        = createArrayMethod(0)\n    , arrayFilter         = createArrayMethod(2)\n    , arraySome           = createArrayMethod(3)\n    , arrayEvery          = createArrayMethod(4)\n    , arrayFind           = createArrayMethod(5)\n    , arrayFindIndex      = createArrayMethod(6)\n    , arrayIncludes       = createArrayIncludes(true)\n    , arrayIndexOf        = createArrayIncludes(false)\n    , arrayValues         = ArrayIterators.values\n    , arrayKeys           = ArrayIterators.keys\n    , arrayEntries        = ArrayIterators.entries\n    , arrayLastIndexOf    = ArrayProto.lastIndexOf\n    , arrayReduce         = ArrayProto.reduce\n    , arrayReduceRight    = ArrayProto.reduceRight\n    , arrayJoin           = ArrayProto.join\n    , arraySort           = ArrayProto.sort\n    , arraySlice          = ArrayProto.slice\n    , arrayToString       = ArrayProto.toString\n    , arrayToLocaleString = ArrayProto.toLocaleString\n    , ITERATOR            = wks('iterator')\n    , TAG                 = wks('toStringTag')\n    , TYPED_CONSTRUCTOR   = uid('typed_constructor')\n    , DEF_CONSTRUCTOR     = uid('def_constructor')\n    , ALL_CONSTRUCTORS    = $typed.CONSTR\n    , TYPED_ARRAY         = $typed.TYPED\n    , VIEW                = $typed.VIEW\n    , WRONG_LENGTH        = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function(O, length){\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function(){\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){\n    new Uint8Array(1).set({});\n  });\n\n  var strictToLength = function(it, SAME){\n    if(it === undefined)throw TypeError(WRONG_LENGTH);\n    var number = +it\n      , length = toLength(it);\n    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);\n    return length;\n  };\n\n  var toOffset = function(it, BYTES){\n    var offset = toInteger(it);\n    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function(it){\n    if(isObject(it) && TYPED_ARRAY in it)return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function(C, length){\n    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function(O, list){\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function(C, list){\n    var index  = 0\n      , length = list.length\n      , result = allocate(C, length);\n    while(length > index)result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function(it, key, internal){\n    dP(it, key, {get: function(){ return this._d[internal]; }});\n  };\n\n  var $from = function from(source /*, mapfn, thisArg */){\n    var O       = toObject(source)\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , iterFn  = getIterFn(O)\n      , i, length, values, result, step, iterator;\n    if(iterFn != undefined && !isArrayIter(iterFn)){\n      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){\n        values.push(step.value);\n      } O = values;\n    }\n    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);\n    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/*...items*/){\n    var index  = 0\n      , length = arguments.length\n      , result = allocate(this, length);\n    while(length > index)result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString(){\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /*, end */){\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /*, thisArg */){\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /*, thisArg */){\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /*, thisArg */){\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /*, thisArg */){\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /*, thisArg */){\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /*, fromIndex */){\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /*, fromIndex */){\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator){ // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /*, thisArg */){\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse(){\n      var that   = this\n        , length = validate(that).length\n        , middle = Math.floor(length / 2)\n        , index  = 0\n        , value;\n      while(index < middle){\n        value         = that[index];\n        that[index++] = that[--length];\n        that[length]  = value;\n      } return that;\n    },\n    some: function some(callbackfn /*, thisArg */){\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn){\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end){\n      var O      = validate(this)\n        , length = O.length\n        , $begin = toIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end){\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /*, offset */){\n    validate(this);\n    var offset = toOffset(arguments[1], 1)\n      , length = this.length\n      , src    = toObject(arrayLike)\n      , len    = toLength(src.length)\n      , index  = 0;\n    if(len + offset > length)throw RangeError(WRONG_LENGTH);\n    while(index < len)this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries(){\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys(){\n      return arrayKeys.call(validate(this));\n    },\n    values: function values(){\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function(target, key){\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key){\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc){\n    if(isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ){\n      target[key] = desc.value;\n      return target;\n    } else return dP(target, key, desc);\n  };\n\n  if(!ALL_CONSTRUCTORS){\n    $GOPD.f = $getDesc;\n    $DP.f   = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty:           $setDesc\n  });\n\n  if(fails(function(){ arrayToString.call({}); })){\n    arrayToString = arrayToLocaleString = function toString(){\n      return arrayJoin.call(this);\n    }\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice:          $slice,\n    set:            $set,\n    constructor:    function(){ /* noop */ },\n    toString:       arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function(){ return this[TYPED_ARRAY]; }\n  });\n\n  module.exports = function(KEY, BYTES, wrapper, CLAMPED){\n    CLAMPED = !!CLAMPED;\n    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'\n      , ISNT_UINT8 = NAME != 'Uint8Array'\n      , GETTER     = 'get' + KEY\n      , SETTER     = 'set' + KEY\n      , TypedArray = global[NAME]\n      , Base       = TypedArray || {}\n      , TAC        = TypedArray && getPrototypeOf(TypedArray)\n      , FORCED     = !TypedArray || !$typed.ABV\n      , O          = {}\n      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function(that, index){\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function(that, index, value){\n      var data = that._d;\n      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function(that, index){\n      dP(that, index, {\n        get: function(){\n          return getter(this, index);\n        },\n        set: function(value){\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if(FORCED){\n      TypedArray = wrapper(function(that, data, $offset, $length){\n        anInstance(that, TypedArray, NAME, '_d');\n        var index  = 0\n          , offset = 0\n          , buffer, byteLength, length, klass;\n        if(!isObject(data)){\n          length     = strictToLength(data, true)\n          byteLength = length * BYTES;\n          buffer     = new $ArrayBuffer(byteLength);\n        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if($length === undefined){\n            if($len % BYTES)throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if(byteLength < 0)throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if(TYPED_ARRAY in data){\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while(index < length)addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if(!$iterDetect(function(iter){\n      // V8 works with iterators, but fails in many other cases\n      // https://code.google.com/p/v8/issues/detail?id=4552\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)){\n      TypedArray = wrapper(function(that, data, $offset, $length){\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));\n        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if(TYPED_ARRAY in data)return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){\n        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator   = TypedArrayPrototype[ITERATOR]\n      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)\n      , $iterator         = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){\n      dP(TypedArrayPrototype, TAG, {\n        get: function(){ return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES,\n      from: $from,\n      of: $of\n    });\n\n    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});\n\n    $export($export.P + $export.F * fails(function(){\n      new TypedArray(1).slice();\n    }), NAME, {slice: $slice});\n\n    $export($export.P + $export.F * (fails(function(){\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()\n    }) || !fails(function(){\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, {toLocaleString: $toLocaleString});\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function(){ /* empty */ };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_typed-array.js\n ** module id = 223\n ** module chunks = 0\n **/","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function(it){\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/core.is-iterable.js\n ** module id = 224\n ** module chunks = 0\n **/","require('./_typed-array')('Uint8', 1, function(init){\n  return function Uint8Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint8-array.js\n ** module id = 225\n ** module chunks = 0\n **/","require('./_typed-array')('Uint8', 1, function(init){\n  return function Uint8ClampedArray(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint8-clamped-array.js\n ** module id = 226\n ** module chunks = 0\n **/","require('./_typed-array')('Int16', 2, function(init){\n  return function Int16Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int16-array.js\n ** module id = 227\n ** module chunks = 0\n **/","require('./_typed-array')('Uint16', 2, function(init){\n  return function Uint16Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint16-array.js\n ** module id = 228\n ** module chunks = 0\n **/","require('./_typed-array')('Int32', 4, function(init){\n  return function Int32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.int32-array.js\n ** module id = 229\n ** module chunks = 0\n **/","require('./_typed-array')('Uint32', 4, function(init){\n  return function Uint32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.uint32-array.js\n ** module id = 230\n ** module chunks = 0\n **/","require('./_typed-array')('Float32', 4, function(init){\n  return function Float32Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.float32-array.js\n ** module id = 231\n ** module chunks = 0\n **/","require('./_typed-array')('Float64', 8, function(init){\n  return function Float64Array(data, byteOffset, length){\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.typed.float64-array.js\n ** module id = 232\n ** module chunks = 0\n **/","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export   = require('./_export')\n  , aFunction = require('./_a-function')\n  , anObject  = require('./_an-object')\n  , _apply    = Function.apply;\n\n$export($export.S, 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList){\n    return _apply.call(aFunction(target), thisArgument, anObject(argumentsList));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.apply.js\n ** module id = 233\n ** module chunks = 0\n **/","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export   = require('./_export')\n  , create    = require('./_object-create')\n  , aFunction = require('./_a-function')\n  , anObject  = require('./_an-object')\n  , isObject  = require('./_is-object')\n  , bind      = require('./_bind');\n\n// MS Edge supports only 2 arguments\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\n$export($export.S + $export.F * require('./_fails')(function(){\n  function F(){}\n  return !(Reflect.construct(function(){}, [], F) instanceof F);\n}), 'Reflect', {\n  construct: function construct(Target, args /*, newTarget*/){\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if(Target == newTarget){\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch(args.length){\n        case 0: return new Target;\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args));\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto    = newTarget.prototype\n      , instance = create(isObject(proto) ? proto : Object.prototype)\n      , result   = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.construct.js\n ** module id = 234\n ** module chunks = 0\n **/","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP          = require('./_object-dp')\n  , $export     = require('./_export')\n  , anObject    = require('./_an-object')\n  , toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function(){\n  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes){\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.define-property.js\n ** module id = 235\n ** module chunks = 0\n **/","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export  = require('./_export')\n  , gOPD     = require('./_object-gopd').f\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey){\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.delete-property.js\n ** module id = 236\n ** module chunks = 0\n **/","'use strict';\n// 26.1.5 Reflect.enumerate(target)\nvar $export  = require('./_export')\n  , anObject = require('./_an-object');\nvar Enumerate = function(iterated){\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = []       // keys\n    , key;\n  for(key in iterated)keys.push(key);\n};\nrequire('./_iter-create')(Enumerate, 'Object', function(){\n  var that = this\n    , keys = that._k\n    , key;\n  do {\n    if(that._i >= keys.length)return {value: undefined, done: true};\n  } while(!((key = keys[that._i++]) in that._t));\n  return {value: key, done: false};\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target){\n    return new Enumerate(target);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.enumerate.js\n ** module id = 237\n ** module chunks = 0\n **/","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD           = require('./_object-gopd')\n  , getPrototypeOf = require('./_object-gpo')\n  , has            = require('./_has')\n  , $export        = require('./_export')\n  , isObject       = require('./_is-object')\n  , anObject       = require('./_an-object');\n\nfunction get(target, propertyKey/*, receiver*/){\n  var receiver = arguments.length < 3 ? target : arguments[2]\n    , desc, proto;\n  if(anObject(target) === receiver)return target[propertyKey];\n  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', {get: get});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get.js\n ** module id = 238\n ** module chunks = 0\n **/","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD     = require('./_object-gopd')\n  , $export  = require('./_export')\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get-own-property-descriptor.js\n ** module id = 239\n ** module chunks = 0\n **/","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export  = require('./_export')\n  , getProto = require('./_object-gpo')\n  , anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target){\n    return getProto(anObject(target));\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.get-prototype-of.js\n ** module id = 240\n ** module chunks = 0\n **/","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey){\n    return propertyKey in target;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.has.js\n ** module id = 241\n ** module chunks = 0\n **/","// 26.1.10 Reflect.isExtensible(target)\nvar $export       = require('./_export')\n  , anObject      = require('./_an-object')\n  , $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target){\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.is-extensible.js\n ** module id = 242\n ** module chunks = 0\n **/","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {ownKeys: require('./_own-keys')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.own-keys.js\n ** module id = 243\n ** module chunks = 0\n **/","// all object keys, includes non-enumerable and symbols\nvar gOPN     = require('./_object-gopn')\n  , gOPS     = require('./_object-gops')\n  , anObject = require('./_an-object')\n  , Reflect  = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it){\n  var keys       = gOPN.f(anObject(it))\n    , getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_own-keys.js\n ** module id = 244\n ** module chunks = 0\n **/","// 26.1.12 Reflect.preventExtensions(target)\nvar $export            = require('./_export')\n  , anObject           = require('./_an-object')\n  , $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target){\n    anObject(target);\n    try {\n      if($preventExtensions)$preventExtensions(target);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.prevent-extensions.js\n ** module id = 245\n ** module chunks = 0\n **/","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP             = require('./_object-dp')\n  , gOPD           = require('./_object-gopd')\n  , getPrototypeOf = require('./_object-gpo')\n  , has            = require('./_has')\n  , $export        = require('./_export')\n  , createDesc     = require('./_property-desc')\n  , anObject       = require('./_an-object')\n  , isObject       = require('./_is-object');\n\nfunction set(target, propertyKey, V/*, receiver*/){\n  var receiver = arguments.length < 4 ? target : arguments[3]\n    , ownDesc  = gOPD.f(anObject(target), propertyKey)\n    , existingDescriptor, proto;\n  if(!ownDesc){\n    if(isObject(proto = getPrototypeOf(target))){\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if(has(ownDesc, 'value')){\n    if(ownDesc.writable === false || !isObject(receiver))return false;\n    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);\n    existingDescriptor.value = V;\n    dP.f(receiver, propertyKey, existingDescriptor);\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', {set: set});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.set.js\n ** module id = 246\n ** module chunks = 0\n **/","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export  = require('./_export')\n  , setProto = require('./_set-proto');\n\nif(setProto)$export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto){\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch(e){\n      return false;\n    }\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es6.reflect.set-prototype-of.js\n ** module id = 247\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export   = require('./_export')\n  , $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /*, fromIndex = 0 */){\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.array.includes.js\n ** module id = 248\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/mathiasbynens/String.prototype.at\nvar $export = require('./_export')\n  , $at     = require('./_string-at')(true);\n\n$export($export.P, 'String', {\n  at: function at(pos){\n    return $at(this, pos);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.at.js\n ** module id = 249\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padStart: function padStart(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.pad-start.js\n ** module id = 250\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length')\n  , repeat   = require('./_string-repeat')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, maxLength, fillString, left){\n  var S            = String(defined(that))\n    , stringLength = S.length\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n    , intMaxLength = toLength(maxLength);\n  if(intMaxLength <= stringLength || fillStr == '')return S;\n  var fillLen = intMaxLength - stringLength\n    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_string-pad.js\n ** module id = 251\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.pad-end.js\n ** module id = 252\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function($trim){\n  return function trimLeft(){\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.trim-left.js\n ** module id = 253\n ** module chunks = 0\n **/","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function($trim){\n  return function trimRight(){\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.trim-right.js\n ** module id = 254\n ** module chunks = 0\n **/","'use strict';\r\n// https://tc39.github.io/String.prototype.matchAll/\r\nvar $export     = require('./_export')\r\n  , defined     = require('./_defined')\r\n  , toLength    = require('./_to-length')\r\n  , isRegExp    = require('./_is-regexp')\r\n  , getFlags    = require('./_flags')\r\n  , RegExpProto = RegExp.prototype;\r\n\r\nvar $RegExpStringIterator = function(regexp, string){\r\n  this._r = regexp;\r\n  this._s = string;\r\n};\r\n\r\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next(){\r\n  var match = this._r.exec(this._s);\r\n  return {value: match, done: match === null};\r\n});\r\n\r\n$export($export.P, 'String', {\r\n  matchAll: function matchAll(regexp){\r\n    defined(this);\r\n    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\r\n    var S     = String(this)\r\n      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\r\n      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\r\n    rx.lastIndex = toLength(regexp.lastIndex);\r\n    return new $RegExpStringIterator(rx, S);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.string.match-all.js\n ** module id = 255\n ** module chunks = 0\n **/","require('./_wks-define')('asyncIterator');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.symbol.async-iterator.js\n ** module id = 256\n ** module chunks = 0\n **/","require('./_wks-define')('observable');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.symbol.observable.js\n ** module id = 257\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export        = require('./_export')\n  , ownKeys        = require('./_own-keys')\n  , toIObject      = require('./_to-iobject')\n  , gOPD           = require('./_object-gopd')\n  , createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){\n    var O       = toIObject(object)\n      , getDesc = gOPD.f\n      , keys    = ownKeys(O)\n      , result  = {}\n      , i       = 0\n      , key, D;\n    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));\n    return result;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.get-own-property-descriptors.js\n ** module id = 258\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export')\n  , $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it){\n    return $values(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.values.js\n ** module id = 259\n ** module chunks = 0\n **/","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject')\n  , isEnum    = require('./_object-pie').f;\nmodule.exports = function(isEntries){\n  return function(it){\n    var O      = toIObject(it)\n      , keys   = getKeys(O)\n      , length = keys.length\n      , i      = 0\n      , result = []\n      , key;\n    while(length > i)if(isEnum.call(O, key = keys[i++])){\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-to-array.js\n ** module id = 260\n ** module chunks = 0\n **/","// https://github.com/tc39/proposal-object-values-entries\nvar $export  = require('./_export')\n  , $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it){\n    return $entries(it);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.entries.js\n ** module id = 261\n ** module chunks = 0\n **/","'use strict';\r\nvar $export         = require('./_export')\r\n  , toObject        = require('./_to-object')\r\n  , aFunction       = require('./_a-function')\r\n  , $defineProperty = require('./_object-dp');\r\n\r\n// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\r\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\r\n  __defineGetter__: function __defineGetter__(P, getter){\r\n    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.define-getter.js\n ** module id = 262\n ** module chunks = 0\n **/","// Forced replacement prototype accessors methods\r\nmodule.exports = require('./_library')|| !require('./_fails')(function(){\r\n  var K = Math.random();\r\n  // In FF throws only define methods\r\n  __defineSetter__.call(null, K, function(){ /* empty */});\r\n  delete require('./_global')[K];\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_object-forced-pam.js\n ** module id = 263\n ** module chunks = 0\n **/","'use strict';\r\nvar $export         = require('./_export')\r\n  , toObject        = require('./_to-object')\r\n  , aFunction       = require('./_a-function')\r\n  , $defineProperty = require('./_object-dp');\r\n\r\n// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\r\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\r\n  __defineSetter__: function __defineSetter__(P, setter){\r\n    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.define-setter.js\n ** module id = 264\n ** module chunks = 0\n **/","'use strict';\r\nvar $export                  = require('./_export')\r\n  , toObject                 = require('./_to-object')\r\n  , toPrimitive              = require('./_to-primitive')\r\n  , getPrototypeOf           = require('./_object-gpo')\r\n  , getOwnPropertyDescriptor = require('./_object-gopd').f;\r\n\r\n// B.2.2.4 Object.prototype.__lookupGetter__(P)\r\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\r\n  __lookupGetter__: function __lookupGetter__(P){\r\n    var O = toObject(this)\r\n      , K = toPrimitive(P, true)\r\n      , D;\r\n    do {\r\n      if(D = getOwnPropertyDescriptor(O, K))return D.get;\r\n    } while(O = getPrototypeOf(O));\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.lookup-getter.js\n ** module id = 265\n ** module chunks = 0\n **/","'use strict';\r\nvar $export                  = require('./_export')\r\n  , toObject                 = require('./_to-object')\r\n  , toPrimitive              = require('./_to-primitive')\r\n  , getPrototypeOf           = require('./_object-gpo')\r\n  , getOwnPropertyDescriptor = require('./_object-gopd').f;\r\n\r\n// B.2.2.5 Object.prototype.__lookupSetter__(P)\r\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\r\n  __lookupSetter__: function __lookupSetter__(P){\r\n    var O = toObject(this)\r\n      , K = toPrimitive(P, true)\r\n      , D;\r\n    do {\r\n      if(D = getOwnPropertyDescriptor(O, K))return D.set;\r\n    } while(O = getPrototypeOf(O));\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.object.lookup-setter.js\n ** module id = 266\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.map.to-json.js\n ** module id = 267\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_collection-to-json.js\n ** module id = 268\n ** module chunks = 0\n **/","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_array-from-iterable.js\n ** module id = 269\n ** module chunks = 0\n **/","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.set.to-json.js\n ** module id = 270\n ** module chunks = 0\n **/","// https://github.com/ljharb/proposal-global\nvar $export = require('./_export');\n\n$export($export.S, 'System', {global: require('./_global')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.system.global.js\n ** module id = 271\n ** module chunks = 0\n **/","// https://github.com/ljharb/proposal-is-error\nvar $export = require('./_export')\n  , cof     = require('./_cof');\n\n$export($export.S, 'Error', {\n  isError: function isError(it){\n    return cof(it) === 'Error';\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.error.is-error.js\n ** module id = 272\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  iaddh: function iaddh(x0, x1, y0, y1){\n    var $x0 = x0 >>> 0\n      , $x1 = x1 >>> 0\n      , $y0 = y0 >>> 0;\n    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.iaddh.js\n ** module id = 273\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  isubh: function isubh(x0, x1, y0, y1){\n    var $x0 = x0 >>> 0\n      , $x1 = x1 >>> 0\n      , $y0 = y0 >>> 0;\n    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.isubh.js\n ** module id = 274\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  imulh: function imulh(u, v){\n    var UINT16 = 0xffff\n      , $u = +u\n      , $v = +v\n      , u0 = $u & UINT16\n      , v0 = $v & UINT16\n      , u1 = $u >> 16\n      , v1 = $v >> 16\n      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.imulh.js\n ** module id = 275\n ** module chunks = 0\n **/","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  umulh: function umulh(u, v){\n    var UINT16 = 0xffff\n      , $u = +u\n      , $v = +v\n      , u0 = $u & UINT16\n      , v0 = $v & UINT16\n      , u1 = $u >>> 16\n      , v1 = $v >>> 16\n      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.math.umulh.js\n ** module id = 276\n ** module chunks = 0\n **/","var metadata                  = require('./_metadata')\n  , anObject                  = require('./_an-object')\n  , toMetaKey                 = metadata.key\n  , ordinaryDefineOwnMetadata = metadata.set;\n\nmetadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){\n  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.define-metadata.js\n ** module id = 277\n ** module chunks = 0\n **/","var Map     = require('./es6.map')\n  , $export = require('./_export')\n  , shared  = require('./_shared')('metadata')\n  , store   = shared.store || (shared.store = new (require('./es6.weak-map')));\n\nvar getOrCreateMetadataMap = function(target, targetKey, create){\n  var targetMetadata = store.get(target);\n  if(!targetMetadata){\n    if(!create)return undefined;\n    store.set(target, targetMetadata = new Map);\n  }\n  var keyMetadata = targetMetadata.get(targetKey);\n  if(!keyMetadata){\n    if(!create)return undefined;\n    targetMetadata.set(targetKey, keyMetadata = new Map);\n  } return keyMetadata;\n};\nvar ordinaryHasOwnMetadata = function(MetadataKey, O, P){\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n};\nvar ordinaryGetOwnMetadata = function(MetadataKey, O, P){\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n};\nvar ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n};\nvar ordinaryOwnMetadataKeys = function(target, targetKey){\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)\n    , keys        = [];\n  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });\n  return keys;\n};\nvar toMetaKey = function(it){\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\n};\nvar exp = function(O){\n  $export($export.S, 'Reflect', O);\n};\n\nmodule.exports = {\n  store: store,\n  map: getOrCreateMetadataMap,\n  has: ordinaryHasOwnMetadata,\n  get: ordinaryGetOwnMetadata,\n  set: ordinaryDefineOwnMetadata,\n  keys: ordinaryOwnMetadataKeys,\n  key: toMetaKey,\n  exp: exp\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_metadata.js\n ** module id = 278\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , toMetaKey              = metadata.key\n  , getOrCreateMetadataMap = metadata.map\n  , store                  = metadata.store;\n\nmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\n  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\n    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\n  if(metadataMap.size)return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.delete-metadata.js\n ** module id = 279\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , getPrototypeOf         = require('./_object-gpo')\n  , ordinaryHasOwnMetadata = metadata.has\n  , ordinaryGetOwnMetadata = metadata.get\n  , toMetaKey              = metadata.key;\n\nvar ordinaryGetMetadata = function(MetadataKey, O, P){\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\n};\n\nmetadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-metadata.js\n ** module id = 280\n ** module chunks = 0\n **/","var Set                     = require('./es6.set')\n  , from                    = require('./_array-from-iterable')\n  , metadata                = require('./_metadata')\n  , anObject                = require('./_an-object')\n  , getPrototypeOf          = require('./_object-gpo')\n  , ordinaryOwnMetadataKeys = metadata.keys\n  , toMetaKey               = metadata.key;\n\nvar ordinaryMetadataKeys = function(O, P){\n  var oKeys  = ordinaryOwnMetadataKeys(O, P)\n    , parent = getPrototypeOf(O);\n  if(parent === null)return oKeys;\n  var pKeys  = ordinaryMetadataKeys(parent, P);\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n};\n\nmetadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){\n  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-metadata-keys.js\n ** module id = 281\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , ordinaryGetOwnMetadata = metadata.get\n  , toMetaKey              = metadata.key;\n\nmetadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-own-metadata.js\n ** module id = 282\n ** module chunks = 0\n **/","var metadata                = require('./_metadata')\n  , anObject                = require('./_an-object')\n  , ordinaryOwnMetadataKeys = metadata.keys\n  , toMetaKey               = metadata.key;\n\nmetadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){\n  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.get-own-metadata-keys.js\n ** module id = 283\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , getPrototypeOf         = require('./_object-gpo')\n  , ordinaryHasOwnMetadata = metadata.has\n  , toMetaKey              = metadata.key;\n\nvar ordinaryHasMetadata = function(MetadataKey, O, P){\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if(hasOwn)return true;\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\n};\n\nmetadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.has-metadata.js\n ** module id = 284\n ** module chunks = 0\n **/","var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , ordinaryHasOwnMetadata = metadata.has\n  , toMetaKey              = metadata.key;\n\nmetadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){\n  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.has-own-metadata.js\n ** module id = 285\n ** module chunks = 0\n **/","var metadata                  = require('./_metadata')\n  , anObject                  = require('./_an-object')\n  , aFunction                 = require('./_a-function')\n  , toMetaKey                 = metadata.key\n  , ordinaryDefineOwnMetadata = metadata.set;\n\nmetadata.exp({metadata: function metadata(metadataKey, metadataValue){\n  return function decorator(target, targetKey){\n    ordinaryDefineOwnMetadata(\n      metadataKey, metadataValue,\n      (targetKey !== undefined ? anObject : aFunction)(target),\n      toMetaKey(targetKey)\n    );\n  };\n}});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.reflect.metadata.js\n ** module id = 286\n ** module chunks = 0\n **/","// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask\r\nvar $export   = require('./_export')\r\n  , microtask = require('./_microtask')()\r\n  , process   = require('./_global').process\r\n  , isNode    = require('./_cof')(process) == 'process';\r\n\r\n$export($export.G, {\r\n  asap: function asap(fn){\r\n    var domain = isNode && process.domain;\r\n    microtask(domain ? domain.bind(fn) : fn);\r\n  }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.asap.js\n ** module id = 287\n ** module chunks = 0\n **/","'use strict';\r\n// https://github.com/zenparsing/es-observable\r\nvar $export     = require('./_export')\r\n  , global      = require('./_global')\r\n  , core        = require('./_core')\r\n  , microtask   = require('./_microtask')()\r\n  , OBSERVABLE  = require('./_wks')('observable')\r\n  , aFunction   = require('./_a-function')\r\n  , anObject    = require('./_an-object')\r\n  , anInstance  = require('./_an-instance')\r\n  , redefineAll = require('./_redefine-all')\r\n  , hide        = require('./_hide')\r\n  , forOf       = require('./_for-of')\r\n  , RETURN      = forOf.RETURN;\r\n\r\nvar getMethod = function(fn){\r\n  return fn == null ? undefined : aFunction(fn);\r\n};\r\n\r\nvar cleanupSubscription = function(subscription){\r\n  var cleanup = subscription._c;\r\n  if(cleanup){\r\n    subscription._c = undefined;\r\n    cleanup();\r\n  }\r\n};\r\n\r\nvar subscriptionClosed = function(subscription){\r\n  return subscription._o === undefined;\r\n};\r\n\r\nvar closeSubscription = function(subscription){\r\n  if(!subscriptionClosed(subscription)){\r\n    subscription._o = undefined;\r\n    cleanupSubscription(subscription);\r\n  }\r\n};\r\n\r\nvar Subscription = function(observer, subscriber){\r\n  anObject(observer);\r\n  this._c = undefined;\r\n  this._o = observer;\r\n  observer = new SubscriptionObserver(this);\r\n  try {\r\n    var cleanup      = subscriber(observer)\r\n      , subscription = cleanup;\r\n    if(cleanup != null){\r\n      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };\r\n      else aFunction(cleanup);\r\n      this._c = cleanup;\r\n    }\r\n  } catch(e){\r\n    observer.error(e);\r\n    return;\r\n  } if(subscriptionClosed(this))cleanupSubscription(this);\r\n};\r\n\r\nSubscription.prototype = redefineAll({}, {\r\n  unsubscribe: function unsubscribe(){ closeSubscription(this); }\r\n});\r\n\r\nvar SubscriptionObserver = function(subscription){\r\n  this._s = subscription;\r\n};\r\n\r\nSubscriptionObserver.prototype = redefineAll({}, {\r\n  next: function next(value){\r\n    var subscription = this._s;\r\n    if(!subscriptionClosed(subscription)){\r\n      var observer = subscription._o;\r\n      try {\r\n        var m = getMethod(observer.next);\r\n        if(m)return m.call(observer, value);\r\n      } catch(e){\r\n        try {\r\n          closeSubscription(subscription);\r\n        } finally {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  error: function error(value){\r\n    var subscription = this._s;\r\n    if(subscriptionClosed(subscription))throw value;\r\n    var observer = subscription._o;\r\n    subscription._o = undefined;\r\n    try {\r\n      var m = getMethod(observer.error);\r\n      if(!m)throw value;\r\n      value = m.call(observer, value);\r\n    } catch(e){\r\n      try {\r\n        cleanupSubscription(subscription);\r\n      } finally {\r\n        throw e;\r\n      }\r\n    } cleanupSubscription(subscription);\r\n    return value;\r\n  },\r\n  complete: function complete(value){\r\n    var subscription = this._s;\r\n    if(!subscriptionClosed(subscription)){\r\n      var observer = subscription._o;\r\n      subscription._o = undefined;\r\n      try {\r\n        var m = getMethod(observer.complete);\r\n        value = m ? m.call(observer, value) : undefined;\r\n      } catch(e){\r\n        try {\r\n          cleanupSubscription(subscription);\r\n        } finally {\r\n          throw e;\r\n        }\r\n      } cleanupSubscription(subscription);\r\n      return value;\r\n    }\r\n  }\r\n});\r\n\r\nvar $Observable = function Observable(subscriber){\r\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\r\n};\r\n\r\nredefineAll($Observable.prototype, {\r\n  subscribe: function subscribe(observer){\r\n    return new Subscription(observer, this._f);\r\n  },\r\n  forEach: function forEach(fn){\r\n    var that = this;\r\n    return new (core.Promise || global.Promise)(function(resolve, reject){\r\n      aFunction(fn);\r\n      var subscription = that.subscribe({\r\n        next : function(value){\r\n          try {\r\n            return fn(value);\r\n          } catch(e){\r\n            reject(e);\r\n            subscription.unsubscribe();\r\n          }\r\n        },\r\n        error: reject,\r\n        complete: resolve\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\nredefineAll($Observable, {\r\n  from: function from(x){\r\n    var C = typeof this === 'function' ? this : $Observable;\r\n    var method = getMethod(anObject(x)[OBSERVABLE]);\r\n    if(method){\r\n      var observable = anObject(method.call(x));\r\n      return observable.constructor === C ? observable : new C(function(observer){\r\n        return observable.subscribe(observer);\r\n      });\r\n    }\r\n    return new C(function(observer){\r\n      var done = false;\r\n      microtask(function(){\r\n        if(!done){\r\n          try {\r\n            if(forOf(x, false, function(it){\r\n              observer.next(it);\r\n              if(done)return RETURN;\r\n            }) === RETURN)return;\r\n          } catch(e){\r\n            if(done)throw e;\r\n            observer.error(e);\r\n            return;\r\n          } observer.complete();\r\n        }\r\n      });\r\n      return function(){ done = true; };\r\n    });\r\n  },\r\n  of: function of(){\r\n    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];\r\n    return new (typeof this === 'function' ? this : $Observable)(function(observer){\r\n      var done = false;\r\n      microtask(function(){\r\n        if(!done){\r\n          for(var i = 0; i < items.length; ++i){\r\n            observer.next(items[i]);\r\n            if(done)return;\r\n          } observer.complete();\r\n        }\r\n      });\r\n      return function(){ done = true; };\r\n    });\r\n  }\r\n});\r\n\r\nhide($Observable.prototype, OBSERVABLE, function(){ return this; });\r\n\r\n$export($export.G, {Observable: $Observable});\r\n\r\nrequire('./_set-species')('Observable');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/es7.observable.js\n ** module id = 288\n ** module chunks = 0\n **/","// ie9- setTimeout & setInterval additional parameters fix\nvar global     = require('./_global')\n  , $export    = require('./_export')\n  , invoke     = require('./_invoke')\n  , partial    = require('./_partial')\n  , navigator  = global.navigator\n  , MSIE       = !!navigator && /MSIE .\\./.test(navigator.userAgent); // <- dirty ie9- check\nvar wrap = function(set){\n  return MSIE ? function(fn, time /*, ...args */){\n    return set(invoke(\n      partial,\n      [].slice.call(arguments, 2),\n      typeof fn == 'function' ? fn : Function(fn)\n    ), time);\n  } : set;\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout:  wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.timers.js\n ** module id = 289\n ** module chunks = 0\n **/","'use strict';\nvar path      = require('./_path')\n  , invoke    = require('./_invoke')\n  , aFunction = require('./_a-function');\nmodule.exports = function(/* ...pargs */){\n  var fn     = aFunction(this)\n    , length = arguments.length\n    , pargs  = Array(length)\n    , i      = 0\n    , _      = path._\n    , holder = false;\n  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;\n  return function(/* ...args */){\n    var that = this\n      , aLen = arguments.length\n      , j = 0, k = 0, args;\n    if(!holder && !aLen)return invoke(fn, pargs, that);\n    args = pargs.slice();\n    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];\n    while(aLen > k)args.push(arguments[k++]);\n    return invoke(fn, args, that);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_partial.js\n ** module id = 290\n ** module chunks = 0\n **/","module.exports = require('./_global');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_path.js\n ** module id = 291\n ** module chunks = 0\n **/","var $export = require('./_export')\n  , $task   = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate:   $task.set,\n  clearImmediate: $task.clear\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.immediate.js\n ** module id = 292\n ** module chunks = 0\n **/","var $iterators    = require('./es6.array.iterator')\n  , redefine      = require('./_redefine')\n  , global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , wks           = require('./_wks')\n  , ITERATOR      = wks('iterator')\n  , TO_STRING_TAG = wks('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype\n    , key;\n  if(proto){\n    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);\n    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/web.dom.iterable.js\n ** module id = 293\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    // This invoke function is written in a style that assumes some\n    // calling function (or Promise) will handle exceptions.\n    function invoke(method, arg) {\n      var result = generator[method](arg);\n      var value = result.value;\n      return value instanceof AwaitArgument\n        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n        : Promise.resolve(value).then(function(unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration. If the Promise is rejected, however, the\n            // result for this iteration will be rejected with the same\n            // reason. Note that rejections of yielded Promises are not\n            // thrown back into the generator function, as is the case\n            // when an awaited Promise is rejected. This difference in\n            // behavior between yield and await is important, because it\n            // allows the consumer to decide what to do with the yielded\n            // rejection (swallow it and continue, manually .throw it back\n            // into the generator, abandon iteration, whatever). With\n            // await, by contrast, there is no opportunity to examine the\n            // rejection reason outside the generator function, so the\n            // only option is to throw it from the await expression, and\n            // let the generator function handle the exception.\n            result.value = unwrapped;\n            return result;\n          });\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var invokeNext = invoke.bind(generator, \"next\");\n    var invokeThrow = invoke.bind(generator, \"throw\");\n    var invokeReturn = invoke.bind(generator, \"return\");\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return invoke(method, arg);\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : new Promise(function (resolve) {\n          resolve(callInvokeWithMethodAndArg());\n        });\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          context._sent = arg;\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            context.sent = undefined;\n          }\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-regenerator-runtime/runtime.js\n ** module id = 294\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 295\n ** module chunks = 0\n **/","require('../../modules/core.regexp.escape');\nmodule.exports = require('../../modules/_core').RegExp.escape;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/fn/regexp/escape.js\n ** module id = 296\n ** module chunks = 0\n **/","// https://github.com/benjamingr/RexExp.escape\nvar $export = require('./_export')\n  , $re     = require('./_replacer')(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/core.regexp.escape.js\n ** module id = 297\n ** module chunks = 0\n **/","module.exports = function(regExp, replace){\n  var replacer = replace === Object(replace) ? function(part){\n    return replace[part];\n  } : replace;\n  return function(it){\n    return String(it).replace(regExp, replacer);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/modules/_replacer.js\n ** module id = 298\n ** module chunks = 0\n **/","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '75' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Number.EPSILON === undefined ) {\r\n\r\n\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\nif ( Object.assign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\tObject.defineProperty( Object, 'assign', {\r\n\r\n\t\twritable: true,\r\n\t\tconfigurable: true,\r\n\r\n\t\tvalue: function ( target ) {\r\n\r\n\t\t\t'use strict';\r\n\r\n\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\tthrow new TypeError( \"Cannot convert first argument to object\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar to = Object( target );\r\n\r\n\t\t\tfor ( var i = 1, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar nextSource = arguments[ i ];\r\n\r\n\t\t\t\tif ( nextSource === undefined || nextSource === null ) continue;\r\n\r\n\t\t\t\tnextSource = Object( nextSource );\r\n\r\n\t\t\t\tvar keysArray = Object.keys( nextSource );\r\n\r\n\t\t\t\tfor ( var nextIndex = 0, len = keysArray.length; nextIndex !== len; ++ nextIndex ) {\r\n\r\n\t\t\t\t\tvar nextKey = keysArray[ nextIndex ];\r\n\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor( nextSource, nextKey );\r\n\r\n\t\t\t\t\tif ( desc !== undefined && desc.enumerable ) {\r\n\r\n\t\t\t\t\t\tto[ nextKey ] = nextSource[ nextKey ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn to;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Tone Mapping modes\r\n\r\nTHREE.NoToneMapping = 0; // do not do any tone mapping, not even exposure (required for special purpose passes.)\r\nTHREE.LinearToneMapping = 1; // only apply exposure.\r\nTHREE.ReinhardToneMapping = 2;\r\nTHREE.Uncharted2ToneMapping = 3; // John Hable\r\nTHREE.CineonToneMapping = 4;  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\nTHREE.CubeUVReflectionMapping = 306;\r\nTHREE.CubeUVRefractionMapping = 307;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n// ETC compressed texture formats\r\n\r\nTHREE.RGB_ETC1_Format = 2151;\r\n\r\n// Loop styles for AnimationAction\r\n\r\nTHREE.LoopOnce = 2200;\r\nTHREE.LoopRepeat = 2201;\r\nTHREE.LoopPingPong = 2202;\r\n\r\n// Interpolation\r\n\r\nTHREE.InterpolateDiscrete = 2300;\r\nTHREE.InterpolateLinear = 2301;\r\nTHREE.InterpolateSmooth = 2302;\r\n\r\n// Interpolant ending modes\r\n\r\nTHREE.ZeroCurvatureEnding = 2400;\r\nTHREE.ZeroSlopeEnding = 2401;\r\nTHREE.WrapAroundEnding = 2402;\r\n\r\n// Triangle Draw modes\r\n\r\nTHREE.TrianglesDrawMode = 0;\r\nTHREE.TriangleStripDrawMode = 1;\r\nTHREE.TriangleFanDrawMode = 2;\r\n\r\n// Texture Encodings\r\n\r\nTHREE.LinearEncoding = 3000; // No encoding at all.\r\nTHREE.sRGBEncoding = 3001;\r\nTHREE.GammaEncoding = 3007; // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\r\n\r\n// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\r\n// These encodings should not specified as output encodings except in rare situations.\r\nTHREE.RGBEEncoding = 3002; // AKA Radiance.\r\nTHREE.LogLuvEncoding = 3003;\r\nTHREE.RGBM7Encoding = 3004;\r\nTHREE.RGBM16Encoding = 3005;\r\nTHREE.RGBDEncoding = 3006; // MaxRange is 256.\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.fromArray( arguments );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nObject.assign( THREE.Quaternion, {\r\n\r\n\tslerp: function( qa, qb, qm, t ) {\r\n\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t},\r\n\r\n\tslerpFlat: function(\r\n\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t},\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t},\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t},\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tangle: function () {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateAround: function ( center, angle ) {\r\n\r\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tvar x = this.x - center.x;\r\n\t\tvar y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetFromSpherical: function( s ) {\r\n\r\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\treturn this.setFromMatrixColumn( m, 3 );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\tif ( typeof m === 'number' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\r\n\r\n\t\t\tm = arguments[ 1 ];\r\n\t\t\tindex = arguments[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromArray: function ( array ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tvar minX = + Infinity;\r\n\t\tvar minY = + Infinity;\r\n\t\tvar minZ = + Infinity;\r\n\r\n\t\tvar maxX = - Infinity;\r\n\t\tvar maxY = - Infinity;\r\n\t\tvar maxZ = - Infinity;\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\r\n\r\n\t\t\tvar x = array[ i ];\r\n\t\t\tvar y = array[ i + 1 ];\r\n\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\tif ( x < minX ) minX = x;\r\n\t\t\tif ( y < minY ) minY = y;\r\n\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min.set( minX, minY, minZ );\r\n\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar box;\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tif ( box === undefined ) box = new THREE.Box3();\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.boundingBox.isEmpty() === false ) {\r\n\r\n\t\t\t\t\t\tbox.copy( geometry.boundingBox );\r\n\t\t\t\t\t\tbox.applyMatrix4( node.matrixWorld );\r\n\t\t\t\t\t\tscope.union( box );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsSphere: ( function () {\r\n\r\n\t\tvar closestPoint;\r\n\r\n\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\r\n\r\n\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tvar min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n * @author tschw\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix4: function( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\tif ( matrix instanceof THREE.Matrix4 ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar me = matrix.elements,\r\n\t\t\tte = this.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = t11;\r\n\t\tte[ 1 ] = n31 * n23 - n33 * n21;\r\n\t\tte[ 2 ] = n32 * n21 - n31 * n22;\r\n\r\n\t\tte[ 3 ] = t12;\r\n\t\tte[ 4 ] = n33 * n11 - n31 * n13;\r\n\t\tte[ 5 ] = n31 * n12 - n32 * n11;\r\n\r\n\t\tte[ 6 ] = t13;\r\n\t\tte[ 7 ] = n21 * n13 - n23 * n11;\r\n\t\tte[ 8 ] = n22 * n11 - n21 * n12;\r\n\r\n\t\treturn this.multiplyScalar( 1 / det );\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements,\r\n\t\t\tme = m.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = t11;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\r\n\t\tte[ 4 ] = t12;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\r\n\t\tte[ 8 ] = t13;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\r\n\t\tte[ 12 ] = t14;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\treturn this.multiplyScalar( 1 / det );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = 1.0 / ( right - left );\r\n\t\tvar h = 1.0 / ( top - bottom );\r\n\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\tvar x = ( right + left ) * w;\r\n\t\tvar y = ( top + bottom ) * h;\r\n\t\tvar z = ( far + near ) * p;\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tlookAt: function ( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectsBox: ( function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t},\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We use the following equation to compute the signed distance from\r\n\t\t// the center of the sphere to the plane.\r\n\t\t//\r\n\t\t// distance = q * n - d\r\n\t\t//\r\n\t\t// If this distance is greater than the radius of the sphere,\r\n\t\t// then there is no intersection.\r\n\r\n\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spherical.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The poles (phi) are at the positive and negative y axis.\r\n * The equator starts at positive z.\r\n */\r\n\r\nTHREE.Spherical = function ( radius, phi, theta ) {\r\n\r\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\r\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Spherical.prototype = {\r\n\r\n\tconstructor: THREE.Spherical,\r\n\r\n\tset: function ( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( other ) {\r\n\r\n\t\tthis.radius.copy( other.radius );\r\n\t\tthis.phi.copy( other.phi );\r\n\t\tthis.theta.copy( other.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// restrict phi to be betwee EPS and PI-EPS\r\n\tmakeSafe: function() {\r\n\r\n\t\tvar EPS = 0.000001;\r\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t},\r\n\r\n\tsetFromVector3: function( vec3 ) {\r\n\r\n\t\tthis.radius = vec3.length();\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\r\n\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclamp: function ( value, min, max ) {\r\n\r\n\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\trandom16: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\r\n\t\treturn Math.random();\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Interpolant.js\r\n\r\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.Interpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tthis.parameterPositions = parameterPositions;\r\n\tthis._cachedIndex = 0;\r\n\r\n\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\tthis.sampleValues = sampleValues;\r\n\tthis.valueSize = sampleSize;\r\n\r\n};\r\n\r\nTHREE.Interpolant.prototype = {\r\n\r\n\tconstructor: THREE.Interpolant,\r\n\r\n\tevaluate: function( t ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\tt1 = pp[   i1   ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tvar right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n//- See http://jsperf.com/comparison-to-undefined/3\r\n//- slower code:\r\n//-\r\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n//- slower code:\r\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[   i1   ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t},\r\n\r\n\tsettings: null, // optional, subclass-specific settings structure\r\n\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t// --- Protected interface\r\n\r\n\tDefaultSettings_: {},\r\n\r\n\tgetSettings_: function() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t},\r\n\r\n\tcopySampleValue_: function( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tthrow new Error( \"call to abstract method\" );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Interpolant.prototype, {\r\n\r\n\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_,\r\n\r\n\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/CubicInterpolant.js\r\n\r\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.CubicInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\tthis._weightPrev = -0;\r\n\tthis._offsetPrev = -0;\r\n\tthis._weightNext = -0;\r\n\tthis._offsetNext = -0;\r\n\r\n};\r\n\r\nTHREE.CubicInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.CubicInterpolant,\r\n\r\n\tDefaultSettings_: {\r\n\r\n\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\tiPrev = i1 - 2,\r\n\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\tstride = this.valueSize;\r\n\r\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\tthis._offsetPrev = iPrev * stride;\r\n\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t},\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tpp = p * p,\r\n\t\t\tppp = pp * p;\r\n\r\n\t\t// evaluate polynomials\r\n\r\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\r\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\r\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\r\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\r\n\r\n\t\t// combine data linearly\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/DiscreteInterpolant.js\r\n\r\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.DiscreteInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.DiscreteInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.DiscreteInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/LinearInterpolant.js\r\n\r\n/**\r\n * @author tschw\r\n */\r\n\r\nTHREE.LinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.LinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.LinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset1 = i1 * stride,\r\n\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/QuaternionLinearInterpolant.js\r\n\r\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionLinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.QuaternionLinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionLinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset = i1 * stride,\r\n\r\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\r\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = performance.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = performance.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Layers.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Layers = function () {\r\n\r\n\tthis.mask = 1;\r\n\r\n};\r\n\r\nTHREE.Layers.prototype = {\r\n\r\n\tconstructor: THREE.Layers,\r\n\r\n\tset: function ( channel ) {\r\n\r\n\t\tthis.mask = 1 << channel;\r\n\r\n\t},\r\n\r\n\tenable: function ( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel;\r\n\r\n\t},\r\n\r\n\ttoggle: function ( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel;\r\n\r\n\t},\r\n\r\n\tdisable: function ( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel );\r\n\r\n\t},\r\n\r\n\ttest: function ( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tfunction onRotationChange() {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t}\r\n\r\n\tfunction onQuaternionChange() {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t}\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.layers = new THREE.Layers();\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tvar object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.geometry !== undefined ) {\r\n\r\n\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.geometry = this.geometry.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.material = this.material.uuid;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.count;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar positions = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\tvar faces = this.faces;\r\n\t\tvar length = faces.length;\r\n\r\n\t\t// tag faces\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t}\r\n\r\n\t\t// sort faces\r\n\r\n\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t}\r\n\r\n\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t// sort uvs\r\n\r\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\tvar newUvs1, newUvs2;\r\n\r\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = true;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.Geometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tvar morphTargetsPosition;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tvar morphTargetsNormal;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.uv;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tthis.boundingBox.setFromArray( positions );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tbox.setFromArray( positions );\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoNonIndexed: function () {\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry2 = new THREE.BufferGeometry();\r\n\r\n\t\tvar indices = this.index.array;\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.BufferGeometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/core/Uniform.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Uniform = function ( type, value ) {\r\n\r\n\tthis.type = type;\r\n\tthis.value = value;\r\n\r\n\tthis.dynamic = false;\r\n\r\n};\r\n\r\nTHREE.Uniform.prototype = {\r\n\r\n\tconstructor: THREE.Uniform,\r\n\r\n\tonUpdate: function ( callback ) {\r\n\r\n\t\tthis.dynamic = true;\r\n\t\tthis.onUpdateCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/AnimationClip.js\r\n\r\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\r\n\tthis.name = name || THREE.Math.generateUUID();\r\n\tthis.tracks = tracks;\r\n\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\r\n\t// this means it should figure out its duration by scanning the tracks\r\n\tif ( this.duration < 0 ) {\r\n\r\n\t\tthis.resetDuration();\r\n\r\n\t}\r\n\r\n\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\tthis.trim();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.AnimationClip.prototype = {\r\n\r\n\tconstructor: THREE.AnimationClip,\r\n\r\n\tresetDuration: function() {\r\n\r\n\t\tvar tracks = this.tracks,\r\n\t\t\tduration = 0;\r\n\r\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\tduration = Math.max(\r\n\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.duration = duration;\r\n\r\n\t},\r\n\r\n\ttrim: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\toptimize: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.AnimationClip, {\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tjsonTracks = json.tracks,\r\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t},\r\n\r\n\r\n\ttoJSON: function( clip ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\tvar json = {\r\n\r\n\t\t\t'name': clip.name,\r\n\t\t\t'duration': clip.duration,\r\n\t\t\t'tracks': tracks\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\r\n\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps ) {\r\n\r\n\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\tvar tracks = [];\r\n\r\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\tvar times = [];\r\n\t\t\tvar values = [];\r\n\r\n\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\r\n\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t// last frame as well for perfect loop.\r\n\t\t\tif ( times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttracks.push(\r\n\t\t\t\t\tnew THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\r\n\t},\r\n\r\n\tfindByName: function( clipArray, name ) {\r\n\r\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps ) {\r\n\r\n\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t// sort morph target names into animation groups based\r\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar clips = [];\r\n\r\n\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn clips;\r\n\r\n\t},\r\n\r\n\t// parse the animation.hierarchy format\r\n\tparseAnimation: function( animation, bones, nodeName ) {\r\n\r\n\t\tif ( ! animation ) {\r\n\r\n\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar addNonemptyTrack = function(\r\n\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tTHREE.AnimationUtils.flattenJSON(\r\n\t\t\t\t\t\tanimationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar tracks = [];\r\n\r\n\t\tvar clipName = animation.name || 'default';\r\n\t\t// automatic length determination in AnimationClip.\r\n\t\tvar duration = animation.length || -1;\r\n\t\tvar fps = animation.fps || 30;\r\n\r\n\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length == 0 ) continue;\r\n\r\n\t\t\t// process morph targets in a way exactly compatible\r\n\t\t\t// with AnimationHandler.init( animation )\r\n\t\t\tif ( animationKeys[0].morphTargets ) {\r\n\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tvar morphTargetNames = {};\r\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t// the morphTarget is named.\r\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tfor ( var m = 0;\r\n\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\r\n\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 )\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\n// File:src/animation/AnimationMixer.js\r\n\r\n/**\r\n *\r\n * Player for AnimationClips.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationMixer = function( root ) {\r\n\r\n\tthis._root = root;\r\n\tthis._initMemoryManager();\r\n\tthis._accuIndex = 0;\r\n\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1.0;\r\n\r\n};\r\n\r\nTHREE.AnimationMixer.prototype = {\r\n\r\n\tconstructor: THREE.AnimationMixer,\r\n\r\n\t// return an action for a clip optionally using a custom root target\r\n\t// object (this method allocates a lot of dynamic memory in case a\r\n\t// previously unknown clip/root combination is specified)\r\n\tclipAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tclipName = ( typeof clip === 'string' ) ? clip : clip.name,\r\n\t\t\tclipObject = ( clip !== clipName ) ? clip : null,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipName ],\r\n\t\t\tprototypeAction;\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\tvar existingAction =\r\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\treturn existingAction;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t// the bindings again but can just copy\r\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t// also, take the clip from the prototype action\r\n\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t\tif ( clip !== clipName && clip !== clipObject ) {\r\n\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"Different clips with the same name detected!\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// clip must be known when specified via string\r\n\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t// allocate all resources required to run it\r\n\t\tvar newAction = new THREE.\r\n\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\r\n\r\n\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t// and make the action known to the memory manager\r\n\t\tthis._addInactiveAction( newAction, clipName, rootUuid );\r\n\r\n\t\treturn newAction;\r\n\r\n\t},\r\n\r\n\t// get an existing action\r\n\texistingAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tclipName = ( typeof clip === 'string' ) ? clip : clip.name,\r\n\t\t\tactionsForClip = this._actionsByClip[ clipName ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// deactivates all previously scheduled actions\r\n\tstopAllAction: function() {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tthis._nActiveActions = 0;\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tactions[ i ].reset();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// advance the time and update apply the animation\r\n\tupdate: function( deltaTime ) {\r\n\r\n\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\ttime = this.time += deltaTime,\r\n\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t// run active actions\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\tif ( action.enabled ) {\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// return this mixer's root target object\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._root;\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular clip\r\n\tuncacheClip: function( clip ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tclipName = clip.name,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipName ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t// just throw away\r\n\r\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\tactions.pop();\r\n\r\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete actionsByClip[ clipName ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular root target object\r\n\tuncacheRoot: function( root ) {\r\n\r\n\t\tvar rootUuid = root.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tfor ( var clipName in actionsByClip ) {\r\n\r\n\t\t\tvar actionByRoot = actionsByClip[ clipName ].actionByRoot,\r\n\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remove a targeted clip from the cache\r\n\tuncacheAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\tif ( action !== null ) {\r\n\r\n\t\t\tthis._deactivateAction( action );\r\n\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.AnimationMixer.prototype );\r\n\r\nTHREE.AnimationMixer._Action =\r\n\t\tfunction( mixer, clip, localRoot ) {\r\n\r\n\tthis._mixer = mixer;\r\n\tthis._clip = clip;\r\n\tthis._localRoot = localRoot || null;\r\n\r\n\tvar tracks = clip.tracks,\r\n\t\tnTracks = tracks.length,\r\n\t\tinterpolants = new Array( nTracks );\r\n\r\n\tvar interpolantSettings = {\r\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\t};\r\n\r\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\tinterpolants[ i ] = interpolant;\r\n\t\tinterpolant.settings = interpolantSettings\r\n\r\n\t}\r\n\r\n\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n\t// inside: PropertyMixer (managed by the mixer)\r\n\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n\tthis._timeScaleInterpolant = null;\r\n\tthis._weightInterpolant = null;\r\n\r\n\tthis.loop = THREE.LoopRepeat;\r\n\tthis._loopCount = -1;\r\n\r\n\t// global mixer time when the action is to be started\r\n\t// it's set back to 'null' upon start of the action\r\n\tthis._startTime = null;\r\n\r\n\t// scaled local time of the action\r\n\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1;\r\n\tthis._effectiveTimeScale = 1;\r\n\r\n\tthis.weight = 1;\r\n\tthis._effectiveWeight = 1;\r\n\r\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\r\n\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\r\n\r\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n};\r\n\r\nTHREE.AnimationMixer._Action.prototype = {\r\n\r\n\tconstructor: THREE.AnimationMixer._Action,\r\n\r\n\t// State & Scheduling\r\n\r\n\tplay: function() {\r\n\r\n\t\tthis._mixer._activateAction( this );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\treturn this.reset();\r\n\r\n\t},\r\n\r\n\treset: function() {\r\n\r\n\t\tthis.paused = false;\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\tthis._loopCount = -1;\t// forget previous loops\r\n\t\tthis._startTime = null;\t// forget scheduling\r\n\r\n\t\treturn this.stopFading().stopWarping();\r\n\r\n\t},\r\n\r\n\tisRunning: function() {\r\n\r\n\t\tvar start = this._startTime;\r\n\r\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this )\r\n\r\n\t},\r\n\r\n\t// return true when play has been called\r\n\tisScheduled: function() {\r\n\r\n\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t},\r\n\r\n\tstartAt: function( time ) {\r\n\r\n\t\tthis._startTime = time;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetLoop: function( mode, repetitions ) {\r\n\r\n\t\tthis.loop = mode;\r\n\t\tthis.repetitions = repetitions;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Weight\r\n\r\n\t// set the weight stopping any scheduled fading\r\n\t// although .enabled = false yields an effective weight of zero, this\r\n\t// method does *not* change .enabled, because it would be confusing\r\n\tsetEffectiveWeight: function( weight ) {\r\n\r\n\t\tthis.weight = weight;\r\n\r\n\t\t// note: same logic as when updated at runtime\r\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\treturn this.stopFading();\r\n\r\n\t},\r\n\r\n\t// return the weight considering fading and .enabled\r\n\tgetEffectiveWeight: function() {\r\n\r\n\t\treturn this._effectiveWeight;\r\n\r\n\t},\r\n\r\n\tfadeIn: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t},\r\n\r\n\tfadeOut: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t},\r\n\r\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\r\n\r\n\t\tvar mixer = this._mixer;\r\n\r\n\t\tfadeOutAction.fadeOut( duration );\r\n\t\tthis.fadeIn( duration );\r\n\r\n\t\tif( warp ) {\r\n\r\n\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\r\n\r\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t},\r\n\r\n\tstopFading: function() {\r\n\r\n\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Time Scale Control\r\n\r\n\t// set the weight stopping any scheduled warping\r\n\t// although .paused = true yields an effective time scale of zero, this\r\n\t// method does *not* change .paused, because it would be confusing\r\n\tsetEffectiveTimeScale: function( timeScale ) {\r\n\r\n\t\tthis.timeScale = timeScale;\r\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\t// return the time scale considering warping and .paused\r\n\tgetEffectiveTimeScale: function() {\r\n\r\n\t\treturn this._effectiveTimeScale;\r\n\r\n\t},\r\n\r\n\tsetDuration: function( duration ) {\r\n\r\n\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\tsyncWith: function( action ) {\r\n\r\n\t\tthis.time = action.time;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\thalt: function( duration ) {\r\n\r\n\t\treturn this.warp( this._currentTimeScale, 0, duration );\r\n\r\n\t},\r\n\r\n\twarp: function( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstopWarping: function() {\r\n\r\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Object Accessors\r\n\r\n\tgetMixer: function() {\r\n\r\n\t\treturn this._mixer;\r\n\r\n\t},\r\n\r\n\tgetClip: function() {\r\n\r\n\t\treturn this._clip;\r\n\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t},\r\n\r\n\t// Interna\r\n\r\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\r\n\t\t// called by the mixer\r\n\r\n\t\tvar startTime = this._startTime;\r\n\r\n\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t// check for scheduled start of action\r\n\r\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// start\r\n\r\n\t\t\tthis._startTime = null; // unschedule\r\n\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t}\r\n\r\n\t\t// apply time scale and advance time\r\n\r\n\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t// note: _updateTime may disable the action resulting in\r\n\t\t// an effective weight of 0\r\n\r\n\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\tif ( weight > 0 ) {\r\n\r\n\t\t\tvar interpolants = this._interpolants;\r\n\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_updateWeight: function( time ) {\r\n\r\n\t\tvar weight = 0;\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\tweight = this.weight;\r\n\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveWeight = weight;\r\n\t\treturn weight;\r\n\r\n\t},\r\n\r\n\t_updateTimeScale: function( time ) {\r\n\r\n\t\tvar timeScale = 0;\r\n\r\n\t\tif ( ! this.paused ) {\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\tthis.pause = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveTimeScale = timeScale;\r\n\t\treturn timeScale;\r\n\r\n\t},\r\n\r\n\t_updateTime: function( deltaTime ) {\r\n\r\n\t\tvar time = this.time + deltaTime;\r\n\r\n\t\tif ( deltaTime === 0 ) return time;\r\n\r\n\t\tvar duration = this._clip.duration,\r\n\r\n\t\t\tloop = this.loop,\r\n\t\t\tloopCount = this._loopCount,\r\n\r\n\t\t\tpingPong = false;\r\n\r\n\t\tswitch ( loop ) {\r\n\r\n\t\t\tcase THREE.LoopOnce:\r\n\r\n\t\t\t\tif ( loopCount === -1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tthis.loopCount = 0;\r\n\t\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t} else break;\r\n\r\n\t\t\t\t// reached the end\r\n\r\n\t\t\t\tif ( this.clampWhenFinished ) this.pause = true;\r\n\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.LoopPingPong:\r\n\r\n\t\t\t\tpingPong = true;\r\n\r\n\t\t\tcase THREE.LoopRepeat:\r\n\r\n\t\t\t\tif ( loopCount === -1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tif ( deltaTime > 0 ) {\r\n\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t\t// wrap around\r\n\r\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif ( pending < 0 ) {\r\n\r\n\t\t\t\t\t\t// stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t} else if ( pending === 0 ) {\r\n\r\n\t\t\t\t\t\t// transition to last round\r\n\r\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( loop === THREE.LoopPingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\treturn duration - time;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tthis.time = time;\r\n\r\n\t\treturn time;\r\n\r\n\t},\r\n\r\n\t_setEndings: function( atStart, atEnd, pingPong ) {\r\n\r\n\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\tif ( pingPong ) {\r\n\r\n\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\r\n\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Implementation details:\r\n\r\nObject.assign( THREE.AnimationMixer.prototype, {\r\n\r\n\t_bindAction: function( action, prototypeAction ) {\r\n\r\n\t\tvar root = action._localRoot || this._root,\r\n\t\t\ttracks = action._clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tbindings = action._propertyBindings,\r\n\t\t\tinterpolants = action._interpolants,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\tbindingsByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar track = tracks[ i ],\r\n\t\t\t\ttrackName = track.name,\r\n\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\tbinding = new THREE.PropertyMixer(\r\n\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_activateAction: function( action ) {\r\n\r\n\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\tclipName = action._clip.name,\r\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipName ];\r\n\r\n\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\tthis._addInactiveAction( action, clipName, rootUuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// increment reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._lendAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_deactivateAction: function( action ) {\r\n\r\n\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// decrement reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Memory manager\r\n\r\n\t_initMemoryManager: function() {\r\n\r\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\tthis._nActiveActions = 0;\r\n\r\n\t\tthis._actionsByClip = {};\r\n\t\t// inside:\r\n\t\t// {\r\n\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\r\n\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\r\n\t\t// }\r\n\r\n\r\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\tthis._controlInterpolants = []; // same game as above\r\n\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tactions: {\r\n\t\t\t\tget total() { return scope._actions.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveActions; }\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tget total() { return scope._bindings.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\r\n\t\t\t},\r\n\t\t\tcontrolInterpolants: {\r\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t// Memory management for _Action objects\r\n\r\n\t_isActiveAction: function( action ) {\r\n\r\n\t\tvar index = action._cacheIndex;\r\n\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t},\r\n\r\n\t_addInactiveAction: function( action, clipName, rootUuid ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipName ];\r\n\r\n\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\tactionsForClip = {\r\n\r\n\t\t\t\tknownActions: [ action ],\r\n\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\tactionsByClip[ clipName ] = actionsForClip;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\tknownActions.push( action );\r\n\r\n\t\t}\r\n\r\n\t\taction._cacheIndex = actions.length;\r\n\t\tactions.push( action );\r\n\r\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t},\r\n\r\n\t_removeInactiveAction: function( action ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\tactions.pop();\r\n\r\n\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\tvar clipName = action._clip.name,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipName ],\r\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\tlastKnownAction =\r\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\tknownActionsForClip.pop();\r\n\r\n\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\r\n\r\n\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\tdelete actionsByClip[ clipName ];\r\n\r\n\t\t}\r\n\r\n\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBindingsForAction: function( action ) {\r\n\r\n\t\tvar bindings = action._propertyBindings;\r\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendAction: function( action ) {\r\n\r\n\t\t// [ active actions |  inactive actions  ]\r\n\t\t// [  active actions >| inactive actions ]\r\n\t\t//                 s        a\r\n\t\t//                  <-swap->\r\n\t\t//                 a        s\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\taction._cacheIndex = lastActiveIndex;\r\n\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t},\r\n\r\n\t_takeBackAction: function( action ) {\r\n\r\n\t\t// [  active actions  | inactive actions ]\r\n\t\t// [ active actions |< inactive actions  ]\r\n\t\t//        a        s\r\n\t\t//         <-swap->\r\n\t\t//        s        a\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t},\r\n\r\n\t// Memory management for PropertyMixer objects\r\n\r\n\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\tbindingByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t}\r\n\r\n\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\tbinding._cacheIndex = bindings.length;\r\n\t\tbindings.push( binding );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tpropBinding = binding.binding,\r\n\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\ttrackName = propBinding.path,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\tbindings.pop();\r\n\r\n\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\tremove_empty_map: {\r\n\r\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\r\n\r\n\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t},\r\n\r\n\t_takeBackBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t},\r\n\r\n\r\n\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t_lendControlInterpolant: function() {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\tinterpolant = new THREE.LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\treturn interpolant;\r\n\r\n\t},\r\n\r\n\t_takeBackControlInterpolant: function( interpolant ) {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t},\r\n\r\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\r\n\r\n} );\r\n\r\n\r\n// File:src/animation/AnimationObjectGroup.js\r\n\r\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n *\r\n * \t-\tInstead pass this object as 'root'.\r\n *\r\n * \t-\tYou can also add and remove objects later when the mixer\r\n * \t\tis running.\r\n *\r\n * Note:\r\n *\r\n *  \tObjects of this class appear as one object to the mixer,\r\n *  \tso cache control of the individual objects must be done\r\n *  \ton the group.\r\n *\r\n * Limitation:\r\n *\r\n * \t- \tThe animated properties must be compatible among the\r\n * \t\tall objects in the group.\r\n *\r\n *  -\tA single property can either be controlled through a\r\n *  \ttarget group or directly, but not both.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationObjectGroup = function( var_args ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\t// cached objects followed by the active ones\r\n\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t// note: read by PropertyBinding.Composite\r\n\r\n\tvar indices = {};\r\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t}\r\n\r\n\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.stats = {\r\n\r\n\t\tobjects: {\r\n\t\t\tget total() { return scope._objects.length; },\r\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\r\n\t\t},\r\n\r\n\t\tget bindingsPerObject() { return scope._bindings.length; }\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.AnimationObjectGroup.prototype = {\r\n\r\n\tconstructor: THREE.AnimationObjectGroup,\r\n\r\n\tadd: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tpaths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\tindex = nObjects ++;\r\n\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tbindings[ j ].push(\r\n\t\t\t\t\t\t\tnew THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\tvar knownObject = objects[ index ];\r\n\r\n\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objects[ index ] !== knownObject) {\r\n\r\n\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\r\n\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\r\n\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\r\n\r\n\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\tremove: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// remove & forget\r\n\tuncache: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // cached or active\r\n\r\n\t\t\t} // if object is known\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\tsubscribe_: function( path, parsedPath ) {\r\n\t\t// returns an array of bindings for the given path that is changed\r\n\t\t// according to the contained objects in the group\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ],\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\tvar paths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tobjects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\tindex = bindings.length;\r\n\r\n\t\tindicesByPath[ path ] = index;\r\n\r\n\t\tpaths.push( path );\r\n\t\tparsedPaths.push( parsedPath );\r\n\t\tbindings.push( bindingsForPath );\r\n\r\n\t\tfor ( var i = nCachedObjects,\r\n\t\t\t\tn = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = objects[ i ];\r\n\r\n\t\t\tbindingsForPath[ i ] =\r\n\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsForPath;\r\n\r\n\t},\r\n\r\n\tunsubscribe_: function( path ) {\r\n\t\t// tells the group to forget about a property path and no longer\r\n\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\tparsedPaths.pop();\r\n\r\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\tpaths.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/animation/AnimationUtils.js\r\n\r\n/**\r\n * @author tschw\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationUtils = {\r\n\r\n\t// same as Array.prototype.slice, but also works on typed arrays\r\n\tarraySlice: function( array, from, to ) {\r\n\r\n\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\treturn new array.constructor( array.subarray( from, to ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn array.slice( from, to );\r\n\r\n\t},\r\n\r\n\t// converts an array to a specific type\r\n\tconvertArray: function( array, type, forceClone ) {\r\n\r\n\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t}\r\n\r\n\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t},\r\n\r\n\tisTypedArray: function( object ) {\r\n\r\n\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t},\r\n\r\n\t// returns an array by which times and values can be sorted\r\n\tgetKeyframeOrder: function( times ) {\r\n\r\n\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t}\r\n\r\n\t\tvar n = times.length;\r\n\t\tvar result = new Array( n );\r\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\tresult.sort( compareTime );\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\tsortedArray: function( values, stride, order ) {\r\n\r\n\t\tvar nValues = values.length;\r\n\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// function for parsing AOS keyframe formats\r\n\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\tvar value = key[ valuePropertyName ];\r\n\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else if ( value.toArray !== undefined ) {\r\n\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else {\r\n\t\t\t// otherwise push as-is\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/KeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A timed sequence of keyframes for a specific property.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tif( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\r\n\tif( times === undefined || times.length === 0 ) {\r\n\r\n\t\tthrow new Error( \"no keyframes in track named \" + name );\r\n\r\n\t}\r\n\r\n\tthis.name = name;\r\n\r\n\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\tthis.validate();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.prototype = {\r\n\r\n\tconstructor: THREE.KeyframeTrack,\r\n\r\n\tTimeBufferType: Float32Array,\r\n\tValueBufferType: Float32Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodDiscrete: function( result ) {\r\n\r\n\t\treturn new THREE.DiscreteInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.LinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: function( result ) {\r\n\r\n\t\treturn new THREE.CubicInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tsetInterpolation: function( interpolation ) {\r\n\r\n\t\tvar factoryMethod = undefined;\r\n\r\n\t\tswitch ( interpolation ) {\r\n\r\n\t\t\tcase THREE.InterpolateDiscrete:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateLinear:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateSmooth:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( message );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t},\r\n\r\n\tgetInterpolation: function() {\r\n\r\n\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\treturn THREE.InterpolateDiscrete;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\treturn THREE.InterpolateLinear;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\treturn THREE.InterpolateSmooth;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetValueSize: function() {\r\n\r\n\t\treturn this.values.length / this.times.length;\r\n\r\n\t},\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift: function( timeOffset ) {\r\n\r\n\t\tif( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale: function( timeScale ) {\r\n\r\n\t\tif( timeScale !== 1.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\ttrim: function( startTime, endTime ) {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tnKeys = times.length,\r\n\t\t\tfrom = 0,\r\n\t\t\tto = nKeys - 1;\r\n\r\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\r\n\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\r\n\r\n\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\tif( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\r\n\r\n\t\t\tvar stride = this.getValueSize();\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\r\n\t\t\tthis.values = THREE.AnimationUtils.\r\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\tvalidate: function() {\r\n\r\n\t\tvar valid = true;\r\n\r\n\t\tvar valueSize = this.getValueSize();\r\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\tconsole.error( \"invalid value size in track\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tif( nKeys === 0 ) {\r\n\r\n\t\t\tconsole.error( \"track is empty\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar prevTime = null;\r\n\r\n\t\tfor( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevTime = currTime;\r\n\r\n\t\t}\r\n\r\n\t\tif ( values !== undefined ) {\r\n\r\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t},\r\n\r\n\t// removes equivalent sequential keys as common in morph target sequences\r\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\toptimize: function() {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\twriteIndex = 1;\r\n\r\n\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\r\n\r\n\t\t\tvar keep = false;\r\n\r\n\t\t\tvar time = times[ i ];\r\n\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// in-place compaction\r\n\r\n\t\t\tif ( keep ) {\r\n\r\n\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.KeyframeTrack, {\r\n\r\n\t// Serialization (in static context, because of constructor invocation\r\n\t// and automatic invocation of .toJSON):\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tif( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tconsole.warn( \"legacy JSON format detected, converting\" );\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we asssume a constructor compatible with the base\r\n\t\t\treturn new trackType(\r\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function( track ) {\r\n\r\n\t\tvar trackType = track.constructor;\r\n\r\n\t\tvar json;\r\n\r\n\t\t// derived classes can define a static toJSON method\r\n\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\tjson = {\r\n\r\n\t\t\t\t'name': track.name,\r\n\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\t_getTrackTypeForValueTypeName: function( typeName ) {\r\n\r\n\t\tswitch( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase \"scalar\":\r\n\t\t\tcase \"double\":\r\n\t\t\tcase \"float\":\r\n\t\t\tcase \"number\":\r\n\t\t\tcase \"integer\":\r\n\r\n\t\t\t\treturn THREE.NumberKeyframeTrack;\r\n\r\n\t\t\tcase \"vector\":\r\n\t\t\tcase \"vector2\":\r\n\t\t\tcase \"vector3\":\r\n\t\t\tcase \"vector4\":\r\n\r\n\t\t\t\treturn THREE.VectorKeyframeTrack;\r\n\r\n\t\t\tcase \"color\":\r\n\r\n\t\t\t\treturn THREE.ColorKeyframeTrack;\r\n\r\n\t\t\tcase \"quaternion\":\r\n\r\n\t\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase \"bool\":\r\n\t\t\tcase \"boolean\":\r\n\r\n\t\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\t\treturn THREE.StringKeyframeTrack;\r\n\r\n\t\t};\r\n\r\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/animation/PropertyBinding.js\r\n\r\n/**\r\n *\r\n * A reference to a real property in the scene graph.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\r\n\r\n\tthis.path = path;\r\n\tthis.parsedPath = parsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis.node = THREE.PropertyBinding.findNode(\r\n\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\tthis.rootNode = rootNode;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding,\r\n\r\n\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t// prototype version of these methods with one that represents\r\n\t\t// the bound state. When the property is not found, the methods\r\n\t\t// become no-ops.\r\n\r\n\t},\r\n\r\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t},\r\n\r\n\t// create getter / setter pair for a property in the scene graph\r\n\tbind: function() {\r\n\r\n\t\tvar targetObject = this.node,\r\n\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\ttargetObject = THREE.PropertyBinding.findNode(\r\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\tthis.node = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// set fail state so we can just 'return' on error\r\n\t\tthis.getValue = this._getValue_unavailable;\r\n\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n \t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif( objectName ) {\r\n\r\n\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\tif( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\tif( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( targetObject[i].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\tif( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// resolve property\r\n\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\tif ( ! nodeProperty ) {\r\n\r\n\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\r\n\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// determine versioning scheme\r\n\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// determine how the property gets bound\r\n\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\tif ( propertyIndex !== undefined ) {\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else if ( nodeProperty.length !== undefined ) {\r\n\r\n\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t}\r\n\r\n\t\t// select getter / setter\r\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\t// back to the prototype version of getValue / setValue\r\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t// these are used to \"bind\" a nonexistent property\r\n\t_getValue_unavailable: function() {},\r\n\t_setValue_unavailable: function() {},\r\n\r\n\t// initial state of these methods that calls 'bind'\r\n\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\r\n\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\r\n\r\n\tBindingType: {\r\n\t\tDirect: 0,\r\n\t\tEntireArray: 1,\r\n\t\tArrayElement: 2,\r\n\t\tHasFromToArray: 3\r\n\t},\r\n\r\n\tVersioning: {\r\n\t\tNone: 0,\r\n\t\tNeedsUpdate: 1,\r\n\t\tMatrixWorldNeedsUpdate: 2\r\n\t},\r\n\r\n\tGetterByBindingType: [\r\n\r\n\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t}\r\n\r\n\t],\r\n\r\n\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t[\r\n\t\t\t// Direct\r\n\r\n\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// EntireArray\r\n\r\n\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// ArrayElement\r\n\r\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// HasToFromArray\r\n\r\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t]\r\n\r\n\t]\r\n\r\n} );\r\n\r\nTHREE.PropertyBinding.Composite =\r\n\t\tfunction( targetGroup, path, optionalParsedPath ) {\r\n\r\n\tvar parsedPath = optionalParsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis._targetGroup = targetGroup;\r\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.Composite.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding.Composite,\r\n\r\n\tgetValue: function( array, offset ) {\r\n\r\n\t\tthis.bind(); // bind all binding\r\n\r\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t// and only call .getValue on the first\r\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t},\r\n\r\n\tsetValue: function( array, offset ) {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].bind();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\r\n\r\n\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\r\n\r\n\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\r\n\r\n\t} else {\r\n\r\n\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\r\n\t// matches strings in the form of:\r\n\t//    nodeName.property\r\n\t//    nodeName.property[accessor]\r\n\t//    nodeName.material.property[accessor]\r\n\t//    uuid.property[accessor]\r\n\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t//    parentName/nodeName.property\r\n\t//    parentName/parentName/nodeName.property[index]\r\n\t//\t  .bone[Armature.DEF_cog].position\r\n\t// created and tested via https://regex101.com/#javascript\r\n\r\n\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\tvar matches = re.exec(trackName);\r\n\r\n\tif( ! matches ) {\r\n\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t}\r\n\r\n    if (matches.index === re.lastIndex) {\r\n        re.lastIndex++;\r\n    }\r\n\r\n\tvar results = {\r\n\t\t// directoryName: matches[1], // (tschw) currently unused\r\n\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\tobjectName: matches[5],\r\n\t\tobjectIndex: matches[7],\r\n\t\tpropertyName: matches[9],\r\n\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t};\r\n\r\n\tif( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t}\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\r\n\tif( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\treturn root;\r\n\r\n\t}\r\n\r\n\t// search into skeleton bones.\r\n\tif( root.skeleton ) {\r\n\r\n\t\tvar searchSkeleton = function( skeleton ) {\r\n\r\n\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = skeleton.bones[i];\r\n\r\n\t\t\t\tif( bone.name === nodeName ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar bone = searchSkeleton( root.skeleton );\r\n\r\n\t\tif( bone ) {\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// search into node subtree.\r\n\tif( root.children ) {\r\n\r\n\t\tvar searchNodeSubtree = function( children ) {\r\n\r\n\t\t\tfor( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tvar childNode = children[i];\r\n\r\n\t\t\t\tif( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\tif( result ) return result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\tif( subTreeNode ) {\r\n\r\n\t\t\treturn subTreeNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n// File:src/animation/PropertyMixer.js\r\n\r\n/**\r\n *\r\n * Buffered scene graph property that allows weighted accumulation.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\r\n\r\n\tthis.binding = binding;\r\n\tthis.valueSize = valueSize;\r\n\r\n\tvar bufferType = Float64Array,\r\n\t\tmixFunction;\r\n\r\n\tswitch ( typeName ) {\r\n\r\n\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\r\n\r\n\t\tcase 'string':\r\n\t\tcase 'bool':\r\n\r\n\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\r\n\r\n\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t}\r\n\r\n\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t//\r\n\t// interpolators can use .buffer as their .result\r\n\t// the data then goes to 'incoming'\r\n\t//\r\n\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t// the cumulative result and are compared to detect\r\n\t// changes\r\n\t//\r\n\t// 'orig' stores the original state of the property\r\n\r\n\tthis._mixBufferRegion = mixFunction;\r\n\r\n\tthis.cumulativeWeight = 0;\r\n\r\n\tthis.useCount = 0;\r\n\tthis.referenceCount = 0;\r\n\r\n};\r\n\r\nTHREE.PropertyMixer.prototype = {\r\n\r\n\tconstructor: THREE.PropertyMixer,\r\n\r\n\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\taccumulate: function( accuIndex, weight ) {\r\n\r\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentWeight = weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\tcurrentWeight += weight;\r\n\t\t\tvar mix = weight / currentWeight;\r\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t},\r\n\r\n\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\tapply: function( accuIndex ) {\r\n\r\n\t\tvar stride = this.valueSize,\r\n\t\t\tbuffer = this.buffer,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\tbinding = this.binding;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remember the state of the bound property and copy it to both accus\r\n\tsaveOriginalState: function() {\r\n\r\n\t\tvar binding = this.binding;\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t},\r\n\r\n\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\trestoreOriginalState: function() {\r\n\r\n\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t},\r\n\r\n\r\n\t// mix functions\r\n\r\n\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\r\n\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t},\r\n\r\n\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tvar s = 1 - t;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of Boolean keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values );\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.BooleanKeyframeTrack,\r\n\r\n\tValueTypeName: 'bool',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.IntepolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t// Note: Actually this track could have a optimized / compressed\r\n\t// representation of a single value and a custom interpolant that\r\n\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of numeric keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.NumberKeyframeTrack,\r\n\r\n\tValueTypeName: 'number',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of quaternion keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionKeyframeTrack,\r\n\r\n\tValueTypeName: 'quaternion',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.QuaternionLinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/StringKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.StringKeyframeTrack,\r\n\r\n\tValueTypeName: 'string',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.IntepolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of vectored keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.VectorKeyframeTrack,\r\n\r\n\tValueTypeName: 'vector'\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( listener.getInput() );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\tthis.hasPlaybackControl = true;\r\n\tthis.sourceType = 'empty';\r\n\r\n\tthis.filter = null;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.getOutput = function () {\r\n\r\n\treturn this.gain;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar buffer = new THREE.AudioBuffer( this.context );\r\n\tbuffer.load( file );\r\n\r\n\tthis.setBuffer( buffer );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setNodeSource = function ( audioNode ) {\r\n\r\n\tthis.hasPlaybackControl = false;\r\n\tthis.sourceType = 'audioNode';\r\n\tthis.source = audioNode;\r\n\tthis.connect();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setBuffer = function ( audioBuffer ) {\r\n\r\n\tvar scope = this;\r\n\r\n\taudioBuffer.onReady( function( buffer ) {\r\n\r\n\t\tscope.source.buffer = buffer;\r\n\t\tscope.sourceType = 'buffer';\r\n\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t} );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== null ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.getOutput() );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== null ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.getOutput() );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( value === undefined ) value = null;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\n// File:src/audio/AudioAnalyser.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioAnalyser = function ( audio, fftSize ) {\r\n\r\n\tthis.analyser = audio.context.createAnalyser();\r\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\taudio.getOutput().connect( this.analyser );\r\n\r\n};\r\n\r\nTHREE.AudioAnalyser.prototype = {\r\n\r\n\tconstructor: THREE.AudioAnalyser,\r\n\r\n\tgetData: function () {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\t\treturn this.data;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/audio/AudioBuffer.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioBuffer = function ( context ) {\r\n\r\n\tthis.context = context;\r\n\tthis.ready = false;\r\n\tthis.readyCallbacks = [];\r\n\r\n};\r\n\r\nTHREE.AudioBuffer.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.buffer = buffer;\r\n\t\t\tscope.ready = true;\r\n\r\n\t\t\tfor ( var i = 0; i < scope.readyCallbacks.length; i ++ ) {\r\n\r\n\t\t\t\tscope.readyCallbacks[ i ]( scope.buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.readyCallbacks = [];\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.AudioBuffer.prototype.onReady = function ( callback ) {\r\n\r\n\tif ( this.ready ) {\r\n\r\n\t\tcallback( this.buffer );\r\n\r\n\t} else {\r\n\r\n\t\tthis.readyCallbacks.push( callback );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/audio/PositionalAudio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PositionalAudio = function ( listener ) {\r\n\r\n\tTHREE.Audio.call( this, listener );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype = Object.create( THREE.Audio.prototype );\r\nTHREE.PositionalAudio.prototype.constructor = THREE.PositionalAudio;\r\n\r\nTHREE.PositionalAudio.prototype.getOutput = function () {\r\n\r\n\treturn this.panner;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.setDistanceModel = function ( value ) {\r\n\r\n\tthis.panner.distanceModel = value;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.getDistanceModel = function () {\r\n\r\n\treturn this.panner.distanceModel;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.setMaxDistance = function ( value ) {\r\n\r\n\tthis.panner.maxDistance = value;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.getMaxDistance = function () {\r\n\r\n\treturn this.panner.maxDistance;\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.filter = null;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.getInput = function () {\r\n\r\n\treturn this.gain;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype.removeFilter = function ( ) {\r\n\r\n\tif ( this.filter !== null ) {\r\n\r\n\t\tthis.gain.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.context.destination );\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\tthis.filter = null;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.filter !== null ) {\r\n\r\n\t\tthis.gain.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t} else {\r\n\r\n\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t}\r\n\r\n\tthis.filter = value;\r\n\tthis.gain.connect( this.filter );\r\n\tthis.filter.connect( this.context.destination );\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype.setMasterVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype.getMasterVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\r\n\tthis.zoom = source.zoom;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.focalLength = 10;\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\tthis.focalLength = source.focalLength;\r\n\tthis.zoom = source.zoom;\r\n\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.focalLength = this.focalLength;\r\n\tdata.object.zoom = this.zoom;\r\n\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/StereoCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.StereoCamera = function () {\r\n\r\n\tthis.type = 'StereoCamera';\r\n\r\n\tthis.aspect = 1;\r\n\r\n\tthis.cameraL = new THREE.PerspectiveCamera();\r\n\tthis.cameraL.layers.enable( 1 );\r\n\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\tthis.cameraR = new THREE.PerspectiveCamera();\r\n\tthis.cameraR.layers.enable( 2 );\r\n\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.StereoCamera.prototype = {\r\n\r\n\tconstructor: THREE.StereoCamera,\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar focalLength, fov, aspect, near, far;\r\n\r\n\t\tvar eyeRight = new THREE.Matrix4();\r\n\t\tvar eyeLeft = new THREE.Matrix4();\r\n\r\n\t\treturn function update ( camera ) {\r\n\r\n\t\t\tvar needsUpdate = focalLength !== camera.focalLength || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\tfocalLength = camera.focalLength;\r\n\t\t\t\tfov = camera.fov;\r\n\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\tnear = camera.near;\r\n\t\t\t\tfar = camera.far;\r\n\r\n\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\tvar eyeSep = 0.064 / 2;\r\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focalLength;\r\n\t\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t// for left eye\r\n\r\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t// for right eye\r\n\r\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color, intensity ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\tthis.receiveShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Light.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/LightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LightShadow = function ( camera ) {\r\n\r\n\tthis.camera = camera;\r\n\r\n\tthis.bias = 0;\r\n\tthis.radius = 1;\r\n\r\n\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\r\n\tthis.map = null;\r\n\tthis.matrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.LightShadow.prototype = {\r\n\r\n\tconstructor: THREE.LightShadow,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor, intensity );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nObject.defineProperty( THREE.PointLight.prototype, \"power\", {\r\n\r\n\tget: function () {\r\n\r\n\t\t// intensity = power per solid angle.\r\n\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t},\r\n\r\n\tset: function ( power ) {\r\n\r\n\t\t// intensity = power per solid angle.\r\n\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nObject.defineProperty( THREE.SpotLight.prototype, \"power\", {\r\n\r\n\tget: function () {\r\n\r\n\t\t// intensity = power per solid angle.\r\n\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\treturn this.intensity * Math.PI;\r\n\r\n\t},\r\n\r\n\tset: function ( power ) {\r\n\r\n\t\t// intensity = power per solid angle.\r\n\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\tthis.intensity = power / Math.PI;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.penumbra = source.penumbra;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar color, textureLoader, materialLoader;\r\n\r\n\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\r\n\t\t\t// convert from old material format\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\r\n\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\treturn uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar json = {\r\n\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tvar handlers = this.handlers;\r\n\r\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = handlers[ i ];\r\n\t\t\tvar loader  = handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.overrideMimeType( 'text/plain' );\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tvar response = event.target.response;\r\n\r\n\t\t\tTHREE.Cache.add( url, response );\r\n\r\n\t\t\tif ( this.status === 200 ) {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else if ( this.status === 0 ) {\r\n\r\n\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/FontLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.FontLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.FontLoader.prototype = {\r\n\r\n\tconstructor: THREE.FontLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( new THREE.Font( JSON.parse( text.substring( 65, text.length - 2 ) ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tvar type = metadata.type;\r\n\r\n\t\t\t\tif ( type !== undefined ) {\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\t\tparseAnimations();\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimations() {\r\n\r\n\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tif ( json.animation !== undefined ) {\r\n\r\n\t\t\t\tanimations.push( json.animation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.animations !== undefined ) {\r\n\r\n\t\t\t\tif ( json.animations.length ) {\r\n\r\n\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tanimations.push( json.animations );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// parse implicit morph animations\r\n\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tvar TYPED_ARRAYS = {\r\n\t\t\t'Int8Array': Int8Array,\r\n\t\t\t'Uint8Array': Uint8Array,\r\n\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\r\n\t\t\t'Int16Array': Int16Array,\r\n\t\t\t'Uint16Array': Uint16Array,\r\n\t\t\t'Int32Array': Int32Array,\r\n\t\t\t'Uint32Array': Uint32Array,\r\n\t\t\t'Float32Array': Float32Array,\r\n\t\t\t'Float64Array': Float64Array\r\n\t\t};\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MultiMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.animations ) {\r\n\r\n\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'LatheGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.LatheGeometry(\r\n\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseAnimations: function ( json ) {\r\n\r\n\t\tvar animations = [];\r\n\r\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.Texture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CubeTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.CubeTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CubeTextureLoader,\r\n\r\n\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.CubeTexture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\timages[ i ] = {\r\n\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t};\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\tthis.premultipliedAlpha = false;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRoot = meta === undefined;\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== 0.5 ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== 0.5 ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshStandardMaterial.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshStandardMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshStandardMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.roughness = 0.5;\r\n\tthis.metalness = 0.5;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.roughnessMap = null;\r\n\r\n\tthis.metalnessMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.envMapIntensity = 1.0;\r\n\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\r\n\r\nTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.roughness = source.roughness;\r\n\tthis.metalness = source.metalness;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tvar materials = this.materials;\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar material = materials[ i ].toJSON( meta );\r\n\t\t\tdelete material.metadata;\r\n\r\n\t\t\toutput.materials.push( material );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.extensions = {\r\n\t\tderivatives: false, // set to use derivatives\r\n\t\tfragDepth: false, // set to use fragment depth values\r\n\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t};\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.extensions = source.extensions;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\r\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t//\r\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\tthis.encoding = THREE.LinearEncoding;\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.encoding = source.encoding;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\timages = images !== undefined ? images : [];\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\r\n\r\n\tget: function () {\r\n\r\n\t\treturn this.image;\r\n\r\n\t},\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tfunction update() {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar matrixWorld = this.matrixWorld;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.drawMode = THREE.TrianglesDrawMode;\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.setDrawMode = function ( value ) {\r\n\r\n\tthis.drawMode = value;\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\tvar intersect;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\r\n\t\t}\r\n\r\n\t\tif ( intersect === null ) return null;\r\n\r\n\t\tintersectionPointWorld.copy( point );\r\n\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\treturn {\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\tobject: object\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\r\n\t\tvA.fromArray( positions, a * 3 );\r\n\t\tvB.fromArray( positions, b * 3 );\r\n\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\tif ( intersection ) {\r\n\r\n\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\tintersection.faceIndex = a;\r\n\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\tvar uvs, intersection;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\tuvs = attributes.uv.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar fvA, fvB, fvC;\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.skin = source.skin;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tvar vec = new THREE.Vector4();\r\n\r\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n\t\t\tvar scale = 1.0 / vec.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t}\r\n\r\n\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source, recursive ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\r\n\r\nTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\nconst float cubeUV_textureSize = 1024.0;\\nint getFaceFromDirection(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    int face = -1;\\n    if( absDirection.x > absDirection.z ) {\\n        if(absDirection.x > absDirection.y )\\n            face = direction.x > 0.0 ? 0 : 3;\\n        else\\n            face = direction.y > 0.0 ? 1 : 4;\\n    }\\n    else {\\n        if(absDirection.z > absDirection.y )\\n            face = direction.z > 0.0 ? 2 : 5;\\n        else\\n            face = direction.y > 0.0 ? 1 : 4;\\n    }\\n    return face;\\n}\\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n    float dxRoughness = dFdx(roughness);\\n    float dyRoughness = dFdy(roughness);\\n    vec3 dx = dFdx( vec * scale * dxRoughness );\\n    vec3 dy = dFdy( vec * scale * dyRoughness );\\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\\n    float mipLevel = 0.5 * log2(d);\\n    return vec2(floor(mipLevel), fract(mipLevel));\\n}\\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n    float a = 16.0 * cubeUV_rcpTextureSize;\\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n    float powScale = exp2_packed.x * exp2_packed.y;\\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n    bool bRes = mipLevel == 0.0;\\n    scale =  bRes && (scale < a) ? a : scale;\\n    vec3 r;\\n    vec2 offset;\\n    int face = getFaceFromDirection(direction);\\n    float rcpPowScale = 1.0 / powScale;\\n    if( face == 0) {\\n        r = vec3(direction.x, -direction.z, direction.y);\\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 1) {\\n        r = vec3(direction.y, direction.x, direction.z);\\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 2) {\\n        r = vec3(direction.z, direction.x, direction.y);\\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n    }\\n    else if( face == 3) {\\n        r = vec3(direction.x, direction.z, direction.y);\\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    else if( face == 4) {\\n        r = vec3(direction.y, direction.x, -direction.z);\\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    else {\\n        r = vec3(direction.z, -direction.x, direction.y);\\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n    }\\n    r = normalize(r);\\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n    vec2 base = offset + vec2( texelOffset );\\n    return base + s * ( scale - 2.0 * texelOffset );\\n}\\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n    float roughnessVal = roughness* cubeUV_maxLods3;\\n    float r1 = floor(roughnessVal);\\n    float r2 = r1 + 1.0;\\n    float t = fract(roughnessVal);\\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n    float s = mipInfo.y;\\n    float level0 = mipInfo.x;\\n    float level1 = level0 + 1.0;\\n    level1 = level1 > 5.0 ? 5.0 : level1;\\n    level0 += min( floor( s + 0.5 ), 5.0 );\\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n    vec4 result = mix(color10, color20, t);\\n    return vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvarying vec3 vReflect;\\n\tuniform float refractionRatio;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t#else\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getPointDirectLightIrradiance( pointLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tIncidentLight getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tIncidentLight getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tIncidentLight getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#endif\\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex' ] = \"#ifdef USE_ENVMAP\\n\tvWorldPosition = worldPosition.xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_standard_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_standard_fragment' ] = \"StandardMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_standard_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_standard_pars_fragment' ] = \"struct StandardMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n};\\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Standard\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tdirectLight = getPointDirectLightIrradiance( pointLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\treturn dot( rgba_depth, bit_shift );\\n\t}\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\": { type: \"t\", value: null },\r\n\t\t\"alphaMap\": { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\": { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\": { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\": { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\": { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\": { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\": { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\": { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\": { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\": { type: \"t\", value: null },\r\n\t\t\"bumpScale\": { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\": { type: \"t\", value: null },\r\n\t\t\"normalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\": { type: \"t\", value: null },\r\n\t\t\"displacementScale\": { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\": { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\t\"roughnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\t\"metalnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\t\"fogDensity\": { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\": { type: \"f\", value: 1 },\r\n\t\t\"fogFar\": { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\": { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"color\": { type: \"c\" },\r\n\r\n\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"directionalShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"directionalShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"spotLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"distance\": { type: \"f\" },\r\n\t\t\t\"coneCos\": { type: \"f\" },\r\n\t\t\t\"penumbraCos\": { type: \"f\" },\r\n\t\t\t\"decay\": { type: \"f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"spotShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"spotShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"pointLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"decay\": { type: \"f\" },\r\n\t\t\t\"distance\": { type: \"f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"i\" },\r\n\t\t\t\"shadowBias\": { type: \"f\" },\r\n\t\t\t\"shadowRadius\": { type: \"f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"pointShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"pointShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"hemisphereLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"skyColor\": { type: \"c\" },\r\n\t\t\t\"groundColor\": { type: \"c\" }\r\n\t\t} }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"f\", value: 1.0 },\r\n\t\t\"size\": { type: \"f\", value: 1.0 },\r\n\t\t\"scale\": { type: \"f\", value: 1.0 },\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_frag' ] = \"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\t#include <logdepthbuf_fragment>\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depthRGBA_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'depthRGBA_frag' ] = \"#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvec4 pack_depth( const in float depth ) {\\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\tres -= res.xxyz * bit_mask;\\n\treturn res;\\n}\\nvoid main() {\\n\t#include <logdepthbuf_fragment>\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\t#else\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depthRGBA_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'depthRGBA_vert' ] = \"#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\nvec4 pack1K ( float depth ) {\\n\tdepth /= 1000.0;\\n\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\tres -= res.xxyz * bitMsk;\\n\treturn res;\\n}\\nfloat unpack1K ( vec4 color ) {\\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\treturn dot( color, bitSh ) * 1000.0;\\n}\\nvoid main () {\\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <lights_phong_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_phong_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshstandard_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshstandard_frag' ] = \"#define STANDARD\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_standard_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_standard_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshstandard_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshstandard_vert' ] = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['meshbasic_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['meshbasic_frag']\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['meshlambert_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['meshlambert_frag']\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['meshphong_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['meshphong_frag']\r\n\r\n\t},\r\n\r\n\t'standard': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"roughnessmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"metalnessmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"roughness\": { type: \"f\", value: 0.5 },\r\n\t\t\t\t\"metalness\": { type: \"f\", value: 0 },\r\n\t\t\t\t\"envMapIntensity\" : { type: \"f\", value: 1 } // temporary\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['meshstandard_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['meshstandard_frag']\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['points_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['points_frag']\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['linedashed_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['linedashed_frag']\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['depth_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['depth_frag']\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['normal_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['normal_frag']\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tCube\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['cube_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['cube_frag']\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['equirect_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['equirect_frag']\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['depthRGBA_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['depthRGBA_frag']\r\n\r\n\t},\r\n\r\n\r\n\t'distanceRGBA': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\r\n\t\tfragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = - 1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = - 1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// physical lights\r\n\r\n\tthis.physicallyCorrectLights = false;\r\n\r\n\t// tone mapping\r\n\r\n\tthis.toneMapping = THREE.LinearToneMapping;\r\n\tthis.toneMappingExposure = 1.0;\r\n\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentRenderTarget = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_currentScissor = new THREE.Vector4(),\r\n\t_currentScissorTest = null,\r\n\r\n\t_currentViewport = new THREE.Vector4(),\r\n\r\n\t//\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t//\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\t_pixelRatio = 1,\r\n\r\n\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\r\n\t_scissorTest = false,\r\n\r\n\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t// camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_lights = {\r\n\r\n\t\thash: '',\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: [],\r\n\t\tdirectionalShadowMap: [],\r\n\t\tdirectionalShadowMatrix: [],\r\n\t\tspot: [],\r\n\t\tspotShadowMap: [],\r\n\t\tspotShadowMatrix: [],\r\n\t\tpoint: [],\r\n\t\tpointShadowMap: [],\r\n\t\tpointShadowMatrix: [],\r\n\t\themi: [],\r\n\r\n\t\tshadows: [],\r\n\t\tshadowsPointLight: 0\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\tvar lightCache = new THREE.WebGLLights();\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction getTargetPixelRatio() {\r\n\r\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t}\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\tstate.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.properties = properties;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn _pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value === undefined ) return;\r\n\r\n\t\t_pixelRatio = value;\r\n\r\n\t\tthis.setSize( _viewport.z, _viewport.w, false );\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * _pixelRatio;\r\n\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\tstate.viewport( _viewport.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\tstate.scissor( _scissor.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\tthis.clear( true, false, false );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\tthis.clear( false, true, false );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\tthis.clear( false, false, true );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\tif ( ! renderTarget || textureProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget.texture );\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( absNumericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar dataStart = 0;\r\n\t\tvar dataCount = Infinity;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdataCount = index.count;\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\tdataCount = position.count;\r\n\r\n\t\t}\r\n\r\n\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\tvar rangeCount = geometry.drawRange.count;\r\n\r\n\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\r\n\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t//\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\tcase THREE.TrianglesDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleStripDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleFanDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = - 1;\r\n\t\ttransparentObjectsLastIndex = - 1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene, camera );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\tsetupLights( lights, camera );\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\trenderTarget = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\trenderObjects( opaqueObjects, camera, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, _lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniforms = materialProperties.__webglShader.uniforms,\r\n\t\t\tuniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\tmaterial instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\tmaterial instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\tmaterial.lights ) {\r\n\r\n\t\t\t// store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\r\n\r\n\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\r\n\t\t\tuniforms.directionalLights.value = _lights.directional;\r\n\t\t\tuniforms.spotLights.value = _lights.spot;\r\n\t\t\tuniforms.pointLights.value = _lights.point;\r\n\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\r\n\r\n\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\r\n\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\r\n\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\r\n\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\r\n\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\r\n\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\r\n\r\n\t\t}\r\n\r\n\t\t// detect dynamic uniforms\r\n\r\n\t\tmaterialProperties.hasDynamicUniforms = false;\r\n\r\n\t\tfor ( var j = 0, jl = materialProperties.uniformsList.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = materialProperties.uniformsList[ j ][ 0 ];\r\n\r\n\t\t\tif ( uniform.dynamic === true ) {\r\n\r\n\t\t\t\tmaterialProperties.hasDynamicUniforms = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.lightsHash !== undefined &&\r\n\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tinitMaterial( material, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) {\r\n\r\n\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( p_uniforms.toneMappingExposure !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.toneMappingExposure, _this.toneMappingExposure );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p_uniforms.toneMappingWhitePoint !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.toneMappingWhitePoint, _this.toneMappingWhitePoint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t// values\r\n\t\t\t\t//\r\n\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.hasDynamicUniforms === true ) {\r\n\r\n\t\t\tupdateDynamicUniforms( materialProperties.uniformsList, object, camera );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction updateDynamicUniforms ( uniforms, object, camera ) {\r\n\r\n\t\tvar dynamicUniforms = [];\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\t\tvar onUpdateCallback = uniform.onUpdateCallback;\r\n\r\n\t\t\tif ( onUpdateCallback !== undefined ) {\r\n\r\n\t\t\t\tonUpdateCallback.bind( uniform )( object, camera );\r\n\t\t\t\tdynamicUniforms.push( uniforms[ j ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsGeneric( dynamicUniforms );\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPoints ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\tuniforms.scale.value = _canvas.clientHeight / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsStandard ( uniforms, material ) {\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.envMap ) {\r\n\r\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniform( uniform, type, location, value ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tif ( type === '1i' ) {\r\n\r\n\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t} else if ( type === '1f' ) {\r\n\r\n\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t} else if ( type === '2f' ) {\r\n\r\n\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\r\n\t\t} else if ( type === '3f' ) {\r\n\r\n\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\r\n\t\t} else if ( type === '4f' ) {\r\n\r\n\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\r\n\t\t} else if ( type === '1iv' ) {\r\n\r\n\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t} else if ( type === '3iv' ) {\r\n\r\n\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t} else if ( type === '1fv' ) {\r\n\r\n\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t} else if ( type === '2fv' ) {\r\n\r\n\t\t\t_gl.uniform2fv( location, value );\r\n\r\n\t\t} else if ( type === '3fv' ) {\r\n\r\n\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t} else if ( type === '4fv' ) {\r\n\r\n\t\t\t_gl.uniform4fv( location, value );\r\n\r\n\t\t} else if ( type === 'Matrix2fv' ) {\r\n\r\n\t\t\t_gl.uniformMatrix2fv( location, false, value );\r\n\r\n\t\t} else if ( type === 'Matrix3fv' ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\r\n\t\t} else if ( type === 'Matrix4fv' ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\r\n\t\t//\r\n\r\n\t\t} else if ( type === 'i' ) {\r\n\r\n\t\t\t// single integer\r\n\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t} else if ( type === 'f' ) {\r\n\r\n\t\t\t// single float\r\n\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t} else if ( type === 'v2' ) {\r\n\r\n\t\t\t// single THREE.Vector2\r\n\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t} else if ( type === 'v3' ) {\r\n\r\n\t\t\t// single THREE.Vector3\r\n\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t} else if ( type === 'v4' ) {\r\n\r\n\t\t\t// single THREE.Vector4\r\n\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t} else if ( type === 'c' ) {\r\n\r\n\t\t\t// single THREE.Color\r\n\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t} else if ( type === 's' ) {\r\n\r\n\t\t\t// TODO: Optimize this\r\n\r\n\t\t\tvar properties = uniform.properties;\r\n\r\n\t\t\tfor ( var name in properties ) {\r\n\r\n\t\t\t\tvar property = properties[ name ];\r\n\t\t\t\tvar locationProperty = location[ name ];\r\n\t\t\t\tvar valueProperty = value[ name ];\r\n\r\n\t\t\t\tloadUniform( property, property.type, locationProperty, valueProperty );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( type === 'sa' ) {\r\n\r\n\t\t\t// TODO: Optimize this\r\n\r\n\t\t\tvar properties = uniform.properties;\r\n\r\n\t\t\tfor ( var i = 0, l = value.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var name in properties ) {\r\n\r\n\t\t\t\t\tvar property = properties[ name ];\r\n\t\t\t\t\tvar locationProperty =  location[ i ][ name ];\r\n\t\t\t\t\tvar valueProperty = value[ i ][ name ];\r\n\r\n\t\t\t\t\tloadUniform( property, property.type, locationProperty, valueProperty );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( type === 'iv1' ) {\r\n\r\n\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t} else if ( type === 'iv' ) {\r\n\r\n\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t} else if ( type === 'fv1' ) {\r\n\r\n\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t} else if ( type === 'fv' ) {\r\n\r\n\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t} else if ( type === 'v2v' ) {\r\n\r\n\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t} else if ( type === 'v3v' ) {\r\n\r\n\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t} else if ( type === 'v4v' ) {\r\n\r\n\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t} else if ( type === 'm2' ) {\r\n\r\n\t\t\t// single THREE.Matrix2\r\n\t\t\t_gl.uniformMatrix2fv( location, false, value.elements );\r\n\r\n\t\t} else if ( type === 'm3' ) {\r\n\r\n\t\t\t// single THREE.Matrix3\r\n\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t} else if ( type === 'm3v' ) {\r\n\r\n\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t} else if ( type === 'm4' ) {\r\n\r\n\t\t\t// single THREE.Matrix4\r\n\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t} else if ( type === 'm4v' ) {\r\n\r\n\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t} else if ( type === 't' ) {\r\n\r\n\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\ttexture = value;\r\n\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\tif ( ! texture ) return;\r\n\r\n\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\r\n\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( type === 'tv' ) {\r\n\r\n\t\t\t// array of THREE.Texture (2d or cube)\r\n\r\n\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t ( texture.image instanceof Array && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\r\n\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric( uniforms ) {\r\n\r\n\t\tfor ( var i = 0, l = uniforms.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ i ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar location = uniforms[ i ][ 1 ];\r\n\t\t\tvar value = uniform.value;\r\n\r\n\t\t\tloadUniform( uniform, type, location, value );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirectionalLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tshadowsLength = 0;\r\n\r\n\t\t_lights.shadowsPointLight = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tr += color.r * intensity;\r\n\t\t\t\tg += color.g * intensity;\r\n\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = light.shadow.map;\r\n\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.spotShadowMap[ spotLength ] = light.shadow.map;\r\n\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t\t_lights.shadows[ shadowsLength ++ ] = light;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.pointShadowMap[ pointLength ] = light.shadow.map;\r\n\r\n\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\r\n\r\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\r\n\r\n\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_lights.ambient[ 0 ] = r;\r\n\t\t_lights.ambient[ 1 ] = g;\r\n\t\t_lights.ambient[ 2 ] = b;\r\n\r\n\t\t_lights.directional.length = directionalLength;\r\n\t\t_lights.spot.length = spotLength;\r\n\t\t_lights.point.length = pointLength;\r\n\t\t_lights.hemi.length = hemiLength;\r\n\r\n\t\t_lights.shadows.length = shadowsLength;\r\n\r\n\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + shadowsLength;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isPowerOfTwoImage ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n\t\t\timage = makePowerOfTwo( image );\r\n\r\n\t\t}\r\n\r\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\t// Setup storage for target texture and bind it to correct framebuffer\r\n\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\r\n\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\r\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup GL resources for a non-texture depth buffer\r\n\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Set up GL resources for the render target\r\n\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t_infoMemory.textures ++;\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height );\r\n\r\n\t\t// Setup framebuffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t}\r\n\r\n\t\t// Setup color buffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup depth and stencil buffers\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.getCurrentRenderTarget = function() {\r\n\r\n\t\treturn _currentRenderTarget;\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tsetupRenderTarget( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar framebuffer;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\tstate.scissor( _currentScissor );\r\n\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\tstate.viewport( _currentViewport );\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\tif ( framebuffer ) {\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat\r\n\t\t\t\t\t&& paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.type !== THREE.UnsignedByteType\r\n\t\t\t\t\t&& paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE )\r\n\t\t\t\t\t&& ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) )\r\n\t\t\t\t\t&& ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} finally {\r\n\r\n\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\r\n\t\tstate.bindTexture( target, texture );\r\n\t\t_gl.generateMipmap( target );\r\n\t\tstate.bindTexture( target, null );\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author Marius Kintel / https://github.com/kintel\r\n */\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\r\n\tthis.scissorTest = false;\r\n\r\n\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\r\n\r\n\toptions = options || {};\r\n\r\n\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\r\n\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy );\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.texture = source.texture.clone();\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\tthis.activeMipMapLevel = 0;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tvar count = 0;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tcount = position.data.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcount = position.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_etc1':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\tdeleteAttribute( buffergeometry.index );\r\n\r\n\t\t}\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t// TODO\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( property.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( geometry );\r\n\r\n\t\tvar bufferproperty = properties.get( buffergeometry );\r\n\r\n\t\tif ( bufferproperty.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( bufferproperty.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( buffergeometry );\r\n\r\n\t\t//\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLLights.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLLights = function () {\r\n\r\n\tvar lights = {};\r\n\r\n\tthis.get = function ( light ) {\r\n\r\n\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\treturn lights[ light.id ];\r\n\r\n\t\t}\r\n\r\n\t\tvar uniforms;\r\n\r\n\t\tswitch ( light.type ) {\r\n\r\n\t\t\tcase 'DirectionalLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SpotLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'HemisphereLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tskyColor: new THREE.Color(),\r\n\t\t\t\t\tgroundColor: new THREE.Color()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\t// TODO: Combine the regex\r\n\tvar structRe = /^([\\w\\d_]+)\\.([\\w\\d_]+)$/;\r\n\tvar arrayStructRe = /^([\\w\\d_]+)\\[(\\d+)\\]\\.([\\w\\d_]+)$/;\r\n\tvar arrayRe = /^([\\w\\d_]+)\\[0\\]$/;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase THREE.LinearEncoding:\r\n\t\t\t\treturn [ 'Linear','( value )' ];\r\n\t\t\tcase THREE.sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB','( value )' ];\r\n\t\t\tcase THREE.RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE','( value )' ];\r\n\t\t\tcase THREE.RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\r\n\t\t\tcase THREE.RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\r\n\t\t\tcase THREE.RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\r\n\t\t\tcase THREE.GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase THREE.LinearToneMapping:\r\n\t\t\t\ttoneMappingName = \"Linear\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = \"Reinhard\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = \"Uncharted2\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.CineonToneMapping:\r\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t//console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar matches = structRe.exec( name );\r\n\t\t\tif ( matches ) {\r\n\r\n\t\t\t\tvar structName = matches[ 1 ];\r\n\t\t\t\tvar structProperty = matches[ 2 ];\r\n\r\n\t\t\t\tvar uniformsStruct = uniforms[ structName ];\r\n\r\n\t\t\t\tif ( ! uniformsStruct ) {\r\n\r\n\t\t\t\t\tuniformsStruct = uniforms[ structName ] = {};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniformsStruct[ structProperty ] = location;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmatches = arrayStructRe.exec( name );\r\n\r\n\t\t\tif ( matches ) {\r\n\r\n\t\t\t\tvar arrayName = matches[ 1 ];\r\n\t\t\t\tvar arrayIndex = matches[ 2 ];\r\n\t\t\t\tvar arrayProperty = matches[ 3 ];\r\n\r\n\t\t\t\tvar uniformsArray = uniforms[ arrayName ];\r\n\r\n\t\t\t\tif ( ! uniformsArray ) {\r\n\r\n\t\t\t\t\tuniformsArray = uniforms[ arrayName ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uniformsArrayIndex = uniformsArray[ arrayIndex ];\r\n\r\n\t\t\t\tif ( ! uniformsArrayIndex ) {\r\n\r\n\t\t\t\t\tuniformsArrayIndex = uniformsArray[ arrayIndex ] = {};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniformsArrayIndex[ arrayProperty ] = location;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmatches = arrayRe.exec( name );\r\n\r\n\t\t\tif ( matches ) {\r\n\r\n\t\t\t\tvar arrayName = matches[ 1 ];\r\n\r\n\t\t\t\tuniforms[ arrayName ] = location;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = THREE.ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar extensions = material.extensions;\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.CubeUVReflectionMapping:\r\n\t\t\t\tcase THREE.CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\r\n\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\r\n\r\n\t\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tMeshStandardMaterial: 'standard',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\"roughnessMap\", \"metalnessMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\r\n\t\t\"shadowMapEnabled\", \"pointLightShadows\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\"shadowMapType\",\r\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\tvar encoding;\r\n\r\n\t\tif ( ! map ) {\r\n\r\n\t\t\tencoding = THREE.LinearEncoding;\r\n\r\n\t\t} else if ( map instanceof THREE.Texture ) {\r\n\r\n\t\t\tencoding = map.encoding;\r\n\r\n\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t}\r\n\r\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\tencoding = THREE.GammaEncoding;\r\n\r\n\t\t}\r\n\r\n\t\treturn encoding;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\toutputEncoding: getTextureEncodingFromMap( renderer.getCurrentRenderTarget(), renderer.gammaOutput ),\r\n\t\t\tmap: !! material.map,\r\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\tnumPointLights: lights.point.length,\r\n\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\tpointLightShadows: lights.shadowsPointLight,\r\n\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_shadowMapSize = new THREE.Vector2(),\r\n\r\n\t_lookTarget = new THREE.Vector3(),\r\n\t_lightPositionWorld = new THREE.Vector3(),\r\n\r\n\t_renderList = [],\r\n\r\n\t_MorphingFlag = 1,\r\n\t_SkinningFlag = 2,\r\n\r\n\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t_distanceMaterials = new Array( _NumberOfMaterialVariants );\r\n\r\n\tvar cubeDirections = [\r\n\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t];\r\n\r\n\tvar cubeUps = [\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t];\r\n\r\n\tvar cube2DViewPorts = [\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\r\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\tvar depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning\r\n\t\t} );\r\n\r\n\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tdefines: {\r\n\t\t\t\t'USE_SHADOWMAP': ''\r\n\t\t\t},\r\n\t\t\tuniforms: distanceUniforms,\r\n\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning\r\n\t\t} );\r\n\r\n\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tvar faceCount, isPointLight;\r\n\t\tvar shadows = _lights.shadows;\r\n\r\n\t\tif ( shadows.length === 0 ) return;\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_state.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK );\r\n\t\t_state.setDepthTest( true );\r\n\t\t_state.setScissorTest( false );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = shadows.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = shadows[ i ];\r\n\r\n\t\t\tvar shadow = light.shadow;\r\n\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\r\n\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tfaceCount = 6;\r\n\t\t\t\tisPointLight = true;\r\n\r\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t// following orientation:\r\n\t\t\t\t//\r\n\t\t\t\t//  xzXZ\r\n\t\t\t\t//   y Y\r\n\t\t\t\t//\r\n\t\t\t\t// X - Positive x direction\r\n\t\t\t\t// x - Negative x direction\r\n\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t// y - Negative y direction\r\n\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t// positive X\r\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative X\r\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Z\r\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative Z\r\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Y\r\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t// negative Y\r\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfaceCount = 1;\r\n\t\t\t\tisPointLight = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tshadowCamera.aspect = _shadowMapSize.x / _shadowMapSize.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = shadow.map;\r\n\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t// run a single pass if not\r\n\r\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t_renderList.length = 0;\r\n\r\n\t\t\t\tprojectObject( scene, camera, shadowCamera );\r\n\r\n\t\t\t\t// render shadow map\r\n\t\t\t\t// render regular objects\r\n\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Restore GL state.\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar newMaterial = null;\r\n\r\n\t\tvar materialVariants = _depthMaterials;\r\n\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\tif ( isPointLight ) {\r\n\r\n\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\tnewMaterial = materialVariants[ variantIndex ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewMaterial = customMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tnewMaterial.visible = material.visible;\r\n\t\tnewMaterial.wireframe = material.wireframe;\r\n\t\tnewMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\tif ( isPointLight && newMaterial.uniforms.lightPos !== undefined ) {\r\n\r\n\t\t\tnewMaterial.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn newMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera, shadowCamera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera, shadowCamera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar color = new THREE.Vector4();\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\tvar attributeDivisors = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\tvar currentPremultipledAlpha = false;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentStencilWrite = null;\r\n\tvar currentStencilFunc = null;\r\n\tvar currentStencilRef = null;\r\n\tvar currentStencilMask = null;\r\n\tvar currentStencilFail  = null;\r\n\tvar currentStencilZFail = null;\r\n\tvar currentStencilZPass = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar currentScissorTest = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tvar currentClearColor = new THREE.Vector4();\r\n\tvar currentClearDepth = null;\r\n\tvar currentClearStencil = null;\r\n\r\n\tvar currentScissor = new THREE.Vector4();\r\n\tvar currentViewport = new THREE.Vector4();\r\n\r\n\tvar emptyTexture = gl.createTexture();\r\n\tgl.bindTexture( gl.TEXTURE_2D, emptyTexture );\r\n\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\r\n\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array( 3 ) );\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tthis.clearColor( 0, 0, 0, 1 );\r\n\t\tthis.clearDepth( 1 );\r\n\t\tthis.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\tattributeDivisors[ attribute ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\tif ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.SRC_COLOR, gl.SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\t// TODO: Rename to setDepthMask\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\t// TODO: Rename to setColorMask\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t currentStencilRef \t!== stencilRef \t||\r\n\t\t\t\t currentStencilMask !== stencilMask ) {\r\n\r\n\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\r\n\r\n\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\tcurrentStencilRef  = stencilRef;\r\n\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t\t\t currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\r\n\r\n\t\t\tcurrentStencilFail  = stencilFail;\r\n\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setStencilTest = function ( stencilTest ) {\r\n\r\n\t\tif ( stencilTest ) {\r\n\r\n\t\t\tthis.enable( gl.STENCIL_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.STENCIL_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setStencilWrite = function ( stencilWrite ) {\r\n\r\n\t\t// TODO: Rename to setStencilMask\r\n\r\n\t\tif ( currentStencilWrite !== stencilWrite ) {\r\n\r\n\t\t\tgl.stencilMask( stencilWrite );\r\n\t\t\tcurrentStencilWrite = stencilWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getScissorTest = function () {\r\n\r\n\t\treturn currentScissorTest;\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tcurrentScissorTest = scissorTest;\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// clear values\r\n\r\n\tthis.clearColor = function ( r, g, b, a ) {\r\n\r\n\t\tcolor.set( r, g, b, a );\r\n\r\n\t\tif ( currentClearColor.equals( color ) === false ) {\r\n\r\n\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\tcurrentClearColor.copy( color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function ( depth ) {\r\n\r\n\t\tif ( currentClearDepth !== depth ) {\r\n\r\n\t\t\tgl.clearDepth( depth );\r\n\t\t\tcurrentClearDepth = depth;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function ( stencil ) {\r\n\r\n\t\tif ( currentClearStencil !== stencil ) {\r\n\r\n\t\t\tgl.clearStencil( stencil );\r\n\t\t\tcurrentClearStencil = stencil;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.scissor = function ( scissor ) {\r\n\r\n\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.viewport = function ( viewport ) {\r\n\r\n\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentTextureSlot = undefined;\r\n\t\tcurrentBoundTextures = {};\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentColorWrite = null;\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentStencilWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewport ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewport.w / viewport.z,\r\n\t\t\thalfViewportWidth = viewport.z * 0.5,\r\n\t\t\thalfViewportHeight = viewport.w * 0.5;\r\n\r\n\t\tvar size = 16 / viewport.w,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.setDepthWrite( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewport.w;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewport.z &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewport.w ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, viewport.x + screenPositionPixels.x - 8, viewport.y + screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tstate.setDepthWrite( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\t\t\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/Three.Legacy.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nObject.defineProperties( THREE.Box2.prototype, {\r\n\tempty: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\t\t}\r\n\t},\r\n\tisIntersectionBox: {\r\n\t\tvalue: function ( box ) {\r\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Box3.prototype, {\r\n\tempty: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\t\t}\r\n\t},\r\n\tisIntersectionBox: {\r\n\t\tvalue: function ( box ) {\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\t\t}\r\n\t},\r\n\tisIntersectionSphere: {\r\n\t\tvalue: function ( sphere ) {\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Matrix3.prototype, {\r\n\tmultiplyVector3: {\r\n\t\tvalue: function ( vector ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\t}\r\n\t},\r\n\tmultiplyVector3Array: {\r\n\t\tvalue: function ( a ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Matrix4.prototype, {\r\n\textractPosition: {\r\n\t\tvalue: function ( m ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\t}\r\n\t},\r\n\tsetRotationFromQuaternion: {\r\n\t\tvalue: function ( q ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\t}\r\n\t},\r\n\tmultiplyVector3: {\r\n\t\tvalue: function ( vector ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\t}\r\n\t},\r\n\tmultiplyVector4: {\r\n\t\tvalue: function ( vector ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\t}\r\n\t},\r\n\tmultiplyVector3Array: {\r\n\t\tvalue: function ( a ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\t}\r\n\t},\r\n\trotateAxis: {\r\n\t\tvalue: function ( v ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\t\tv.transformDirection( this );\r\n\t\t}\r\n\t},\r\n\tcrossVector: {\r\n\t\tvalue: function ( vector ) {\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\t}\r\n\t},\r\n\ttranslate: {\r\n\t\tvalue: function ( v ) {\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\t}\r\n\t},\r\n\trotateX: {\r\n\t\tvalue: function ( angle ) {\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\t}\r\n\t},\r\n\trotateY: {\r\n\t\tvalue: function ( angle ) {\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\t}\r\n\t},\r\n\trotateZ: {\r\n\t\tvalue: function ( angle ) {\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\t}\r\n\t},\r\n\trotateByAxis: {\r\n\t\tvalue: function ( axis, angle ) {\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Plane.prototype, {\r\n\tisIntersectionLine: {\r\n\t\tvalue: function ( line ) {\r\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\t\treturn this.intersectsLine( line );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Quaternion.prototype, {\r\n\tmultiplyVector3: {\r\n\t\tvalue: function ( vector ) {\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Ray.prototype, {\r\n\tisIntersectionBox: {\r\n\t\tvalue: function ( box ) {\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\t\t}\r\n\t},\r\n\tisIntersectionPlane: {\r\n\t\tvalue: function ( plane ) {\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\t\treturn this.intersectsPlane( plane );\r\n\t\t}\r\n\t},\r\n\tisIntersectionSphere: {\r\n\t\tvalue: function ( sphere ) {\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Vector3.prototype, {\r\n\tsetEulerFromRotationMatrix: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\t}\r\n\t},\r\n\tsetEulerFromQuaternion: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\t}\r\n\t},\r\n\tgetPositionFromMatrix: {\r\n\t\tvalue: function ( m ) {\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\t}\r\n\t},\r\n\tgetScaleFromMatrix: {\r\n\t\tvalue: function ( m ) {\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\t}\r\n\t},\r\n\tgetColumnFromMatrix: {\r\n\t\tvalue: function ( index, matrix ) {\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\nTHREE.Vertex = function ( x, y, z ) {\r\n\r\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\treturn new THREE.Vector3( x, y, z );\r\n\r\n};\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Object3D.prototype, {\r\n\teulerOrder: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\treturn this.rotation.order;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\tthis.rotation.order = value;\r\n\t\t}\r\n\t},\r\n\tgetChildByName: {\r\n\t\tvalue: function ( name ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\t}\r\n\t},\r\n\trenderDepth: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\t}\r\n\t},\r\n\ttranslate: {\r\n\t\tvalue: function ( distance, axis ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\t}\r\n\t},\r\n\tuseQuaternion: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE, {\r\n\tPointCloud: {\r\n\t\tvalue: function ( geometry, material ) {\r\n\t\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\t\treturn new THREE.Points( geometry, material );\r\n\t\t}\r\n\t},\r\n\tParticleSystem: {\r\n\t\tvalue: function ( geometry, material ) {\r\n\t\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\t\treturn new THREE.Points( geometry, material );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Light.prototype, {\r\n\tonlyShadow: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowCameraFov: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\tthis.shadow.camera.fov = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraLeft: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\tthis.shadow.camera.left = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraRight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\tthis.shadow.camera.right = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraTop: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\tthis.shadow.camera.top = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraBottom: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraNear: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\tthis.shadow.camera.near = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraFar: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\tthis.shadow.camera.far = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraVisible: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\t\t}\r\n\t},\r\n\tshadowBias: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\tthis.shadow.bias = value;\r\n\t\t}\r\n\t},\r\n\tshadowDarkness: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowMapWidth: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapHeight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.BufferAttribute.prototype, {\r\n\tlength: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.BufferGeometry.prototype, {\r\n\tdrawcalls: {\r\n\t\tget: function () {\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t},\r\n\toffsets: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t},\r\n\taddIndex: {\r\n\t\tvalue: function ( index ) {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\t}\r\n\t},\r\n\taddDrawCall: {\r\n\t\tvalue: function ( start, count, indexOffset ) {\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\t\t}\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\t}\r\n\t},\r\n\tclearDrawCalls: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\t}\r\n\t},\r\n\tcomputeTangents: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\t}\r\n\t},\r\n\tcomputeOffsets: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Material.prototype, {\r\n\twrapAround: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t}\r\n\t},\r\n\twrapRGB: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE, {\r\n\tPointCloudMaterial: {\r\n\t\tvalue: function ( parameters ) {\r\n\t\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t}\r\n\t},\r\n\tParticleBasicMaterial: {\r\n\t\tvalue: function ( parameters ) {\r\n\t\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t}\r\n\t},\r\n\tParticleSystemMaterial:{\r\n\t\tvalue: function ( parameters ) {\r\n\t\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\r\n\tmetal: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.ShaderMaterial.prototype, {\r\n\tderivatives: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\treturn this.extensions.derivatives;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\tthis.extensions.derivatives = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.WebGLRenderer.prototype, {\r\n\tsupportsFloatTextures: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\t\t}\r\n\t},\r\n\tsupportsHalfFloatTextures: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\t\t}\r\n\t},\r\n\tsupportsStandardDerivatives: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\t\t}\r\n\t},\r\n\tsupportsCompressedTextureS3TC: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\t}\r\n\t},\r\n\tsupportsCompressedTexturePVRTC: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\t}\r\n\t},\r\n\tsupportsBlendMinMax: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\t\t}\r\n\t},\r\n\tsupportsVertexTextures: {\r\n\t\tvalue: function () {\r\n\t\t\treturn this.capabilities.vertexTextures;\r\n\t\t}\r\n\t},\r\n\tsupportsInstancedArrays: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\t}\r\n\t},\r\n\tenableScissorTest: {\r\n\t\tvalue: function ( boolean ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\t\tthis.setScissorTest( boolean );\r\n\t\t}\r\n\t},\r\n\tinitMaterial: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\t}\r\n\t},\r\n\taddPrePlugin: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\t}\r\n\t},\r\n\taddPostPlugin: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\t}\r\n\t},\r\n\tupdateShadowMap: {\r\n\t\tvalue: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowMapEnabled: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.enabled;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\tthis.shadowMap.enabled = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapType: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\tthis.shadowMap.type = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapCullFace: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.cullFace;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\tthis.shadowMap.cullFace = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\r\n\twrapS: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\treturn this.texture.wrapS;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\tthis.texture.wrapS = value;\r\n\t\t}\r\n\t},\r\n\twrapT: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\treturn this.texture.wrapT;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\tthis.texture.wrapT = value;\r\n\t\t}\r\n\t},\r\n\tmagFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\treturn this.texture.magFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\tthis.texture.magFilter = value;\r\n\t\t}\r\n\t},\r\n\tminFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\treturn this.texture.minFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\tthis.texture.minFilter = value;\r\n\t\t}\r\n\t},\r\n\tanisotropy: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\treturn this.texture.anisotropy;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\tthis.texture.anisotropy = value;\r\n\t\t}\r\n\t},\r\n\toffset: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\treturn this.texture.offset;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\tthis.texture.offset = value;\r\n\t\t}\r\n\t},\r\n\trepeat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\treturn this.texture.repeat;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\tthis.texture.repeat = value;\r\n\t\t}\r\n\t},\r\n\tformat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\treturn this.texture.format;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\tthis.texture.format = value;\r\n\t\t}\r\n\t},\r\n\ttype: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\treturn this.texture.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\tthis.texture.type = value;\r\n\t\t}\r\n\t},\r\n\tgenerateMipmaps: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\treturn this.texture.generateMipmaps;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/extras/CurveUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.CurveUtils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ShapeUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.ShapeUtils = {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tarea: function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t},\r\n\r\n\ttriangulate: ( function () {\r\n\r\n\t\t/**\r\n\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t * See original code and more information here:\r\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t *\r\n\t\t * ported to actionscript by Zevan Rosser\r\n\t\t * www.actionsnippet.com\r\n\t\t *\r\n\t\t * ported to javascript by Joshua Koo\r\n\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t *\r\n\t\t */\r\n\r\n\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// takes in an contour array and returns\r\n\r\n\t\treturn function ( contour, indices ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\r\n\t\t\tif ( n < 3 ) return null;\r\n\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\t\tvar u, v, w;\r\n\r\n\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar nv = n;\r\n\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnv --;\r\n\r\n\t\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} )(),\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2: ( function () {\r\n\r\n\t\tfunction b2p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p1( t, p ) {\r\n\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p2( t, p ) {\r\n\r\n\t\t\treturn t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2 ) {\r\n\r\n\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3: ( function () {\r\n\r\n\t\tfunction b3p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p1( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p2( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p3( t, p ) {\r\n\r\n\t\t\treturn t * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\nTHREE.Curve.prototype = {\r\n\r\n\tconstructor: THREE.Curve,\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n\t},\r\n\r\n\tupdateArcLengths: function() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t},\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t//var time = Date.now();\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t},\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent: function( t ) {\r\n\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\r\n\t},\r\n\r\n\tgetTangentAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n*/\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};\r\n*/\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\r\n\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\tvar point = points[ i ];\r\n\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/core/Font.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Font = function ( data ) {\r\n\r\n\tthis.data = data;\r\n\r\n};\r\n\r\nTHREE.Font.prototype = {\r\n\r\n\tconstructor: THREE.Font,\r\n\r\n\tgenerateShapes: function ( text, size, divisions ) {\r\n\r\n\t\tfunction createPaths( text ) {\r\n\r\n\t\t\tvar chars = String( text ).split( '' );\r\n\t\t\tvar scale = size / data.resolution;\r\n\t\t\tvar offset = 0;\r\n\r\n\t\t\tvar paths = [];\r\n\r\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\r\n\t\t\t\toffset += ret.offset;\r\n\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn paths;\r\n\r\n\t\t}\r\n\r\n\t\tfunction createPath( c, scale, offset ) {\r\n\r\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\r\n\r\n\t\t\tif ( ! glyph ) return;\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\r\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\r\n\r\n\t\t\tif ( glyph.o ) {\r\n\r\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( size === undefined ) size = 100;\r\n\t\tif ( divisions === undefined ) divisions = 4;\r\n\r\n\t\tvar data = this.data;\r\n\r\n\t\tvar paths = createPaths( text );\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\tnew THREE.Vector2( aX, aY )\r\n\t);\r\n\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve(\r\n\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\tnew THREE.Vector2( aX, aY )\r\n\t);\r\n\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\tif ( this.autoClose ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions ) {\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\tvar points = [];\r\n\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, tx, ty;\r\n\r\n\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\r\n\t\tvar item = this.actions[ i ];\r\n\r\n\t\tvar action = item.action;\r\n\t\tvar args = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase 'moveTo':\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'lineTo':\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'quadraticCurveTo':\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'bezierCurveTo':\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'splineThru':\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'arc':\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ellipse':\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\r\n\tif ( this.autoClose ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar item = inActions[ i ];\r\n\r\n\t\t\tvar args = item.args;\r\n\t\t\tvar action = item.action;\r\n\r\n\t\t\tif ( action === 'moveTo' ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles;\r\n\r\n\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\treturn new THREE.ExtrudeGeometry( this, options );\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\treturn new THREE.ShapeGeometry( this, options );\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar holesPts = [];\r\n\r\n\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t);\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t);\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\t\t\tthis.closed = false;\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( this.closed ) {\r\n\r\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint % l ];\r\n\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = function ( points ) {\r\n\r\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\r\n\r\n\tTHREE.CatmullRomCurve3.call( this, points );\r\n\tthis.type = 'catmullrom';\r\n\tthis.closed = true;\r\n\r\n};\r\n\r\nTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/BoxBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'BoxBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tvar scope = this;\r\n\r\n\t// segments\r\n\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\r\n\tvar indexCount = ( vertexCount / 4 ) * 6;\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\tvar numberOfVertices = 0;\r\n\r\n\t// group variables\r\n\tvar groupStart = 0;\r\n\r\n\t// build each side of the box geometry\r\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\r\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\r\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\r\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\r\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount ( w, h, d ) {\r\n\r\n\t\tvar segments = 0;\r\n\r\n\t\t// calculate the amount of segments for each side\r\n\t\tsegments += w * h * 2; // xy\r\n\t\tsegments += w * d * 2; // xz\r\n\t\tsegments += d * h * 2; // zy\r\n\r\n\t\treturn segments * 4; // four vertices per segments\r\n\r\n\t}\r\n\r\n\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\tvar segmentWidth\t= width / gridX;\r\n\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\tvar widthHalf = width / 2;\r\n\t\tvar heightHalf = height / 2;\r\n\t\tvar depthHalf = depth / 2;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar vertexCounter = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t// now apply vector to vertex buffer\r\n\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t// now apply vector to normal buffer\r\n\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// uvs\r\n\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\r\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tvertexBufferOffset += 3;\r\n\t\t\t\tuvBufferOffset += 2;\r\n\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 1. you need three indices to draw a single face\r\n\t\t// 2. a single segment consists of two faces\r\n\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tindexBufferOffset += 6;\r\n\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t\t// update total number of vertices\r\n\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 2 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.CylinderBufferGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = Math.floor( radialSegments )  || 8;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\t// used to calculate buffer length\r\n\r\n\tvar vertexCount = calculateVertexCount();\r\n\tvar indexCount = calculateIndexCount();\r\n\r\n\t// buffers\r\n\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\r\n\tvar index = 0, indexOffset = 0, indexArray = [], halfHeight = height / 2;\r\n\r\n\t// generate geometry\r\n\r\n\tgenerateTorso();\r\n\r\n\tif( openEnded === false ) {\r\n\r\n\t\tif( radiusTop > 0 ) {\r\n\r\n\t\t\tgenerateCap( true );\r\n\r\n\t\t}\r\n\r\n\t\tif( radiusBottom > 0 ) {\r\n\r\n\t\t\tgenerateCap( false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount () {\r\n\r\n\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += ( ( radialSegments + 1 ) * 2 ) + ( radialSegments * 2 );\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction calculateIndexCount () {\r\n\r\n\t\tvar count = radialSegments * heightSegments * 2 * 3;\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += radialSegments * 2 * 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction generateTorso () {\r\n\r\n\t\tvar x, y;\r\n\t\tvar normal = new THREE.Vector3();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t// this will be used to calculate the normal\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\tvar indexRow = [];\r\n\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t// calculate the radius of the current row\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\t\t\t\tnormal.copy( vertex );\r\n\r\n\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\r\n\t\t\t\tif( ( radiusTop === 0  && y === 0 ) || ( radiusBottom === 0  && y === heightSegments ) ) {\r\n\r\n\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\t\t// save index of vertex in respective row\r\n\t\t\t\tindexRow.push( index );\r\n\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// now save vertices of the row in our index array\r\n\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\tvar i1 = indexArray[ y ][ x ];\r\n\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\r\n\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset++;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction generateCap ( top ) {\r\n\r\n\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t// save the index of the first center vertex\r\n\t\tcenterIndexStart = index;\r\n\r\n\t\t// first we generate the center vertex data of the cap.\r\n\t\t// because the geometry needs one set of uvs per face,\r\n\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tif( top === true ) {\r\n\r\n\t\t\t\tuv.x = x / radialSegments;\r\n\t\t\t\tuv.y = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuv.x = ( x - 1 ) / radialSegments;\r\n\t\t\t\tuv.y = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex++;\r\n\r\n\t\t}\r\n\r\n\t\t// save the index of the last center vertex\r\n\t\tcenterIndexEnd = index;\r\n\r\n\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuvs.setXY( index, u, ( top === true ) ? 1 : 0 );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar c = centerIndexStart + x;\r\n\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\tif( top === true ) {\r\n\r\n\t\t\t\t// face top\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// face bottom\r\n\t\t\t\tindices.setX( indexOffset, i + 1); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n // points - to create a closed torus, one must use a set of points\r\n //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n // segments - the number of circumference segments to create\r\n // phiStart - the starting radian\r\n // phiLength - the radian (0 to 2PI) range of the lathed section\r\n //    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'LatheBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = Math.floor( segments ) || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( segments + 1 ) * points.length;\r\n\tvar indexCount = segments * points.length * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar index = 0, indexOffset = 0, base;\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar i, j;\r\n\r\n\t// generate vertices and uvs\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar sin = Math.sin( phi );\r\n\t\tvar cos = Math.cos( phi );\r\n\r\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\tvertex.y = points[ j ].y;\r\n\t\t\tvertex.z = points[ j ].x * cos;\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / segments;\r\n\t\t\tuv.y = j / ( points.length - 1 );\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + points.length;\r\n\t\t\tvar c = base + points.length + 1;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// generate normals\r\n\r\n\tthis.computeVertexNormals();\r\n\r\n\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\tif( phiLength === Math.PI * 2 ) {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar n1 = new THREE.Vector3();\r\n\t\tvar n2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\r\n\t\t// this is the buffer offset for the last line of vertices\r\n\t\tbase = segments * points.length * 3;\r\n\r\n\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t// select the normal of the vertex in the first line\r\n\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t// select the normal of the vertex in the last line\r\n\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t// average normals\r\n\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t// assign the new values to both normals\r\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t} // next row\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points\r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2PI) range of the lathed section\r\n//    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'RingBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 20;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\r\n\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// some helper variables\r\n\tvar index = 0, indexOffset = 0, segment;\r\n\tvar radius = innerRadius;\r\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\t// values are generate from the inside of the ring to the outside\r\n\r\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, 0, 1 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex++;\r\n\r\n\t\t}\r\n\r\n\t\t// increase the radius for next row of vertices\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = segment;\r\n\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n};\r\n\r\nTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float> // how far from text outline is bevel\r\n * }\r\n */\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar font = parameters.font;\r\n\r\n\tif ( font instanceof THREE.Font === false ) {\r\n\r\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\treturn new THREE.Geometry();\r\n\r\n\t}\r\n\r\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\r\n\t// helper variables\r\n\tvar center = new THREE.Vector3();\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\r\n\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\r\n\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\r\n\r\n\t\t\t// this vector is used to calculate the normal\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\tnormals[ vertexBufferOffset ] = normal.x;\r\n\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\r\n\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\r\n\r\n\t\t\t// uv\r\n\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\r\n\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\r\n\r\n\t\t\t// update offsets\r\n\t\t\tvertexBufferOffset += 3;\r\n\t\t\tuvBufferOffset += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t// update offset\r\n\t\t\tindexBufferOffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * see: http://www.blackpawn.com/texts/pqtorus/\r\n */\r\nTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar i, j, index = 0, indexOffset = 0;\r\n\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\r\n\tvar P1 = new THREE.Vector3();\r\n\tvar P2 = new THREE.Vector3();\r\n\r\n\tvar B = new THREE.Vector3();\r\n\tvar T = new THREE.Vector3();\r\n\tvar N = new THREE.Vector3();\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t// calculate orthonormal basis\r\n\r\n\t\tT.subVectors( P2, P1 );\r\n\t\tN.addVectors( P2, P1 );\r\n\t\tB.crossVectors( T, N );\r\n\t\tN.crossVectors( B, T );\r\n\r\n\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\tB.normalize();\r\n\t\tN.normalize();\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t// now calculate the final vertex position.\r\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / tubularSegments;\r\n\t\t\tuv.y = j / radialSegments;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// this function calculates the current position on the torus curve\r\n\r\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = q / p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed,\r\n\t\ttaper: taper\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar groups = geometry.groups;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar group = groups[ o ];\r\n\r\n\t\t\t\tvar start = group.start;\r\n\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.camera.updateProjectionMatrix();\r\n\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.material = material;\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/three.js\n ** module id = 299\n ** module chunks = 0\n **/"],"sourceRoot":""}