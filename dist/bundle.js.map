{"version":3,"sources":["webpack:///webpack/bootstrap 46d21c8257e962a5d473?2c32","webpack:///./src/ts/app.ts?4e53","webpack:///./src/ts/ThreeProxy.ts?8d08","webpack:///./src/glsl/base.fs.glsl?afa5","webpack:///./src/glsl/base.vs.glsl?c547"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACrCgC;;;;AAEU;;;;AACA;;;;;;AAKnC,SAAc;AAErB,KAAW,UAAG,IAAS,qBAAkB;AACzC,KAAU,SAAG,IAAS,qBAAc,cAAU;AAE9C,KAAW,UAAS,OAAK,KAAqB;AACvC,SAAM,QAAQ,qBAAwB;AACtC,SAAM,QAAQ,qBAAwB;AAE7C,KAAa,YAAS,OAAK,KAAuB;AACzC,WAAM,QAAQ,qBAAwB;AACtC,WAAM,QAAQ,qBAAwB;AAE/C,KAAY;AACD,cAAE,EAAM,MAAK,KAAO,OAAW;AAC7B,gBAAE,EAAM,MAAK,KAAO,OAC/B;AAHa;AAKf,KAAS,QAAG,IAAS,qBAAS;AAC9B,KAAkB,qBAAY,qBAAe;AACjC,eAAU;AACG;AAEtB;AAJ2C,EAAzB;AAMrB,KAAY,WAAG,IAAS,qBAAc,cAAI,KAAO;AACjD,KAAa,YAAG,IAAS,qBAAK,KAAS,UAAkB;AAChD,WAAW,WAAM;AACjB,WAAW,WAAM;AACrB,OAAI,IAYc;;;;;;;;;;;;AAEvB,KAAY,WAAG,IAAS,qBAAiB;AACjC,UAAc,cAAU;AACxB,UAAK,KAAY,YAAS,SAAa;AAE/C,KAAU,SAAG,IAAS,qBAAmB,mBAAI,KAAK,KAAK,KAAK,KAAE,CAAI,KAAO;AAEzE,KAAU,SAAG;AACT,SAAU,SAAS,OAAY,cAAS,OAAY;AAC9C,YAAI,MAAU;AACd,YAC+D;;AAC7D,cAAQ,QAAO,OAAW,YAAQ,OAAY,cAC1D;AAAE;AAEF,KAAY,WAAa;AACzB,KAAW,UAAG,iBAAa;AACjB,YAA0B;AACxB,cAAO,OAAM,OAAU;AACV,2BACzB;AAAE;AAEI,QAAS,WAAU;AAChB;AACF,SAAS,WAAO,KAAQ,O;;;;;;;;;;;mBC3EV,M;;;;;;ACArB,iDAAgD,gCAAgC,wBAAwB,qBAAqB,iDAAiD,qDAAqD,wDAAwD,4FAA4F,uEAAuE,KAAK,C;;;;;;ACAnc,uCAAsC,qBAAqB,uBAAuB,iFAAiF,KAAK,C","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 46d21c8257e962a5d473\n **/\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 46d21c8257e962a5d473\n **/","// import \"babel-polyfill\"; \r\nimport THREE from \"./ThreeProxy\";\r\n\r\nimport base_fs from \"../glsl/base.fs.glsl\";\r\nimport base_vs from \"../glsl/base.vs.glsl\";\r\n\r\nimport loading_fs from \"../glsl/LoadingEffects/loading.fs.glsl\";\r\nimport loading_vs from \"../glsl/LoadingEffects/loading.vs.glsl\";\r\n\r\nconsole.log(base_fs);\r\n\r\nlet manager = new THREE.LoadingManager();\r\nlet loader = new THREE.TextureLoader(manager);\r\n\r\nlet texture = loader.load(\"images/Floor.jpg\");\r\ntexture.wrapS = THREE.MirroredRepeatWrapping;\r\ntexture.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\nlet squareTex = loader.load(\"images/rsquare.png\");\r\nsquareTex.wrapS = THREE.MirroredRepeatWrapping;\r\nsquareTex.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\nlet uniforms = {\r\n    texture: { type: \"t\", value: texture },\r\n    squareTex: { type: \"t\", value: squareTex }\r\n};\r\n\r\nlet scene = new THREE.Scene();\r\nlet shaderMaterial = new THREE.ShaderMaterial({\r\n    uniforms: uniforms,\r\n    vertexShader: base_vs,\r\n    fragmentShader: base_fs\r\n});\r\n\r\nlet geometry = new THREE.PlaneGeometry(1.0, 0.7);\r\nlet planeMesh = new THREE.Mesh(geometry, shaderMaterial);\r\nplaneMesh.translateX(0.5);\r\nplaneMesh.translateY(0.5);\r\nscene.add(planeMesh);\r\n\r\n// let textGeometry = new THREE.TextGeometry(\"Hello World!\", {\r\n//     font: new THREE.Font(\"Tahoma\"),\r\n//     size: 14,\r\n//     height: 10,\r\n//     curveSegments: null,\r\n//     bevelEnabled: false,\r\n//     bevelThickness: 10,\r\n//     bevelSize: 10\r\n// });\r\n// let textMesh = new THREE.Mesh(textGeometry, new THREE.MeshBasicMaterial({ color: \"red\" }));\r\n// scene.add(textMesh);\r\n\r\nlet renderer = new THREE.WebGLRenderer();\r\nrenderer.setClearColor(\"white\");\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nlet camera = new THREE.OrthographicCamera(0.0, 1.0, 1.0, 0.0, -1.0, 1.0);\r\n\r\nlet resize = () => {\r\n    let aspect = window.innerHeight / window.innerWidth;\r\n    camera.top = aspect;\r\n    camera.updateProjectionMatrix();\r\n    // renderer.setSize(window.innerWidth - 20, window.innerHeight - 20);\r\n    renderer.setSize(window.innerWidth, window.innerHeight - 5);\r\n};\r\n\r\nlet prevTime: number = 0;\r\nlet animate = (time: number) => {\r\n    camera.updateProjectionMatrix();\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(animate);\r\n};\r\n\r\nwindow.onresize = resize;\r\nresize();\r\nanimate(prevTime = Date.now());\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/app.ts\n **/\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/app.ts\n **/","export default THREE;\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/ThreeProxy.ts\n **/\n\n\n/** WEBPACK FOOTER **\n ** ./src/ts/ThreeProxy.ts\n **/","module.exports = \"\\r\\nuniform sampler2D texture;\\r\\nuniform sampler2D squareTex;\\r\\nvarying vec2 texPos;\\r\\n\\r\\nvoid main() {\\r\\n    vec3 coord = normalize(gl_FragCoord.xyz);\\r\\n    vec4 texColor = texture2D( texture, texPos );\\r\\n    vec4 squareColor = texture2D(squareTex, texPos);\\r\\n\\r\\n    // gl_FragColor = texColor * squareColor * vec4(coord.x, coord.y, coord.z, 1.0);\\r\\n    gl_FragColor = texColor * vec4(coord.x, coord.y, coord.z, 1.0);\\r\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/glsl/base.fs.glsl\n ** module id = 2\n ** module chunks = 1\n **/\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/glsl/base.fs.glsl\n ** module id = 2\n ** module chunks = 1\n **/","module.exports = \"varying vec2 texPos;\\r\\n\\r\\nvoid main() {\\r\\n    texPos = uv.xy;\\r\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/glsl/base.vs.glsl\n ** module id = 3\n ** module chunks = 1\n **/\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/glsl/base.vs.glsl\n ** module id = 3\n ** module chunks = 1\n **/"],"sourceRoot":""}